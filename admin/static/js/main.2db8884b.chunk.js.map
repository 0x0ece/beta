{"version":3,"sources":["lib/textUtils.tsx","data/queries.ts","data/accounts.tsx","pages/LeadListPage.tsx","pages/AccountListPage.tsx","lib/imageUtils.tsx","pages/AccountPage.tsx","pages/AnalyticsPage.tsx","pages/AppListPage.tsx","pages/DevelopersPage.tsx","pages/DiscountListPage.tsx","pages/HomePage.tsx","pages/LandingPageListPage.tsx","pages/LandingPagePage.tsx","pages/MarketingPage.tsx","pages/NotFoundPage.tsx","pages/PostListPage.tsx","pages/PostPage.tsx","pages/PricingPage.tsx","pages/PricingModelPage.tsx","pages/PricingPlanPage.tsx","pages/ReportsPage.tsx","pages/SettingsPage.tsx","pages/SettingsGeneralPage.tsx","pages/SettingsStaffPage.tsx","pages/SettingsLegalPage.tsx","pages/SettingsCheckoutPage.tsx","pages/SettingsPaymentsPage.tsx","data/payments.tsx","pages/SettingsPayoutListPage.tsx","pages/SettingsPayoutPage.tsx","pages/SettingsTransactionListPage.tsx","pages/SettingsNotificationPage.tsx","pages/SettingsNotificationListPage.tsx","pages/SettingsLanguagesPage.tsx","pages/SettingsBillListPage.tsx","pages/SettingsBillPage.tsx","pages/SettingsFileListPage.tsx","pages/ThemeListPage.tsx","pages/ThemePage.tsx","data/users.tsx","pages/UserListPage.tsx","pages/UserPage.tsx","pages/WebsiteNavigationPage.tsx","pages/WebsitePreferencesPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["toCurrency","dollarCents","Math","floor","toString","replace","toCurrencyWithCents","dollars","abs","toFixed","toShortDate","dateStr","months","0","1","2","3","4","5","6","7","8","9","10","11","ts","Date","parse","now","d","getFullYear","getMonth","getDate","ALL_LEADS","gql","DELETE_LEADS","accounts","id","name","email","account_status","account_plan","account_price","account_freq","account_addons","ltv","create_time","update_time","tags","email_status","lead_status","users","timeline","description","isAdmin","leads","updated","_queryValue","_pagingItems","LeadsResourceList","value","data","queryValue","setQueryValue","useState","selectedItems","setSelectedItems","taggedWith","setTaggedWith","handleQueryValueChange","useCallback","handleTaggedWithRemove","handleQueryValueRemove","handleClearAll","useMutation","deleteLead","promotedBulkActions","content","onAction","console","log","disabled","bulkActions","variables","deleteManyLeadsInput","filter","gte","in","awaitRefetchQueries","refetchQueries","query","ALL_LeadS","update","cache","window","location","reload","appliedFilters","Array","isArray","length","key","label","disambiguateLabel","onRemove","filterControl","filters","onQueryChange","onQueryClear","onClearAll","resourceName","singular","plural","items","idForItem","lead","node","renderItem","item","json","created","_json","JSON","err","leadStatus","new","color","converted","notconverted","emailStatus","sent","pending","scheduled","notsent","map","t","accessibilityLabel","style","display","justifyContent","width","variation","alignment","spacing","status","onSelectionChange","hasMoreItems","getLeadsVariables","queryVariable","LeadFilter","like","paginationVariable","Paging","first","LeadListPage","pagingItems","setPagingItems","useQuery","loading","error","edges","x","stringify","pageInfo","hasNextPage","title","secondaryActions","icon","source","ExportMinor","url","Section","onClick","AccountsResourceList","sortValue","setSortValue","filterStatus","setFilterStatus","handleFilterStatusChange","handleFilterTaggedWithChange","titleHidden","choices","selected","onChange","allowMultiple","shortcut","labelHidden","paddingLeft","accountPlan","customer","size","accountPrice","accountPayment","ltvDisplay","accountStatus","trial","active","pastdue","unpaid","paused","canceled","tagsDisplay","textAlign","distribution","sortOptions","onSortChange","AccountListPage","setSelected","handleTabChange","selectedTabIndex","primaryAction","tabs","onSelect","gravatarSource","md5","trim","toLowerCase","UserAvatar","initials","StaffAvatar","AccountDetails","account","UsersDetails","media","AccountTimeline","note","setNote","handleNoteChange","staff","sectioned","marginBottom","Item","fill","placeholder","connectedRight","type","i","AccountHighlights","AccountBilling","plain","AccountActions","subdued","AccountTags","actions","AccountPage","useParams","useQueryFake","QUERY_ACCOUNT","parseInt","breadcrumbs","InviteMinor","pagination","hasPrevious","hasNext","destructive","secondary","RangeDatePicker","month","year","setDate","start","end","selectedDates","setSelectedDates","handleMonthChange","onMonthChange","multiMonth","allowRange","PopoverForm","popoverActive","setPopoverActive","tagValue","setTagValue","togglePopoverActive","handleTagValueChange","activator","CalendarMinor","maxWidth","maxHeight","onClose","preferredAlignment","fullWidth","fullHeight","options","AnalyticsPlanPage","chartOk","oneThird","marginTop","dangerouslySetInnerHTML","__html","AppListPage","src","alt","height","QUERY_SETTINGS","UPDATE_SETTINGS","DevelopersPage","lines","settingsRecord","settingsItems","DevelopersPageChild","FIELDS","settingsData","e","updateSettings","savedSettings","useRef","isDirty","setIsDirty","current","settings","setSettings","handleDiscard","handleSave","handleFieldChange","field","newSettings","some","checkField","contextualSaveBarMarkup","message","saveAction","discardAction","AnnotatedSection","domain","domain_redirect","enabled","primaryFooterAction","client_id","DiscountListPage","UserPage","subtitle","popoverActions","videoLength","thumbnailUrl","LandingPageListPage","LandingPagePage","MarketingPage","NotFoundPage","PostListPage","PostPage","ToggleRevenue","totalRevenue","onPress","segmented","pressed","TabYearly","yearlyModel","PricingForm","priceModel","tabYear","cols","model","PricingHeader","prices","PricingRow","c","paddingRight","price","priceYear","limitUsers","priceValue","round","priceDisabled","priceYearValue","priceYearDisabled","fakeName","setFakeName","fakePrice","setFakePrice","fakePriceYear","setFakePriceYear","priceField","v","j","PricingTabs","priceModelData","feeFixed","feePercent","setTotalRevenue","tabIndex","setTabIndex","setPriceModel","handleRevenuePress","handleYearlyModelChange","rel","href","className","PricingPage","TabFixed","TabSeats","TabResources","TabAdvanced","Group","condensed","tab","panelID","fitted","ReportsPage","descr","SettingsPage","SettingsMajorTwotone","ProfileMajorTwotone","LegalMajorTwotone","CustomersMajorTwotone","PaymentsMajorTwotone","EmailMajorTwotone","BillingStatementDollarMajorTwotone","AttachmentMajorTwotone","padding","verticalAlign","SettingsGeneralPage","SettingsGeneralPageChild","email_admin","email_site","industry","legal_name","secondaryFooterActions","SettingsStaffPage","SettingsStaffPageChild","lastLogin","role","paddingTop","paddingBottom","SettingsLegalPage","SettingsLegalPageChild","multiline","SettingsCheckoutPage","SettingsCheckoutPageChild","helpText","checked","SettingsPaymentsPage","SettingsPaymentsPageChild","paymentType","optional","PopoverViewRates","columnContentTypes","headings","rows","Header","BankMajorMonotone","minLength","maxLength","prefix","payouts","payoutDetails","transactions","toPayoutStatusTag","PayoutsResourceList","toTableHeader","payout","reverse","split","h","p","date","toTableRow","sortable","defaultSortDirection","initialSortColumnIndex","onSort","SettingsFileListPage","transaction","totals","showTotalsInFooter","TransactionsResourceList","SettingsNotificationListPage","SettingsNotificationListPageChild","ViewMinor","SettingsLanguagesPage","SettingsBillingPage","SettingsBillingPageChild","total","Subsection","NoteMinor","backgroundColor","files","mime","FilesResourceList","prospect_status","alignItems","overflow","whiteSpace","textOverflow","DeleteMinor","ActionsMenu","isLiveTheme","menuItems","disclosure","lastUpdate","themes","live","liveTheme","otherThemes","primary","ThemePage","user_status","user_login_count","UsersResourceList","filterEmailStatus","setFilterEmailStatus","handleFilterEmailStatusChange","setEmailStatus","userStatus","invited","verified","notverified","loginDisplay","UserListPage","ImportMinor","UserDetails","user","UserTimeline","UserSettings","UserActions","UserTags","u","QUERY_USER","NavigationPage","WebsitePreferencesPage","WebsitePreferencesPageChild","showCharacterCount","google_analytics","facebook_pixel","google_tag_manager","password_enabled","password","password_message","IS_EXTERNAL_LINK_REGEX","Link","children","external","rest","ref","test","target","to","client","ApolloClient","uri","RouterSwitch","exact","path","component","HomePage","AnalyticsPage","PricingModelPage","PricingPlanPage","SettingsPayoutListPage","SettingsPayoutPage","SettingsTransactionListPage","SettingsNotificationPage","SettingsBillListPage","SettingsBillPage","ThemeListPage","WebsiteNavigationPage","PageLayout","defaultState","emailFieldValue","nameFieldValue","skipToContentRef","toastActive","setToastActive","isLoading","setIsLoading","searchActive","setSearchActive","searchValue","setSearchValue","userMenuActive","setUserMenuActive","mobileNavigationActive","setMobileNavigationActive","modalActive","setModalActive","setNameFieldValue","setEmailFieldValue","setStoreName","supportSubject","setSupportSubject","supportMessage","setSupportMessage","handleSubjectChange","handleMessageChange","handleNameFieldChange","handleEmailFieldChange","handleSearchResultsDismiss","handleSearchFieldChange","toggleToastActive","toggleUserMenuActive","toggleMobileNavigationActive","toggleModalActive","toastMarkup","onDismiss","userMenuMarkup","UserMenu","open","onToggle","searchResultsMarkup","searchFieldMarkup","SearchField","topBarMarkup","showNavigationToggle","userMenu","searchResultsVisible","searchField","searchResults","onSearchResultsDismiss","onNavigationToggle","useLocation","navigationMarkup","HomeMajorMonotone","matches","pathname","BalanceMajorTwotone","startsWith","subNavigationItems","separator","ThemesMajorTwotone","CashDollarMajorTwotone","DnsSettingsMajorTwotone","KeyMajorTwotone","AnalyticsMajorTwotone","MarketingMajorTwotone","BlogMajorTwotone","LandingPageMajorTwotone","NavigationMajorTwotone","DiscountsMajorTwotone","AppsMajorTwotone","loadingMarkup","skipToContentTarget","modalMarkup","topBar","navigation","showMobileNavigation","onNavigationDismiss","Boolean","hostname","match","ReactDOM","render","basename","theme","colors","background","logo","topBarSource","contextualSaveBarSource","i18n","enTranslations","linkComponent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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SAAU,+DAGdvP,SAAU,CAAC,QACXC,SAAU,iBAAM,QAKtB,kBAAC,IAAO4I,iBAAR,CACE9J,MAAM,6BACNhH,YAAY,mJAEZ,kBAAC,IAAD,CACEgH,MAAM,8BACNgE,WAAS,GAET,kBAAC,IAAD,KACE,qFACA,kBAAC,IAAWoK,MAAZ,KACA,kBAAC,IAAD,CACEnS,MAAM,gCACNmI,YAAY,gBACZgN,UAAW,EACXC,UAAW,GACXC,OAAQ,OACRpQ,SAAU,SAAA3H,GAAK,OAAI8P,EAAkB,WAAY9P,IACjDiX,SAAU,mCAEZ,kBAAC,IAAD,CACEvU,MAAM,oBACNmI,YAAY,kBACZ7K,MAAO,GACP2H,SAAU,SAAA3H,GAAK,OAAI8P,EAAkB,WAAY9P,UAOzD,kBAAC,IAAO+G,QAAR,KACE,kBAAC,IAAD,CACEuC,cAAe,CACbrI,QAAS,OACTC,SAAU2O,EACVxO,UAAWkO,QCrXlB,IAAMyI,GAAU,CAErB,2DACA,2DACA,2DACA,2DACA,6DACA,6DACA,6DACA,8DACA,2DACA,8DACA,2DACA,2DACA,2DACA,6DACA,2DACA,6DACA,8DACA,6DACA,8DACA,2DACA,6DACA,+DACA,8DACA,+DACA,2DACA,6DACA,6DACA,6DACA,6DACA,4DACA,+DACA,2DACA,2DACA,6DACA,8DACA,8DACA,6DACA,2DACA,2DACA,6DACA,2DACA,2DACA,6DACA,6DACA,8DACA,6DACA,8DACA,6DACA,2DACA,2DACA,kEAGWC,GAAgB,CAE3B,gGACA,iGACA,iGACA,mGACA,mGACA,oGAGWC,GAAe,CAE1B,mGACA,mGACA,iGACA,iGACA,iGACA,qGACA,mGACA,iGACA,mGACA,mGACA,oGACA,6GACA,qGACA,mGACA,mGACA,kGACA,iGACA,iGACA,mGACA,iGACA,mGACA,mGACA,iGACA,iGACA,iGACA,iGACA,iGACA,qGACA,mGACA,mGACA,mGACA,iGACA,sGACA,mGACA,iGACA,mGACA,mGACA,mGACA,iGACA,iGACA,gGACA,mGACA,mGACA,qGACA,mGACA,iGACA,mGACA,uGACA,yGACA,oGACA,qG,kLCrF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M,EACNiY,WAAS,EACTpc,MAAM,UACNpD,MAAO,CACL,CACEX,MAAO,SACPiE,KAAMmc,IACNhc,IAAK,UACL0b,QAASrgB,GAASsgB,SAASE,WAAW,YAExC,CACEjgB,MAAO,UACPiE,KAAMoc,IACNjc,IAAK,WACL0b,QAASrgB,GAASsgB,SAASE,WAAW,aAExC,CACEjgB,MAAO,cACPiE,KAAMqc,IACNlc,IAAK,eACL0b,QAASrgB,GAASsgB,SAASE,WAAW,iBAExC,CACEjgB,MAAO,aACPiE,KAAMsc,IACNnc,IAAK,cACL0b,QAASrgB,GAASsgB,SAASE,WAAW,mBAI5C,kBAAC,IAAW5b,QAAZ,CACE6D,MAAI,EACJiY,WAAS,EACTpc,MAAM,SACNpD,MAAO,CACL,CACEX,MAAO,YACPiE,KAAMuc,IACNpc,IAAK,aACL0b,QAASrgB,GAASsgB,SAASE,WAAW,cACtCC,mBAAoB,CAClB,CACElgB,MAAO,YACPoE,IAAK,aACL0b,QAASrgB,GAASsgB,SAASE,WAAW,eAExC,CACEjgB,MAAO,UACPoE,IAAK,WACL0b,QAASrgB,GAASsgB,SAASE,WAAW,eAI5C,CACEjgB,MAAO,MACPiE,KAAMwc,IACNrc,IAAK,aACL0b,QAASrgB,GAASsgB,SAASE,WAAW,eAExC,CACEjgB,MAAO,aACPiE,KAAMyc,IACNtc,IAAK,SACL0b,QAASrgB,GAASsgB,SAASE,WAAW,WAExC,CACEjgB,MAAO,gBACPiE,KAAM0c,IACNvc,IAAK,SACL0b,QAASrgB,GAASsgB,SAASE,WAAW,WAExC,CACEjgB,MAAO,aACPiE,KAAM2c,IACNxc,IAAK,cACL0b,QAASrgB,GAASsgB,SAASE,WAAW,gBAExC,CACEjgB,MAAO,YACPiE,KAAM4c,IACNzc,IAAK,aACL0b,QAASrgB,GAASsgB,SAASE,WAAW,eAExC,CACEjgB,MAAO,OACPiE,KAAM6c,IACN1c,IAAK,QACL0b,QAASrgB,GAASsgB,SAASE,WAAW,aAI5C,kBAAC,IAAW5b,QAAZ,CACE1D,MAAO,CACL,CACEX,MAAO,WACPiE,KAAM0O,IACNvO,IAAK,YACL0b,QAASrgB,GAASsgB,SAASE,WAAW,kBAO1Cc,GAAgBlE,EAAY,kBAAC,IAAD,MAAc,KAE1CmE,GACJ,uBAAGjlB,GAAG,sBAAsBgf,IAAK2B,EAAkBpL,UAAW,IAgD1D2P,IA5CJ,kBAAC,IAAD,CAAMld,MAAM,WACV,kBAAC,IAAD,KACGid,GACD,kBAAC,IAAOnT,iBAAR,CACE9J,MAAM,kBACNhH,YAAY,0DAEZ,kBAAC,IAAD,CAAMgL,WAAS,GACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/H,MAAM,YACN1C,MAAOmf,GACPxX,SAAUiZ,KAEZ,kBAAC,IAAD,CACE7V,KAAK,QACLrI,MAAM,QACN1C,MAAOkf,GACPvX,SAAUkZ,UAUtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAO9Z,QAAR,KACE,kBAAC,IAAD,CAAM0D,WAAS,GACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAqBvC,KAAK,UAC1B,kBAAC,IAAD,CAAkB2G,MAAO,SAWnC,kBAAC,IAAD,CACE2S,KAAMvB,EACNtS,QAASwT,GACT1a,MAAM,kBACN6C,cAAe,CACbrI,QAAS,OACTC,SAAUigB,KAGZ,kBAAC,IAAMpa,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErE,MAAM,UACN1C,MAAOsgB,GACP3Y,SAAU+Y,KAEZ,kBAAC,IAAD,CACEhe,MAAM,UACN1C,MAAOwgB,GACP7Y,SAAUgZ,GACV7J,WAAS,QAOnB,OACE,kBAAC,IAAD,CACE8M,OAAQ/B,GACRgC,WAAYvB,GACZwB,qBAAsB/D,EACtBgE,oBAAqB7C,IAEpB/Q,GACAsT,GACD,kBAACzF,GAAD,MACCoD,GACAuC,IC7iBaK,QACW,cAA7B9hB,OAAOC,SAAS8hB,UAEe,UAA7B/hB,OAAOC,SAAS8hB,UAEhB/hB,OAAOC,SAAS8hB,SAASC,MACvB,2DCbNC,IAASC,OAAO,mBFyjBD,WAkBb,OACE,kBAAC,IAAD,CAAQC,SAAS,UACf,kBAAC,IAAD,CAAaC,MAnBH,CACZC,OAAQ,CACNX,OAAQ,CACNY,WAAY,YAGhBC,KAAM,CACJzf,MAAO,IACP0f,aACE,mGACFC,wBACE,kGACF7d,IAAK,GACLlC,mBAAoB,gBAMOggB,KAAMC,GAAgBC,cAAezH,IAC9D,kBAAC,IAAD,CAAgBQ,OAAQA,IACtB,kBAACmB,GAAD,WE/kBM,MAAS+F,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2db8884b.chunk.js","sourcesContent":["import { Component} from 'react';\n\nexport function toCurrency(dollarCents: any) {\n  return '$' + (Math.floor(dollarCents / 100) || 0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\n//TODO: make robust\nexport function toCurrencyWithCents(dollars: any) {\n  return (dollars >= 0 ? '$' : '-$') + Math.abs(dollars).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport function toShortDate(dateStr: any) {\n  const months: any = {\n    0: 'Jan',\n    1: 'Feb',\n    2: 'Mar',\n    3: 'Apr',\n    4: 'May',\n    5: 'Jun',\n    6: 'Jul',\n    7: 'Aug',\n    8: 'Sep',\n    9: 'Oct',\n    10: 'Nov',\n    11: 'Dec',\n  };\n\n  // '2020-06-12 13:26:24'\n  if (!dateStr) return '';\n  const ts = Date.parse(dateStr);\n  if (!ts) return '';\n\n  const now = new Date(Date.now());\n  const d = new Date(ts);\n\n  // console.log(ts)\n  // console.log(Date.now())\n\n  // console.log(d.getFullYear());\n  // console.log(now.getFullYear());\n  // console.log(d.getMonth());\n  // console.log(now.getMonth());\n  // console.log(d.getDate());\n  // console.log(now.getDate());\n\n  if (d.getFullYear() === now.getFullYear() && d.getMonth() === now.getMonth() && d.getDate() === now.getDate()) {\n    return 'Today';\n  } else if (d.getFullYear() === now.getFullYear()) {\n    return months[d.getMonth()] + ' ' + d.getDate();\n  }\n  return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n}\n","import { gql } from \"apollo-boost\";\n\nconst ALL_LEADS = gql`\n  query($LeadFilter: LeadFilter, $Paging: CursorPaging) {\n    leads(filter: $LeadFilter, paging: $Paging) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      edges {\n        node {\n          id\n          updated\n          email\n          json\n        }\n        cursor\n      }\n    }\n  }\n`;\n\nconst DELETE_LEADS = gql`\n  mutation($deleteManyLeadsInput: DeleteManyLeadsInput!) {\n    deleteManyLeads(input: $deleteManyLeadsInput) {\n      deletedCount\n    }\n  }\n`;\n\nexport {\n  ALL_LEADS,\n  DELETE_LEADS,\n}\n","import { Component} from 'react';\n\nexport const accounts = [\n  {\n    id: 110,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Pro',\n    account_price: 99900,\n    account_freq: 'y',\n    account_addons: true,\n    ltv: 199800,\n    create_time: '2019-05-14',\n    update_time: '2020-06-01',\n    tags: ['security', 'hardware', 'open source', 'VIP'],\n    email_status: 'scheduled',\n    lead_status: 'notconverted',\n    users: [\n      {\n        id: 105,\n        name: 'Conor Patrick',\n        email: 'cp@solokeys.com',\n      },\n      {\n        id: 106,\n        name: 'Haden Patrick',\n        email: 'hp@solokeys.com',\n      },\n      {\n        id: 107,\n        name: 'Nicolas Stalder',\n        email: 'nicolas@solokeys.com',\n      },\n      {\n        id: 110,\n        name: 'Emanuele Cesena',\n        email: 'ec@solokeys.com',\n      },\n    ],\n    timeline: [\n      { create_time: '2020-06-01', description: 'payment successful (1 year)' },\n      { create_time: '2019-06-01', description: 'payment successful (1 year)' },\n      { create_time: '2019-05-29', description: 'Emanuele: talked to them, they\\'ll pay soon' },\n      { create_time: '2019-05-28', description: 'payment failed' },\n      { create_time: '2019-05-28', description: 'trial ended' },\n      { create_time: '2019-05-14', description: 'account verified' },\n      { create_time: '2019-05-14', description: 'account created' },\n    ],\n  },\n  {\n    id: 109,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'trial',\n    account_plan: 'Pro',\n    account_price: 9900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    update_time: '2020-05-31',\n    tags: [],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 108,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-05-17',\n    update_time: '2020-05-31',\n    tags: ['security'],\n    email_status: 'sent',\n    lead_status: 'converted',\n  },\n  {\n    id: 107,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'pastdue',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-17',\n    update_time: '2020-05-31',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 106,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'unpaid',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    update_time: '2020-05-29',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 105,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Enterprise',\n    account_price: 500000,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 500000,\n    create_time: '2020-05-01',\n    update_time: '2020-05-15',\n    tags: ['VIP'],\n    email_status: 'notsent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 106,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    update_time: '2020-05-29',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 104,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    update_time: '2020-05-29',\n    tags: ['security'],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 103,\n    name: 'SoloKeys',\n    email: 'hello@solokeys.com',\n    account_status: 'paused',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    update_time: '2020-05-17',\n    tags: ['VIP'],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 102,\n    name: 'Secrez',\n    email: 'hello@glassword.com',\n    account_status: 'canceled',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    update_time: '2020-05-17',\n    tags: [''],\n    email_status: 'sent',\n    users: [\n      {\n        id: 109,\n        name: 'Francesco Sullo',\n        email: 'sullof@gmail.com',\n      },\n    ],\n  },\n  {\n    id: 101,\n    name: 'Saasform',\n    email: 'hello@saasform.dev',\n    isAdmin: true,\n    account_status: 'active',\n    account_plan: 'Enterprise',\n    account_price: 0,\n    account_freq: 'y',\n    account_addons: true,\n    ltv: 0,\n    update_time: '2020-04-01',\n    create_time: '2020-04-01',\n    email_status: 'sent',\n    users: [\n      {\n        id: 108,\n        name: 'Davide Vernizzi',\n        email: 'davide.vernizzi@gmail.com',\n      },\n      {\n        id: 101,\n        name: 'Pancrazio Auteri',\n        email: 'pancrazio.auteri@gmail.com',\n      },\n      {\n        id: 110,\n        name: 'Emanuele Cesena',\n        email: 'ec@solokeys.com',\n      },\n    ],\n  },\n];\n\n\nexport const leads = [\n  {\n    id: 110,\n    name: 'SoloKeys',\n    email: 'hello11@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Pro',\n    account_price: 99900,\n    account_freq: 'y',\n    account_addons: true,\n    ltv: 199800,\n    create_time: '2019-06-01',\n    updated: '2020-06-01',\n    tags: ['security', 'hardware', 'open source', 'VIP'],\n    email_status: 'scheduled',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 109,\n    name: 'SoloKeys',\n    email: 'hello10@solokeys.com',\n    account_status: 'trial',\n    account_plan: 'Pro',\n    account_price: 9900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    updated: '2020-05-31',\n    tags: [],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 108,\n    name: 'SoloKeys',\n    email: 'hello9@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-05-17',\n    updated: '2020-05-31',\n    tags: ['security'],\n    email_status: 'sent',\n    lead_status: 'converted',\n  },\n  {\n    id: 107,\n    name: 'SoloKeys',\n    email: 'hello8@solokeys.com',\n    account_status: 'pastdue',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-17',\n    updated: '2020-05-31',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 106,\n    name: 'SoloKeys',\n    email: 'hello7@solokeys.com',\n    account_status: 'unpaid',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    updated: '2020-05-29',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 105,\n    name: 'SoloKeys',\n    email: 'hello6@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Enterprise',\n    account_price: 500000,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 500000,\n    create_time: '2020-05-01',\n    updated: '2020-05-15',\n    tags: ['VIP'],\n    email_status: 'notsent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 106,\n    name: 'SoloKeys',\n    email: 'hello5@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    updated: '2020-05-29',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 104,\n    name: 'SoloKeys',\n    email: 'hello4@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 2900,\n    create_time: '2020-03-01',\n    updated: '2020-05-29',\n    tags: ['security'],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 103,\n    name: 'SoloKeys',\n    email: 'hello3@solokeys.com',\n    account_status: 'paused',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    updated: '2020-05-17',\n    tags: ['VIP'],\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n  {\n    id: 102,\n    name: 'SoloKeys',\n    email: 'hello2@solokeys.com',\n    account_status: 'canceled',\n    account_plan: 'Starter',\n    account_price: 2900,\n    account_freq: 'm',\n    account_addons: true,\n    ltv: 0,\n    create_time: '2020-05-31',\n    updated: '2020-05-17',\n    tags: [''],\n    email_status: 'sent',\n    lead_status: 'converted',\n  },\n  {\n    id: 101,\n    name: 'SoloKeys',\n    email: 'hello1@solokeys.com',\n    account_status: 'active',\n    account_plan: 'Enterprise',\n    account_price: 0,\n    account_freq: 'y',\n    account_addons: true,\n    ltv: 0,\n    updated: '2020-04-01',\n    create_time: '2020-04-01',\n    email_status: 'sent',\n    lead_status: 'notconverted',\n  },\n];\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n} from \"@shopify/polaris\";\nimport { ExportMinor, ImportMinor } from \"@shopify/polaris-icons\";\n\nimport { toCurrency, toShortDate } from \"../lib/textUtils\";\n\nimport { ALL_LEADS, DELETE_LEADS } from \"../data/queries\";\nimport { leads } from \"../data/accounts\";\n\nlet _queryValue = \"\";\nlet _pagingItems = 3;\n\nfunction LeadsResourceList({\n  data,\n  queryValue,\n  setQueryValue,\n}) {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [taggedWith, setTaggedWith] = useState(\"\");\n\n  const handleQueryValueChange = useCallback(\n    (value) => {\n      _queryValue = value;\n      return setQueryValue(value);\n    },\n    []\n  );\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const [deleteLead] = useMutation(DELETE_LEADS);\n\n  const resourceName = {\n    singular: \"lead\",\n    plural: \"leads\",\n  };\n\n  const promotedBulkActions = [\n    {\n      content: \"Resend recovery email\",\n      onAction: () => {\n        console.log(\"todo\");\n      },\n      disabled: true\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: \"Delete\",\n      onAction: () => {\n        const idFilter =\n          selectedItems === \"All\"\n            ? { gte: 0 } : { in: selectedItems };\n\n        deleteLead({\n          variables: {\n            deleteManyLeadsInput: {\n              filter: { id: idFilter},\n            },\n          },\n          awaitRefetchQueries: true,\n          refetchQueries: [{ query: ALL_LeadS }],\n          update: (cache, data) => {\n            // Horrible hack to reload the page.\n            // I'm sorry. Fix this please.\n            // A better way is to reload on the `onCompleted`\n            // but there is a bug that prevents it from firing :-(\n            // see here: https://github.com/apollographql/react-apollo/issues/2177\n            window.location.reload()\n          }\n        });\n      },\n    },\n  ];\n\n  // TODO: add filters\n  const filters = [\n    // {\n    //   key: \"filterStatus\",\n    //   label: \"Status\",\n    //   filter: (\n    //     <ChoiceList\n    //       title=\"Account status\"\n    //       titleHidden\n    //       choices={[\n    //         { label: \"Email sent\", value: \"sent\" },\n    //         { label: \"Email not sent\", value: \"notsent\" },\n    //         { label: \"Recovered\", value: \"recovered\" },\n    //         { label: \"Not recovered\", value: \"notrecovered\" },\n    //       ]}\n    //       selected={filterStatus || []}\n    //       onChange={handleFilterStatusChange}\n    //       allowMultiple\n    //     />\n    //   ),\n    //   shortcut: true,\n    // },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove,\n        },\n      ]\n    : [];\n\n  const filterControl = (\n    <Filters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    />\n  );\n\n  if (!data) return \"\";\n\n  return (\n    <ResourceList\n      resourceName={resourceName}\n      items={data[\"leads\"][\"edges\"]}\n      idForItem={(lead)=>lead.node.id}\n      renderItem={renderItem}\n      selectedItems={selectedItems}\n      onSelectionChange={setSelectedItems}\n      promotedBulkActions={promotedBulkActions}\n      bulkActions={bulkActions}\n      hasMoreItems={data[\"leads\"][\"pageInfo\"][\"hasNextPage\"]}\n      filterControl={filterControl}\n    />\n  );\n\n  function renderItem(item) {\n    const { id, email, updated, created, json } = item[\"node\"];\n\n    let _json = null;\n    try {\n      _json = JSON.parse(json);\n    } catch (err) {\n      //console.log(err);\n    }\n\n    const {\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      tags,\n      email_status,\n      lead_status,\n    } = _json ? _json : {};\n\n    const accountPrice = toCurrency(account_price);\n\n    const leadStatusDisplay = {\n      new: {\n        color: 'new',\n        label: \"New\",\n      },\n      converted: {\n        color: \"success\",\n        label: \"Converted\",\n      },\n      notconverted: {\n        color: \"warning\",\n        label: \"Not converted\",\n      },\n    };\n    const leadStatus = leadStatusDisplay[lead_status] || {\n      color: \"attention\",\n      label: \"Unkwnown\",\n    };\n\n    // TODO: use enums or something like this\n    const emailStatusDisplay = {\n      sent: {\n        color: \"success\",\n        label: \"Sent\",\n      },\n      pending: {\n        color: \"warning\",\n        label: \"Not sent\",\n      },\n      scheduled: {\n        color: \"info\",\n        label: \"Scheduled\",\n      },\n      notsent: {\n        color: \"warning\",\n        label: \"Not sent\",\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {\n      color: \"attention\",\n      label: \"Unkwnown\",\n    };\n\n    const tagsDisplay = (tags || []).map((t) => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        accessibilityLabel={`View details for ${email}`}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div style={{ width: \"15%\" }}>{toShortDate(updated)}</div>\n\n          <div style={{ width: \"30%\" }}>\n            <h3>\n              <TextStyle variation=\"strong\">{email}</TextStyle>\n            </h3>\n          </div>\n\n          {/* <div style={{ width: \"30%\" }}>\n            <h3>\n              <TextStyle variation=\"strong\">{id}</TextStyle>\n            </h3>\n          </div> */}\n\n          <div\n            style={{ display: \"flex\", width: \"20%\", justifyContent: \"center\" }}\n          >\n            <Stack alignment=\"center\" spacing=\"extraTight\">\n              <Badge status={emailStatus.color}>{emailStatus.label}</Badge>\n            </Stack>\n          </div>\n\n          <div\n            style={{ display: \"flex\", width: \"20%\", justifyContent: \"center\" }}\n          >\n            <Stack alignment=\"center\" spacing=\"extraTight\">\n              <Badge status={leadStatus.color}>\n                {leadStatus.label}\n              </Badge>\n            </Stack>\n          </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nconst getLeadsVariables = () => {\n  const queryVariable = _queryValue\n    ? {\n        LeadFilter: {\n          email: { like: `%${_queryValue}%` },\n        },\n      }\n    : {};\n\n  const paginationVariable = {\n    Paging: {\n      first: _pagingItems,\n    },\n  };\n\n  return { ...queryVariable, ...paginationVariable }\n};\n\nexport default function LeadListPage() {\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [pagingItems, setPagingItems] = useState(3);\n\n  let { loading, error, data } = useQuery(ALL_LEADS, {\n    variables: getLeadsVariables(),\n  });\n\n  // TODO: do this better\n  if (error) data = {\n    leads: {\n      edges: leads.map(x => ({node: {\n        ...x,\n        json: JSON.stringify({\n          email_status: x.email_status,\n          lead_status: x.lead_status,\n        })\n      }})),\n      pageInfo: {\n        hasNextPage: false,\n      },\n    },\n  };\n\n  return (\n    <Page\n      title=\"Leads\"\n      secondaryActions={[\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: \"Export\",\n          url: \"http://localhost:3000/leads/exportToCsv\"\n        },\n      ]}\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <LeadsResourceList\n              loading={loading}\n              error={error}\n              data={data}\n              queryValue={queryValue}\n              pagingItems={pagingItems}\n              setQueryValue={setQueryValue}\n            />\n          </Card>\n          {data && data[\"leads\"][\"pageInfo\"][\"hasNextPage\"] && (\n            <p onClick={() =>{\n              _pagingItems += 5;\n              return setPagingItems(pagingItems + 5);\n            } }>Show more ...</p>\n          )}\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n} from \"@shopify/polaris\";\nimport {\n  ExportMinor,\n  ImportMinor,\n} from '@shopify/polaris-icons';\n\nimport { toCurrency, toShortDate } from '../lib/textUtils';\nimport { accounts } from '../data/accounts';\n\n\nconst ALL_ACCOUNTS = gql`\n  {\n    accounts {\n      edges { node {\n        id\n        name\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      accounts: accounts,\n    }\n  }\n};\n\n\nfunction AccountsResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterStatusChange = useCallback(value => setFilterStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: \"account\",\n    plural: \"accounts\"\n  };\n\n  const promotedBulkActions = [\n    {\n      content: \"Extend trial\",\n      onAction: () => console.log(\"Todo: implement bulk edit\")\n    },\n    {\n      content: \"Edit accounts\",\n      onAction: () => console.log(\"Todo: implement bulk edit\")\n    }\n  ];\n\n  const bulkActions = [\n    {\n      content: \"Add tags\",\n      onAction: () => console.log(\"Todo: implement bulk add tags\")\n    },\n    {\n      content: \"Remove tags\",\n      onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    },\n    {\n      content: \"Delete accounts\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    {\n      key: \"filterStatus\",\n      label: \"Status\",\n      filter: (\n        <ChoiceList\n          title=\"Account status\"\n          titleHidden\n          choices={[\n            {label: 'Trial', value: 'trial'},\n            {label: 'Active', value: 'active'},\n            {label: 'Past due', value: 'pastdue'},\n            {label: 'Unpaid', value: 'unpaid'},\n            {label: 'Paused', value: 'paused'},\n            {label: 'Canceled', value: 'canceled'},\n          ]}\n          selected={filterStatus || []}\n          onChange={handleFilterStatusChange}\n          allowMultiple\n        />\n      ),\n      shortcut: true\n    },\n    {\n      key: \"taggedWith\",\n      label: \"Tagged with\",\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleFilterTaggedWithChange}\n          labelHidden\n        />\n      ),\n      shortcut: true\n    },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  const filterControl = (\n    <Filters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{ paddingLeft: \"8px\" }}>\n        <Button onClick={() => console.log(\"New filter saved\")}>Save</Button>\n      </div>\n    </Filters>\n  );\n\n  const { loading, error, data } = useQueryFake(ALL_ACCOUNTS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <ResourceList\n      resourceName={resourceName}\n      items={data.accounts}\n      renderItem={renderItem}\n      selectedItems={selectedItems}\n      onSelectionChange={setSelectedItems}\n      promotedBulkActions={promotedBulkActions}\n      bulkActions={bulkActions}\n      sortValue={sortValue}\n      sortOptions={[\n        { label: \"Latest update\", value: \"DATE_MODIFIED_DESC\" },\n        { label: \"Newest\", value: \"DATE_CREATED_DESC\" },\n        { label: \"Oldest\", value: \"DATE_CREATED_ASC\" },\n      ]}\n      onSortChange={selected => {\n        setSortValue(selected);\n        console.log(`Sort option changed to ${selected}.`);\n      }}\n      filterControl={filterControl}\n    />\n  );\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      email,\n      isAdmin,\n      account_status,\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      update_time,\n      create_time,\n      tags,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const accountPlan = `${account_plan}`;\n    const accountPrice = toCurrency(account_price);\n    const accountPayment = `${accountPrice}/${account_freq}`\n\n    const ltvDisplay = toCurrency(ltv);\n\n    const accountStatusDisplay = {\n      trial: {\n        color: 'info',\n        label: 'Trial',\n      },\n      active: {\n        color: 'success',\n        label: 'Active',\n      },\n      pastdue: {\n        color: 'attention',\n        label: 'Past due',\n      },\n      unpaid: {\n        color: 'critical',\n        label: 'Unpaid',\n      },\n      paused: {\n        color: 'default',\n        label: 'Paused',\n      },\n      canceled: {\n        color: 'critical',\n        label: 'Canceled',\n      },\n    };\n    const accountStatus = accountStatusDisplay[account_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        url={`/accounts/${id}`}\n        // media={media}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ width: '50%', display: 'flex', justifyContent: 'space-between' }}>\n          <div style={{ width: '30%' }}>\n            {toShortDate(update_time)}\n          </div>\n\n          <div style={{ width: '50%' }}>\n            <h3>\n              <TextStyle variation=\"strong\">{name}</TextStyle>\n            </h3>\n            <div>{isAdmin ? \"(Staff)\" : email}</div>\n          </div>\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end', width: '20%' }}>\n            <Stack alignment=\"center\" spacing=\"extraTight\">\n              <Badge status={accountStatus.color}>{accountStatus.label}</Badge>\n            </Stack>\n          </div>\n        </div>\n        <div style={{ width: '50%', display: 'flex', justifyContent: 'space-between' }}>\n\n          <div style={{ width: '20%', paddingLeft: 6 }}>\n            <h3>\n              <TextStyle variation=\"strong\">{accountPlan}</TextStyle>\n            </h3>\n            <div>{accountPayment}</div>\n          </div>\n\n          <div style={{ width: '40%', textAlign: 'center' }}>\n            <h3>\n              <TextStyle variation=\"strong\">{ltvDisplay}</TextStyle>\n            </h3>\n            {create_time ? <div>since {toShortDate(create_time)}</div> : null}\n          </div>\n\n          <div style={{ width: '40%' }}>\n            <Stack alignment=\"center\" spacing=\"extraTight\" distribution=\"center\">\n              {tagsDisplay}\n            </Stack>\n          </div>\n        </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function AccountListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  const tabs = [\n    {\n      id: 'all',\n      content: 'All',\n    },\n    {\n      id: 'trials',\n      content: 'Trials',\n    },\n    {\n      id: 'renewed',\n      content: 'Renewed',\n    },\n    {\n      id: 'notrenewed',\n      content: 'Not renewed',\n    },\n  ];\n\n  return (\n    <Page\n      title=\"Accounts\"\n      primaryAction={{content: 'Add account'}}\n      secondaryActions={[\n        // {\n        //   icon: () => <Icon source={ImportMinor} />,\n        //   content: 'Import',\n        // },\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: 'Export',\n        },\n      ]}      \n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\n            </Tabs>\n            <AccountsResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Avatar,\n} from \"@shopify/polaris\";\nimport md5 from 'md5';\n\n\ntype AvatarProps = {\n  email: string,\n  initials: string\n}\n\nfunction gravatarSource(email: string) {\n  if (!email) return '';\n  return 'https://www.gravatar.com/avatar/' + md5(email.trim().toLowerCase()) + '?d=404';\n}\n\nexport function UserAvatar({ email, initials }: AvatarProps) {\n  return <Avatar customer source={gravatarSource(email)} initials={initials} />;\n}\n\nexport function StaffAvatar({ email, initials }: AvatarProps) {\n  return <Avatar source={gravatarSource(email)} initials={initials} />;\n}\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  ResourceItem,\n  TextStyle,\n  Stack,\n  Button,\n  List,\n  TextContainer,\n  ButtonGroup,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\n\nimport { UserAvatar, StaffAvatar } from '../lib/imageUtils';\nimport { toCurrency, toShortDate } from '../lib/textUtils';\nimport { accounts } from '../data/accounts';\n\n\nconst QUERY_ACCOUNT = gql`\n  query GetUser($id: ID!) {\n    account(id: $id) {\n      email\n      isAdmin\n    }\n  }\n`;\n\nfunction useQueryFake(query, {variables: { id }}) {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      account: accounts.filter(i => i.id == id)[0] || accounts[0],\n    }\n  }\n};\n\nfunction AccountDetails({ account }) {\n  const media = <Avatar customer size=\"medium\" name={account.id} />;\n  return (\n    <Card title=\"Account details\">\n      <Card.Section>\n        ...\n      </Card.Section>\n    </Card>\n  );  \n}\n\nfunction UsersDetails({ account }) {\n  return (\n    <Card title=\"Users\">\n      <ResourceList\n        items={account.users || []}\n        renderItem={({ id, name, email, initials }) => (\n          <ResourceItem\n            id={id}\n            url={`/users/${id}`}\n            media={<UserAvatar email={email} />}\n          >\n            {name}\n          </ResourceItem>              \n        )}\n      />  \n    </Card>\n  );  \n}\n\nfunction AccountTimeline({ account }) {\n  const [note, setNote] = useState('');\n\n  const handleNoteChange = useCallback(value => setNote(value), []);\n\n  const staff = <StaffAvatar email=\"\" initials=\"EC\" />;\n\n  return (\n    <Card title=\"Timeline\" sectioned>\n      <div style={{ marginBottom: 32 }}>\n      <Stack alignment=\"center\">\n        {staff}\n        <Stack.Item fill>\n        <TextField\n          placeholder=\"Add a note\"\n          fill\n          value={note}\n          onChange={handleNoteChange}\n          connectedRight={<Button disabled={note === ''}>Post</Button>}\n        />\n        </Stack.Item>\n      </Stack>\n      </div>\n      <List type=\"bullet\">\n        {(account.timeline || []).map((item, i) => (\n          <List.Item key={i}>\n            {toShortDate(item.create_time)} - {item.description}\n          </List.Item>\n        ))}\n      </List>      \n    </Card>\n  );  \n}\n\nfunction AccountHighlights({ account }) {\n  return (\n    <Card title=\"Highlights\" sectioned>\n      ...\n    </Card>\n  );  \n}\n\nfunction AccountBilling({ account }) {\n  return (\n    <Card title=\"Account information\">\n      <Card.Section title=\"Primary contacts\">\n        <p>SoloKeys Team</p>\n        <Button plain>team@solokeys.com</Button>\n        <br/><br/>\n        <p>Emanuele Cesena</p>\n        <Button plain>ec@solokeys.com</Button><br/>\n        <Button plain>(415) 403-8746</Button>\n      </Card.Section>\n      <Card.Section title=\"Billing information\">\n        <p>SoloKeys Inc.</p>\n        <p>2035 Sunset Lake Road</p>\n        <p>Suite B-2</p>\n        <p>Newark, 19702, DE</p>\n        <Button plain>finance@solokeys.com</Button>\n        <p>PO: 3987347</p>\n      </Card.Section>\n    </Card>\n  );  \n}\n\nfunction AccountActions({ account }) {\n  return (\n    <Card title=\"Actions\" subdued>\n      <Card.Section title=\"Extend trial\">\n        <TextContainer>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n          </p>\n          <Button size=\"slim\">Extend trial</Button>\n        </TextContainer>\n      </Card.Section>\n      <Card.Section title=\"Apply discount\">\n        <TextContainer>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n          </p>\n          <Button size=\"slim\">Apply discount</Button>\n        </TextContainer>\n      </Card.Section>\n      <Card.Section title=\"Pause account\">\n        <TextContainer>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n          </p>\n          <Button size=\"slim\">Pause account</Button>\n        </TextContainer>\n      </Card.Section>\n    </Card>\n  );  \n}\n\nfunction AccountTags({ account }) {\n  return (\n    <Card title=\"Tags\" subdued sectioned actions={[{ content: 'View all tags' }]}>\n      <TextField placeholder=\"VIP, upsell, followup\"/>\n    </Card>\n  );  \n}\n\nexport default function AccountPage() {\n  let { id } = useParams();\n  const { loading, error, data } = useQueryFake(QUERY_ACCOUNT, {\n    variables: { id: parseInt(id) }\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const account = data.account;\n\n  return (\n    <Page\n      breadcrumbs={[{ content: \"Accounts\", url: \"/accounts\" }]}\n      title={account.name}\n      // primaryAction={{content: 'Save', disabled: true}}\n      secondaryActions={[\n        {\n          content: \"Resend verification email\",\n          icon: InviteMinor\n        }\n      ]}\n      pagination={{\n        hasPrevious: id < 110,\n        hasNext: id > 101,\n      }}\n    >\n      <Layout>\n        <Layout.Section>\n          <AccountDetails account={account} />\n          <UsersDetails account={account} />\n          <AccountTimeline account={account} />\n          <PageActions\n            primaryAction={{ content: \"Save\" }}\n            secondaryActions={[{ content: \"Delete\", destructive: true }]}\n          />\n        </Layout.Section>\n        <Layout.Section secondary>\n          <AccountHighlights account={account} />\n          <AccountBilling account={account} />\n          <AccountActions account={account} />\n          <AccountTags account={account} />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Card,\n  Page,\n  DatePicker,\n  Button,\n  Popover,\n  FormLayout,\n  Select,\n  TextField,\n  Layout,\n  TextStyle,\n  Icon,\n  Stack,\n  DisplayText,\n} from \"@shopify/polaris\";\nimport {\n  CalendarMinor,\n  ArrowUpMinor,\n} from '@shopify/polaris-icons';\n\n\nfunction RangeDatePicker() {\n  const now = new Date();\n  const [{ month, year }, setDate] = useState({\n    month: now.getMonth()-1,\n    year: now.getFullYear(),\n  });\n  const [selectedDates, setSelectedDates] = useState({\n    start: new Date(),\n    end: new Date()\n  });\n\n  const handleMonthChange = useCallback((month, year) => setDate({ month, year }), []);\n\n  return <DatePicker\n    month={month}\n    year={year}\n    onChange={setSelectedDates}\n    onMonthChange={handleMonthChange}\n    selected={selectedDates}\n    multiMonth={true}\n    allowRange={true}\n  />;\n}\n\nfunction PopoverForm() {\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [tagValue, setTagValue] = useState('');\n\n  const togglePopoverActive = useCallback(\n    () => setPopoverActive((popoverActive) => !popoverActive),\n    [],\n  );\n\n  const handleTagValueChange = useCallback((value) => setTagValue(value), []);\n\n  const activator = (\n    <Stack alignment=\"center\">\n      <Button onClick={togglePopoverActive} icon={<Icon source={CalendarMinor}/>}>\n        Last week\n      </Button>\n      <TextStyle variation=\"subdued\">compared to {'previous week'}</TextStyle>\n    </Stack>\n  );\n\n  return (\n    <div style={{ maxWidth: '70%', maxHeight: 300 }}>\n    <Popover\n      active={popoverActive}\n      activator={activator}\n      onClose={togglePopoverActive}\n      // ariaHaspopup={false}\n      sectioned\n      preferredAlignment=\"left\"\n      fullWidth\n      fullHeight\n    >\n      <FormLayout>\n        <Select label=\"Show all customers where:\" options={['Tagged with']} />\n        <TextField\n          label=\"Tags\"\n          value={tagValue}\n          onChange={handleTagValueChange}\n        />\n        <Button size=\"slim\">Add filter</Button>\n        <RangeDatePicker/>\n      </FormLayout>\n    </Popover>\n    </div>\n  );\n}\n\nexport default function AnalyticsPlanPage() {\n  const chartSuper = '<svg version=\"1.1\" class=\"highcharts-root\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"200\" viewBox=\"0 0 306 200\"><desc>Created with Highcharts 7.2.1</desc><defs><clipPath id=\"highcharts-n2cs8hv-690-\"><rect x=\"0\" y=\"0\" width=\"252\" height=\"157\" fill=\"none\"></rect></clipPath></defs><rect fill=\"#ffffff\" class=\"highcharts-background\" x=\"0\" y=\"0\" width=\"521\" height=\"200\" rx=\"0\" ry=\"0\"></rect><rect fill=\"none\" class=\"highcharts-plot-background\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-grid highcharts-xaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 122.5 8 L 122.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 276.5 8 L 276.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 430.5 8 L 430.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 45.5 8 L 45.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 199.5 8 L 199.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 353.5 8 L 353.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 507.5 8 L 507.5 165\" opacity=\"1\"></path></g><g class=\"highcharts-grid highcharts-yaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 165.5 L 513 165.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 113.5 L 513 113.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 60.5 L 513 60.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 7.5 L 513 7.5\" opacity=\"1\"></path></g><rect fill=\"none\" class=\"highcharts-plot-border\" data-z-index=\"1\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-axis highcharts-xaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 122.5 165 L 122.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 276.5 165 L 276.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 430.5 165 L 430.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 45.5 165 L 45.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 199.5 165 L 199.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 353.5 165 L 353.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 507.5 165 L 507.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-axis-line\" stroke=\"#ccd6eb\" stroke-width=\"1\" data-z-index=\"7\" d=\"M 46 165.5 L 513 165.5\"></path></g><g class=\"highcharts-axis highcharts-yaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-axis-line\" data-z-index=\"7\" d=\"M 46 8 L 46 165\"></path></g><path fill=\"none\" class=\"highcharts-crosshair highcharts-crosshair-thin undefined\" data-z-index=\"2\" stroke=\"rgba(204, 204, 204, 0.5)\" stroke-width=\"5\" style=\"pointer-events:none;\" visibility=\"hidden\" d=\"M 430.5 8 L 430.5 165\"></path><g class=\"highcharts-series-group\" data-z-index=\"3\"><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-0 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-690-)\"><path fill=\"none\" d=\"M 0 142.97466666666668 L 77.062706270627 138.68333333333334 L 154.12541254125 100.47999999999999 L 231.18811881188 43.54133333333333 L 308.25082508251 115.34266666666667 L 385.31353135314 147.16133333333335 L 462.37623762376 104.24799999999999\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgb(223, 227, 232)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 142.97466666666668 L 0 142.97466666666668 L 77.062706270627 138.68333333333334 L 154.12541254125 100.47999999999999 L 231.18811881188 43.54133333333333 L 308.25082508251 115.34266666666667 L 385.31353135314 147.16133333333335 L 462.37623762376 104.24799999999999 L 472.37623762376 104.24799999999999\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-0 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgb(223, 227, 232)\" d=\"M 385 151.16133333333335 A 4 4 0 1 1 385.00399999933336 151.16133133333352 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-1 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-690-)\"><path fill=\"none\" d=\"M 0 128.67092 L 77.062706270627 95.24666666666667 L 154.12541254125 35.237080000000006 L 231.18811881188 81.64 L 308.25082508251 105.71333333333334 L 385.31353135314 147.58 L 462.37623762376 120.576\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgba(156, 106, 222, 0.8)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 128.67092 L 0 128.67092 L 77.062706270627 95.24666666666667 L 154.12541254125 35.237080000000006 L 231.18811881188 81.64 L 308.25082508251 105.71333333333334 L 385.31353135314 147.58 L 462.37623762376 120.576 L 472.37623762376 120.576\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-1 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgba(156, 106, 222, 0.8)\" d=\"M 385 151.58 A 4 4 0 1 1 385.00399999933336 151.5799980000002 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g></g><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-title\" data-z-index=\"4\" style=\"color:#333333;font-size:18px;fill:#333333;\" y=\"22\"></text><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-subtitle\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"22\"></text><text x=\"8\" text-anchor=\"start\" class=\"highcharts-caption\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"204\"></text><g class=\"highcharts-axis-labels highcharts-xaxis-labels\" data-z-index=\"7\"><text x=\"123.06270627063\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 10</tspan></text><text x=\"277.18811881188\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 12</tspan></text><text x=\"431.31353135314\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 14</tspan></text><text x=\"46\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 9</tspan></text><text x=\"200.12541254125\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 11</tspan></text><text x=\"354.25082508251\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 13</tspan></text><text x=\"493.171875\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 15</tspan></text></g><g class=\"highcharts-axis-labels highcharts-yaxis-labels\" data-z-index=\"7\"><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"170\" opacity=\"1\">0</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"118\" opacity=\"1\">250</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"65\" opacity=\"1\">500</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"13\" opacity=\"1\">750</text></g><g class=\"highcharts-label highcharts-tooltip highcharts-color-undefined\" style=\"pointer-events:none;white-space:nowrap;padding:0;\" data-z-index=\"8\" transform=\"translate(321,-9999)\" opacity=\"0\" visibility=\"visible\"><path fill=\"#212B36\" class=\"highcharts-label-box highcharts-tooltip-box\" d=\"M 5 0 L 89 0 C 94 0 94 0 94 5 L 94 104 C 94 109 94 109 89 109 L 5 109 C 0 109 0 109 0 104 L 0 5 C 0 0 0 0 5 0\"></path></g></svg>';\n  const chartOk = '<svg version=\"1.1\" class=\"highcharts-root\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"200\" viewBox=\"0 0 306 200\"><desc>Created with Highcharts 7.2.1</desc><defs><clipPath id=\"highcharts-kyytqz5-386-\"><rect x=\"0\" y=\"0\" width=\"252\" height=\"157\" fill=\"none\"></rect></clipPath></defs><rect fill=\"#ffffff\" class=\"highcharts-background\" x=\"0\" y=\"0\" width=\"306\" height=\"200\" rx=\"0\" ry=\"0\"></rect><rect fill=\"none\" class=\"highcharts-plot-background\" x=\"46\" y=\"8\" width=\"252\" height=\"157\"></rect><g class=\"highcharts-grid highcharts-xaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 45.5 8 L 45.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 128.5 8 L 128.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 211.5 8 L 211.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 295.5 8 L 295.5 165\" opacity=\"1\"></path></g><g class=\"highcharts-grid highcharts-yaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 165.5 L 298 165.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 113.5 L 298 113.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 60.5 L 298 60.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 7.5 L 298 7.5\" opacity=\"1\"></path></g><rect fill=\"none\" class=\"highcharts-plot-border\" data-z-index=\"1\" x=\"46\" y=\"8\" width=\"252\" height=\"157\"></rect><g class=\"highcharts-axis highcharts-xaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 45.5 165 L 45.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 128.5 165 L 128.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 211.5 165 L 211.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 295.5 165 L 295.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-axis-line\" stroke=\"#ccd6eb\" stroke-width=\"1\" data-z-index=\"7\" d=\"M 46 165.5 L 298 165.5\"></path></g><g class=\"highcharts-axis highcharts-yaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-axis-line\" data-z-index=\"7\" d=\"M 46 8 L 46 165\"></path></g><path fill=\"none\" class=\"highcharts-crosshair highcharts-crosshair-thin undefined\" data-z-index=\"2\" stroke=\"rgba(204, 204, 204, 0.5)\" stroke-width=\"5\" style=\"pointer-events:none;\" visibility=\"hidden\" d=\"M 183.5 8 L 183.5 165\"></path><g class=\"highcharts-series-group\" data-z-index=\"3\"><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-0 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-kyytqz5-386-)\"><path fill=\"none\" d=\"M 0 70.65 L 41.584158415842 157 L 83.168316831683 18.316666666666663 L 124.75247524752 65.47946666666667 L 166.33663366337 67.37916666666666 L 207.92079207921 99.43333333333334 L 249.50495049505 95.77523333333335\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgb(223, 227, 232)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 70.65 L 0 70.65 L 41.584158415842 157 L 83.168316831683 18.316666666666663 L 124.75247524752 65.47946666666667 L 166.33663366337 67.37916666666666 L 207.92079207921 99.43333333333334 L 249.50495049505 95.77523333333335 L 259.50495049505 95.77523333333335\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-0 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgb(223, 227, 232)\" d=\"M 137 22.316666666666663 A 4 4 0 1 1 137.00399999933333 22.31666466666683 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-1 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-kyytqz5-386-)\"><path fill=\"none\" d=\"M 0 136.41206666666668 L 41.584158415842 41.343333333333334 L 83.168316831683 29.83 L 124.75247524752 14.653333333333336 L 166.33663366337 75.36 L 207.92079207921 65.41666666666667 L 249.50495049505 95.24666666666667\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgba(156, 106, 222, 0.8)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 136.41206666666668 L 0 136.41206666666668 L 41.584158415842 41.343333333333334 L 83.168316831683 29.83 L 124.75247524752 14.653333333333336 L 166.33663366337 75.36 L 207.92079207921 65.41666666666667 L 249.50495049505 95.24666666666667 L 259.50495049505 95.24666666666667\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-1 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgba(156, 106, 222, 0.8)\" d=\"M 137 33.83 A 4 4 0 1 1 137.00399999933333 33.82999800000017 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g></g><text x=\"153\" text-anchor=\"middle\" class=\"highcharts-title\" data-z-index=\"4\" style=\"color:#333333;font-size:18px;fill:#333333;\" y=\"22\"></text><text x=\"153\" text-anchor=\"middle\" class=\"highcharts-subtitle\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"22\"></text><text x=\"8\" text-anchor=\"start\" class=\"highcharts-caption\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"204\"></text><g class=\"highcharts-axis-labels highcharts-xaxis-labels\" data-z-index=\"7\"><text x=\"46\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 24</tspan></text><text x=\"129.16831683168\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 26</tspan></text><text x=\"212.33663366337\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 28</tspan></text><text x=\"276.890625\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 30</tspan></text></g><g class=\"highcharts-axis-labels highcharts-yaxis-labels\" data-z-index=\"7\"><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"170\" opacity=\"1\">0</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"118\" opacity=\"1\">100</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"65\" opacity=\"1\">200</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"13\" opacity=\"1\">300</text></g><g class=\"highcharts-label highcharts-tooltip highcharts-color-undefined\" style=\"pointer-events:none;white-space:nowrap;padding:0;\" data-z-index=\"8\" transform=\"translate(72,-9999)\" opacity=\"0\" visibility=\"visible\"><path fill=\"#212B36\" class=\"highcharts-label-box highcharts-tooltip-box\" d=\"M 5 0 L 91 0 C 96 0 96 0 96 5 L 96 104 C 96 109 96 109 91 109 L 5 109 C 0 109 0 109 0 104 L 0 5 C 0 0 0 0 5 0\"></path></g></svg>';\n  const chartMeh = '<svg version=\"1.1\" class=\"highcharts-root\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"200\" viewBox=\"0 0 306 200\"><desc>Created with Highcharts 7.2.1</desc><defs><clipPath id=\"highcharts-n2cs8hv-366-\"><rect x=\"0\" y=\"0\" width=\"252\" height=\"157\" fill=\"none\"></rect></clipPath></defs><rect fill=\"#ffffff\" class=\"highcharts-background\" x=\"0\" y=\"0\" width=\"521\" height=\"200\" rx=\"0\" ry=\"0\"></rect><rect fill=\"none\" class=\"highcharts-plot-background\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-grid highcharts-xaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 122.5 8 L 122.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 276.5 8 L 276.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 430.5 8 L 430.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 45.5 8 L 45.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 199.5 8 L 199.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 353.5 8 L 353.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 507.5 8 L 507.5 165\" opacity=\"1\"></path></g><g class=\"highcharts-grid highcharts-yaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 165.5 L 513 165.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 113.5 L 513 113.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 60.5 L 513 60.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 7.5 L 513 7.5\" opacity=\"1\"></path></g><rect fill=\"none\" class=\"highcharts-plot-border\" data-z-index=\"1\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-axis highcharts-xaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 122.5 165 L 122.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 276.5 165 L 276.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 430.5 165 L 430.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 45.5 165 L 45.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 199.5 165 L 199.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 353.5 165 L 353.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 507.5 165 L 507.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-axis-line\" stroke=\"#ccd6eb\" stroke-width=\"1\" data-z-index=\"7\" d=\"M 46 165.5 L 513 165.5\"></path></g><g class=\"highcharts-axis highcharts-yaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-axis-line\" data-z-index=\"7\" d=\"M 46 8 L 46 165\"></path></g><path fill=\"none\" class=\"highcharts-crosshair highcharts-crosshair-thin undefined\" data-z-index=\"2\" stroke=\"rgba(204, 204, 204, 0.5)\" stroke-width=\"5\" style=\"pointer-events:none;\" visibility=\"hidden\" d=\"M 507.5 8 L 507.5 165\"></path><g class=\"highcharts-series-group\" data-z-index=\"3\"><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-0 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-366-)\"><path fill=\"none\" d=\"M 0 100.74166666666667 L 77.062706270627 37.38693333333333 L 154.12541254125 112.51666666666667 L 231.18811881188 112.51666666666667 L 308.25082508251 124.99293333333333 L 385.31353135314 85.43416666666667 L 462.37623762376 111.20833333333334\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgb(223, 227, 232)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 100.74166666666667 L 0 100.74166666666667 L 77.062706270627 37.38693333333333 L 154.12541254125 112.51666666666667 L 231.18811881188 112.51666666666667 L 308.25082508251 124.99293333333333 L 385.31353135314 85.43416666666667 L 462.37623762376 111.20833333333334 L 472.37623762376 111.20833333333334\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-0 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgb(223, 227, 232)\" d=\"M 462 115.20833333333334 A 4 4 0 1 1 462.00399999933336 115.2083313333335 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-1 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-366-)\"><path fill=\"none\" d=\"M 0 113.825 L 77.062706270627 157 L 154.12541254125 87.65833333333333 L 231.18811881188 111.23973333333333 L 308.25082508251 112.18958333333333 L 385.31353135314 128.21666666666667 L 462.37623762376 126.38761666666667\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgba(156, 106, 222, 0.8)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 113.825 L 0 113.825 L 77.062706270627 157 L 154.12541254125 87.65833333333333 L 231.18811881188 111.23973333333333 L 308.25082508251 112.18958333333333 L 385.31353135314 128.21666666666667 L 462.37623762376 126.38761666666667 L 472.37623762376 126.38761666666667\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-1 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgba(156, 106, 222, 0.8)\" d=\"M 462 130.38761666666667 A 4 4 0 1 1 462.00399999933336 130.38761466666685 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g></g><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-title\" data-z-index=\"4\" style=\"color:#333333;font-size:18px;fill:#333333;\" y=\"22\"></text><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-subtitle\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"22\"></text><text x=\"8\" text-anchor=\"start\" class=\"highcharts-caption\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"204\"></text><g class=\"highcharts-axis-labels highcharts-xaxis-labels\" data-z-index=\"7\"><text x=\"123.06270627063\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 18</tspan></text><text x=\"277.18811881188\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 20</tspan></text><text x=\"431.31353135314\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 22</tspan></text><text x=\"46\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 17</tspan></text><text x=\"200.12541254125\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 19</tspan></text><text x=\"354.25082508251\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 21</tspan></text><text x=\"491.890625\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 23</tspan></text></g><g class=\"highcharts-axis-labels highcharts-yaxis-labels\" data-z-index=\"7\"><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"170\" opacity=\"1\">0</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"118\" opacity=\"1\">200</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"65\" opacity=\"1\">400</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"13\" opacity=\"1\">600</text></g><g class=\"highcharts-label highcharts-tooltip highcharts-color-undefined\" style=\"pointer-events:none;white-space:nowrap;padding:0;\" data-z-index=\"8\" transform=\"translate(396,-9999)\" opacity=\"0\" visibility=\"visible\"><path fill=\"#212B36\" class=\"highcharts-label-box highcharts-tooltip-box\" d=\"M 5 0 L 91 0 C 96 0 96 0 96 5 L 96 104 C 96 109 96 109 91 109 L 5 109 C 0 109 0 109 0 104 L 0 5 C 0 0 0 0 5 0\"></path></g></svg>';\n  return (\n    <Page title={\"Analytics\"}>\n      <div style={{ marginBottom: 16 }}>\n        <PopoverForm/>\n      </div>\n      <Layout>\n        <Layout.Section oneThird>\n          <Card title=\"Recurring revenue\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>$6,165</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+6%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Revenue over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartSuper }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Active users\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>298</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+11%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Active users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Website sessions\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>1,226</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"negative\">\n                  <DisplayText>-4%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              New users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartMeh }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Cash collections\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>$1,073</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText></DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Revenue over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"New users\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>17</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+7%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Active users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Conversion rate\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>1.29%</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+32%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              New users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Accounts by plan\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>120</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+6%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Revenue over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"New users by source\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>298</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"positive\">\n                  <DisplayText>+11%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              Active users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Top referrers\" sectioned>\n            <Stack>\n              <Stack.Item fill>\n                <DisplayText>37</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n                <TextStyle variation=\"negative\">\n                  <DisplayText>-4%</DisplayText>\n                </TextStyle>\n              </Stack.Item>\n            </Stack>\n            <div style={{ marginTop: 32 }}>\n              New users over time\n              <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n            </div>\n          </Card>\n        </Layout.Section>\n\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Page,\n  ResourceList,\n  ResourceItem,\n  Stack,\n  Thumbnail,\n  Link,\n  Button,\n} from \"@shopify/polaris\";\n\nexport default function AppListPage() {\n\n  const apps = [\n    {\n      name: 'QuickBooks',\n      icon: 'https://quickbooks.intuit.com/content/dam/intuit/quickbooks/common/qb_thumb.png',\n    },\n    {\n      name: 'Google Ads',\n      icon: 'https://cdn.shopify.com/s/files/applications/a78e004f44cded1b6998e7a6e081a230_200x200.png?1509115597',\n    },\n    {\n      name: 'Pinterest Ads',\n      icon: 'https://cdn.shopify.com/s/files/applications/8a98eae41ba0d6e898e2b322b7ac6202_200x200.png?1568074162',\n    },\n    {\n      name: 'Shogun Page Builder',\n      icon: 'https://cdn.shopify.com/s/files/applications/0ca2c1526ec07b9f52021bd42651b1fd_200x200.png?1570119537',\n    },\n    {\n      name: 'Klaviyo Email Marketing',\n      icon: 'https://cdn.shopify.com/s/files/applications/5edd9000b933a8fa88c152d1e498531f_200x200.png?1440449953',\n    },\n  ];\n\n  return (\n    <Page\n      title={\"Apps\"}\n      primaryAction={{ content: \"Visit the App store\", url: \"/apps\" }}\n    >\n      <Card title=\"Installed apps\">\n        {apps.map((item) => {\n          const {name, icon} = item;\n\n          return (\n            <Card.Section>\n              <Stack alignment=\"center\">\n                <Stack.Item>\n                  <Link><img src={icon} alt={name} style={{ width: 32, height: 32 }} /></Link>\n                </Stack.Item>\n                <Stack.Item fill>\n                  <Link><strong>{name}</strong></Link>\n                </Stack.Item>\n                <Stack.Item>\n                  <Button plain>About</Button>\n                </Stack.Item>\n                <Stack.Item>\n                  <Button destructive plain>Delete</Button>\n                </Stack.Item>\n              </Stack>\n            </Card.Section>\n          );\n\n        })}\n      </Card>\n\n      <Card title=\"Recommended for you\" sectioned>\n        ...\n      </Card>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Link,\n  Button,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function DevelopersPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <DevelopersPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction DevelopersPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const apps = [\n    {\n      name: 'Email/password',\n      icon: 'https://www.gstatic.com/mobilesdk/160409_mobilesdk/images/auth_service_email.svg',\n      enabled: true,\n    },\n    {\n      name: 'Google',\n      icon: 'https://www.gstatic.com/mobilesdk/160512_mobilesdk/auth_service_google.svg',\n      enabled: true,\n    },\n    {\n      name: 'Facebook',\n      icon: 'https://www.gstatic.com/mobilesdk/160409_mobilesdk/images/auth_service_facebook.svg',\n    },\n    {\n      name: 'Twitter',\n      icon: 'https://www.gstatic.com/mobilesdk/160409_mobilesdk/images/auth_service_twitter.svg',\n    },\n    {\n      name: 'Github',\n      icon: 'https://www.gstatic.com/mobilesdk/160409_mobilesdk/images/auth_service_github.svg',\n    },\n    {\n      name: 'Microsoft',\n      icon: 'https://www.gstatic.com/mobilesdk/170404_mobilesdk/auth_service_mslive.svg',\n    },\n    {\n      name: 'Apple',\n      icon: 'https://www.gstatic.com/mobilesdk/190910_mobilesdk/images/auth_service_apple.svg',\n    },\n  ];\n\n  const keys = [\n    {\n      name: 'read-only',\n      client_id: '884d4d800eec25152f2c2d313e76f9c5',\n    },\n    {\n      name: 'read+write',\n      client_id: '5b661b812eb9ad366049af12aaa4db48',\n    },\n  ];\n\n  return (\n    <Page title=\"Developers\">\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Domains\"\n          description=\"The primary domain is where the public site will be served, and the application domain is where users are redirected when they register or sign in.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Primary domain\"\n                placeholder=\"beautifulsaas.com\"\n                value={settings.domain}\n                onChange={value => handleFieldChange(\"domain\", value)}\n              />\n              <TextField\n                label=\"Application domain\"\n                placeholder={\n                  settings.domain\n                    ? `app.${settings.domain}`\n                    : \"app.beautifulsaas.com\"\n                }\n                value={settings.domain_redirect}\n                onChange={value => handleFieldChange(\"domain_redirect\", value)}\n              />\n            </FormLayout>\n          </Card>\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Managed domain\"\n                placeholder={`${settings.name ||\n                  \"beautifulsaas\"}.mysaasform.com`}\n                disabled\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Authentication\"\n          description=\"\"\n        >\n          <Card>\n            {apps.map((item) => {\n              const {name, icon, enabled} = item;\n\n              return (\n                <Card.Section>\n                  <Stack alignment=\"center\">\n                    <Stack.Item>\n                      <Link><img src={icon} alt={name} style={{ width: 32, height: 32 }} /></Link>\n                    </Stack.Item>\n                    <Stack.Item fill>\n                      <Link><strong>{name}</strong></Link>\n                    </Stack.Item>\n                    <Stack.Item>\n                      { enabled\n                        ? <Link><TextStyle variation=\"positive\">Enabled</TextStyle></Link>\n                        : <Link><TextStyle variation=\"subdued\">Disabled</TextStyle></Link>\n                      }\n                    </Stack.Item>\n                  </Stack>\n                </Card.Section>\n              );\n\n            })}\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Secrets & keys\"\n          description=\"\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"JWT public key\"\n                disabled\n                value={'HMPkxobkHXavU3TAESg2yYabn+LO4yZo'}\n                onChange={value =>\n                  handleFieldChange(\"google_tag_manager\", value)\n                }\n              />\n              <TextField\n                label=\"Webhook verification key\"\n                disabled\n                type=\"password\"\n                value={'HMPkxobkHXavU3TAESg2yYabn+LO4yZo'}\n                onChange={value =>\n                  handleFieldChange(\"google_tag_manager\", value)\n                }\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"API keys\"\n          description=\"\"\n        >\n          <Card\n            primaryFooterAction={{content: 'Add'}}\n          >\n            {keys.map((item) => {\n              const {name, client_id} = item;\n\n              return (\n                <Card.Section>\n                  <Stack alignment=\"center\">\n                    <Stack.Item>\n                      <Link><strong>{name}</strong></Link>\n                    </Stack.Item>\n                    <Stack.Item fill>\n                      {client_id}\n                    </Stack.Item>\n                    <Stack.Item>\n                      <Button destructive plain>Delete</Button>\n                    </Stack.Item>\n                  </Stack>\n                </Card.Section>\n              );\n\n            })}\n\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function DiscountListPage() {\n  return <Page title={\"Discounts\"} />;\n}\n","// @ts-nocheck\nimport React from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\n\nexport default function UserPage() {\n  const media = <Avatar customer size=\"medium\" name={\"x\"} />;\n\n  //       <TextContainer sectioned>\n  //       <p>Here's what’s happening today.</p>\n  //       </TextContainer>\n\n  //       <Card title=\"User details\">\n  // <Card.Section>\n\n  // </Card.Section>\n  // <Card.Section>\n  //         <FormLayout>\n  //           <TextField\n  //             label=\"User note\"\n  //             placeholder=\"Add a note\"\n  //             value={''}\n  //             onChange={() => {}}\n  //           />\n  //         </FormLayout>\n  // </Card.Section>\n  //       </Card>\n  const chartSuper = '<svg version=\"1.1\" class=\"highcharts-root\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"200\" viewBox=\"0 0 306 200\"><desc>Created with Highcharts 7.2.1</desc><defs><clipPath id=\"highcharts-n2cs8hv-690-\"><rect x=\"0\" y=\"0\" width=\"252\" height=\"157\" fill=\"none\"></rect></clipPath></defs><rect fill=\"#ffffff\" class=\"highcharts-background\" x=\"0\" y=\"0\" width=\"521\" height=\"200\" rx=\"0\" ry=\"0\"></rect><rect fill=\"none\" class=\"highcharts-plot-background\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-grid highcharts-xaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 122.5 8 L 122.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 276.5 8 L 276.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 430.5 8 L 430.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 45.5 8 L 45.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 199.5 8 L 199.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 353.5 8 L 353.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 507.5 8 L 507.5 165\" opacity=\"1\"></path></g><g class=\"highcharts-grid highcharts-yaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 165.5 L 513 165.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 113.5 L 513 113.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 60.5 L 513 60.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 7.5 L 513 7.5\" opacity=\"1\"></path></g><rect fill=\"none\" class=\"highcharts-plot-border\" data-z-index=\"1\" x=\"46\" y=\"8\" width=\"467\" height=\"157\"></rect><g class=\"highcharts-axis highcharts-xaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 122.5 165 L 122.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 276.5 165 L 276.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 430.5 165 L 430.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 45.5 165 L 45.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 199.5 165 L 199.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 353.5 165 L 353.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 507.5 165 L 507.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-axis-line\" stroke=\"#ccd6eb\" stroke-width=\"1\" data-z-index=\"7\" d=\"M 46 165.5 L 513 165.5\"></path></g><g class=\"highcharts-axis highcharts-yaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-axis-line\" data-z-index=\"7\" d=\"M 46 8 L 46 165\"></path></g><path fill=\"none\" class=\"highcharts-crosshair highcharts-crosshair-thin undefined\" data-z-index=\"2\" stroke=\"rgba(204, 204, 204, 0.5)\" stroke-width=\"5\" style=\"pointer-events:none;\" visibility=\"hidden\" d=\"M 430.5 8 L 430.5 165\"></path><g class=\"highcharts-series-group\" data-z-index=\"3\"><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-0 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-690-)\"><path fill=\"none\" d=\"M 0 142.97466666666668 L 77.062706270627 138.68333333333334 L 154.12541254125 100.47999999999999 L 231.18811881188 43.54133333333333 L 308.25082508251 115.34266666666667 L 385.31353135314 147.16133333333335 L 462.37623762376 104.24799999999999\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgb(223, 227, 232)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 142.97466666666668 L 0 142.97466666666668 L 77.062706270627 138.68333333333334 L 154.12541254125 100.47999999999999 L 231.18811881188 43.54133333333333 L 308.25082508251 115.34266666666667 L 385.31353135314 147.16133333333335 L 462.37623762376 104.24799999999999 L 472.37623762376 104.24799999999999\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-0 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgb(223, 227, 232)\" d=\"M 385 151.16133333333335 A 4 4 0 1 1 385.00399999933336 151.16133133333352 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-1 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-n2cs8hv-690-)\"><path fill=\"none\" d=\"M 0 128.67092 L 77.062706270627 95.24666666666667 L 154.12541254125 35.237080000000006 L 231.18811881188 81.64 L 308.25082508251 105.71333333333334 L 385.31353135314 147.58 L 462.37623762376 120.576\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgba(156, 106, 222, 0.8)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 128.67092 L 0 128.67092 L 77.062706270627 95.24666666666667 L 154.12541254125 35.237080000000006 L 231.18811881188 81.64 L 308.25082508251 105.71333333333334 L 385.31353135314 147.58 L 462.37623762376 120.576 L 472.37623762376 120.576\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-1 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgba(156, 106, 222, 0.8)\" d=\"M 385 151.58 A 4 4 0 1 1 385.00399999933336 151.5799980000002 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g></g><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-title\" data-z-index=\"4\" style=\"color:#333333;font-size:18px;fill:#333333;\" y=\"22\"></text><text x=\"261\" text-anchor=\"middle\" class=\"highcharts-subtitle\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"22\"></text><text x=\"8\" text-anchor=\"start\" class=\"highcharts-caption\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"204\"></text><g class=\"highcharts-axis-labels highcharts-xaxis-labels\" data-z-index=\"7\"><text x=\"123.06270627063\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 10</tspan></text><text x=\"277.18811881188\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 12</tspan></text><text x=\"431.31353135314\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 14</tspan></text><text x=\"46\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 9</tspan></text><text x=\"200.12541254125\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 11</tspan></text><text x=\"354.25082508251\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 13</tspan></text><text x=\"493.171875\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>Feb 15</tspan></text></g><g class=\"highcharts-axis-labels highcharts-yaxis-labels\" data-z-index=\"7\"><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"170\" opacity=\"1\">0</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"118\" opacity=\"1\">250</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"65\" opacity=\"1\">500</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"13\" opacity=\"1\">750</text></g><g class=\"highcharts-label highcharts-tooltip highcharts-color-undefined\" style=\"pointer-events:none;white-space:nowrap;padding:0;\" data-z-index=\"8\" transform=\"translate(321,-9999)\" opacity=\"0\" visibility=\"visible\"><path fill=\"#212B36\" class=\"highcharts-label-box highcharts-tooltip-box\" d=\"M 5 0 L 89 0 C 94 0 94 0 94 5 L 94 104 C 94 109 94 109 89 109 L 5 109 C 0 109 0 109 0 104 L 0 5 C 0 0 0 0 5 0\"></path></g></svg>';\n  const chartOk = '<svg version=\"1.1\" class=\"highcharts-root\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"200\" viewBox=\"0 0 306 200\"><desc>Created with Highcharts 7.2.1</desc><defs><clipPath id=\"highcharts-kyytqz5-386-\"><rect x=\"0\" y=\"0\" width=\"252\" height=\"157\" fill=\"none\"></rect></clipPath></defs><rect fill=\"#ffffff\" class=\"highcharts-background\" x=\"0\" y=\"0\" width=\"306\" height=\"200\" rx=\"0\" ry=\"0\"></rect><rect fill=\"none\" class=\"highcharts-plot-background\" x=\"46\" y=\"8\" width=\"252\" height=\"157\"></rect><g class=\"highcharts-grid highcharts-xaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 45.5 8 L 45.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 128.5 8 L 128.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 211.5 8 L 211.5 165\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" stroke-dasharray=\"4,3\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 295.5 8 L 295.5 165\" opacity=\"1\"></path></g><g class=\"highcharts-grid highcharts-yaxis-grid\" data-z-index=\"1\"><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 165.5 L 298 165.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 113.5 L 298 113.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 60.5 L 298 60.5\" opacity=\"1\"></path><path fill=\"none\" stroke=\"#e6e6e6\" stroke-width=\"1\" data-z-index=\"1\" class=\"highcharts-grid-line\" d=\"M 46 7.5 L 298 7.5\" opacity=\"1\"></path></g><rect fill=\"none\" class=\"highcharts-plot-border\" data-z-index=\"1\" x=\"46\" y=\"8\" width=\"252\" height=\"157\"></rect><g class=\"highcharts-axis highcharts-xaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 45.5 165 L 45.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 128.5 165 L 128.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 211.5 165 L 211.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-tick\" stroke=\"#ccd6eb\" stroke-width=\"1\" d=\"M 295.5 165 L 295.5 170\" opacity=\"1\"></path><path fill=\"none\" class=\"highcharts-axis-line\" stroke=\"#ccd6eb\" stroke-width=\"1\" data-z-index=\"7\" d=\"M 46 165.5 L 298 165.5\"></path></g><g class=\"highcharts-axis highcharts-yaxis\" data-z-index=\"2\"><path fill=\"none\" class=\"highcharts-axis-line\" data-z-index=\"7\" d=\"M 46 8 L 46 165\"></path></g><path fill=\"none\" class=\"highcharts-crosshair highcharts-crosshair-thin undefined\" data-z-index=\"2\" stroke=\"rgba(204, 204, 204, 0.5)\" stroke-width=\"5\" style=\"pointer-events:none;\" visibility=\"hidden\" d=\"M 183.5 8 L 183.5 165\"></path><g class=\"highcharts-series-group\" data-z-index=\"3\"><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-0 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-kyytqz5-386-)\"><path fill=\"none\" d=\"M 0 70.65 L 41.584158415842 157 L 83.168316831683 18.316666666666663 L 124.75247524752 65.47946666666667 L 166.33663366337 67.37916666666666 L 207.92079207921 99.43333333333334 L 249.50495049505 95.77523333333335\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgb(223, 227, 232)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 70.65 L 0 70.65 L 41.584158415842 157 L 83.168316831683 18.316666666666663 L 124.75247524752 65.47946666666667 L 166.33663366337 67.37916666666666 L 207.92079207921 99.43333333333334 L 249.50495049505 95.77523333333335 L 259.50495049505 95.77523333333335\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-0 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgb(223, 227, 232)\" d=\"M 137 22.316666666666663 A 4 4 0 1 1 137.00399999933333 22.31666466666683 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-series highcharts-series-1 highcharts-line-series\" transform=\"translate(46,8) scale(1 1)\" clip-path=\"url(#highcharts-kyytqz5-386-)\"><path fill=\"none\" d=\"M 0 136.41206666666668 L 41.584158415842 41.343333333333334 L 83.168316831683 29.83 L 124.75247524752 14.653333333333336 L 166.33663366337 75.36 L 207.92079207921 65.41666666666667 L 249.50495049505 95.24666666666667\" class=\"highcharts-graph\" data-z-index=\"1\" stroke=\"rgba(156, 106, 222, 0.8)\" stroke-width=\"3\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path><path fill=\"none\" d=\"M -10 136.41206666666668 L 0 136.41206666666668 L 41.584158415842 41.343333333333334 L 83.168316831683 29.83 L 124.75247524752 14.653333333333336 L 166.33663366337 75.36 L 207.92079207921 65.41666666666667 L 249.50495049505 95.24666666666667 L 259.50495049505 95.24666666666667\" visibility=\"visible\" data-z-index=\"2\" class=\"highcharts-tracker-line\" stroke-linejoin=\"round\" stroke=\"rgba(192,192,192,0.0001)\" stroke-width=\"23\"></path></g><g data-z-index=\"0.1\" class=\"highcharts-markers highcharts-series-1 highcharts-line-series highcharts-tracker\" transform=\"translate(46,8) scale(1 1)\"><path fill=\"rgba(156, 106, 222, 0.8)\" d=\"M 137 33.83 A 4 4 0 1 1 137.00399999933333 33.82999800000017 Z\" stroke=\"#ffffff\" stroke-width=\"1\" opacity=\"1\" visibility=\"hidden\"></path></g></g><text x=\"153\" text-anchor=\"middle\" class=\"highcharts-title\" data-z-index=\"4\" style=\"color:#333333;font-size:18px;fill:#333333;\" y=\"22\"></text><text x=\"153\" text-anchor=\"middle\" class=\"highcharts-subtitle\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"22\"></text><text x=\"8\" text-anchor=\"start\" class=\"highcharts-caption\" data-z-index=\"4\" style=\"color:#666666;fill:#666666;\" y=\"204\"></text><g class=\"highcharts-axis-labels highcharts-xaxis-labels\" data-z-index=\"7\"><text x=\"46\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 24</tspan></text><text x=\"129.16831683168\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 26</tspan></text><text x=\"212.33663366337\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 28</tspan></text><text x=\"276.890625\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"middle\" transform=\"translate(0,0)\" y=\"190\" opacity=\"1\"><tspan>May 30</tspan></text></g><g class=\"highcharts-axis-labels highcharts-yaxis-labels\" data-z-index=\"7\"><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"170\" opacity=\"1\">0</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"118\" opacity=\"1\">100</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"65\" opacity=\"1\">200</text><text x=\"31\" style=\"color:#637381;cursor:default;font-size:1.2rem;fill:#637381;\" text-anchor=\"end\" transform=\"translate(0,0)\" y=\"13\" opacity=\"1\">300</text></g><g class=\"highcharts-label highcharts-tooltip highcharts-color-undefined\" style=\"pointer-events:none;white-space:nowrap;padding:0;\" data-z-index=\"8\" transform=\"translate(72,-9999)\" opacity=\"0\" visibility=\"visible\"><path fill=\"#212B36\" class=\"highcharts-label-box highcharts-tooltip-box\" d=\"M 5 0 L 91 0 C 96 0 96 0 96 5 L 96 104 C 96 109 96 109 91 109 L 5 109 C 0 109 0 109 0 104 L 0 5 C 0 0 0 0 5 0\"></path></g></svg>';\n\n  return (\n    <Page title=\" \" subtitle=\"Here's what’s happening today.\">\n      <Layout>\n        <Layout.Section>\n          <Stack distribution=\"fillEvenly\" alignment=\"center\">\n            <Card title=\"Weekly recurring revenue\" sectioned>\n              <Stack>\n                <Stack.Item fill>\n                  <DisplayText>$6,165</DisplayText>\n                </Stack.Item>\n                <Stack.Item>\n                  <TextStyle variation=\"positive\">\n                    <DisplayText>+6%</DisplayText>\n                  </TextStyle>\n                </Stack.Item>\n              </Stack>\n              <div style={{ marginTop: 32, maxWidth: 250 }}>\n                Revenue over time\n                <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartSuper }} />\n              </div>\n            </Card>\n            <Card title=\"Weekly active users\" sectioned>\n              <Stack>\n                <Stack.Item fill>\n                  <DisplayText>298</DisplayText>\n                </Stack.Item>\n                <Stack.Item>\n                  <TextStyle variation=\"positive\">\n                    <DisplayText>+11%</DisplayText>\n                  </TextStyle>\n                </Stack.Item>\n              </Stack>\n              <div style={{ marginTop: 32, maxWidth: 250 }}>\n                Active users over time\n                <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: chartOk }} />\n              </div>\n            </Card>\n          </Stack>\n          <Card />\n\n          <Card sectioned>\n            <p>Action TODO</p>\n            <p>Action TODO</p>\n            <p>Action TODO</p>\n          </Card>\n\n          <MediaCard\n            title=\"Turn your side-project into a business\"\n            primaryAction={{\n              content: \"Learn more\",\n              onAction: () => {}\n            }}\n            description={`In this course, you’ll learn how the Kular family turned their mom’s recipe book into a global business.`}\n            popoverActions={[{ content: \"Dismiss\", onAction: () => {} }]}\n          >\n            <VideoThumbnail\n              videoLength={80}\n              thumbnailUrl=\"https://burst.shopifycdn.com/photos/smiling-businesswoman-in-office.jpg?width=1850\"\n            />\n          </MediaCard>\n\n          <Card title=\"Complete your profile\" sectioned>\n            Go to settings\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Accounts overview\" sectioned>\n            <p>Account #123 - paid</p>\n            <p>Account #123 - paid</p>\n            <p>Account #123 - paid</p>\n          </Card>\n          <Card title=\"Tags\" sectioned></Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function LandingPageListPage() {\n  return <Page title={\"Landing pages\"} />;\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function LandingPagePage() {\n  return (\n    <Page\n      title={\"Landing page\"}\n      breadcrumbs={[{ content: \"Landing pages\", url: \"/pages\" }]}\n    />\n  );\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function MarketingPage() {\n  return <Page title={\"Marketing\"} />;\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function NotFoundPage() {\n  return (\n    <Page\n      breadcrumbs={[{ content: \"Home\", url: \"/\" }]}\n      title={\"Page not found\"}\n    />\n  );\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function PostListPage() {\n  return <Page title={\"Posts\"} />;\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function PostPage() {\n  return (\n    <Page title={\"Post\"} breadcrumbs={[{ content: \"Posts\", url: \"/posts\" }]} />\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  ResourceItem,\n  ResourceList,\n  Stack,\n  Tabs,\n  TextField,\n  TextStyle,\n  ChoiceList,\n  ButtonGroup,\n  TextContainer,\n} from \"@shopify/polaris\";\n\n\nconst MODEL_FIXED = 'fixed';\nconst MODEL_PERSEAT = 'seat';\nconst YEARLY_15 = '15';\nconst YEARLY_2MO = '2mo';\nconst YEARLY_20 = '20';\nconst YEARLY_CUSTOM = 'custom';\n\n\nfunction ToggleRevenue({ totalRevenue, onPress }: any) {\n  const message = totalRevenue\n    ? 'Edit how much your users will pay'\n    : 'This shows how much you\\'ll get, net of transaction fees';\n  return (\n    <Stack alignment=\"center\">\n      <Stack.Item fill>\n        <p>{message}</p>\n      </Stack.Item>\n      <ButtonGroup segmented>\n        <Button pressed={!totalRevenue} onClick={() => { onPress(false) }}>Net revenue</Button>\n        <Button pressed={totalRevenue} onClick={() => { onPress(true) }}>Gross revenue</Button>\n      </ButtonGroup>\n    </Stack>\n  );\n}\n\nfunction TabMonthly() {\n  return (\n    <div>\n    </div>\n  );\n}\n\nfunction TabYearly({ yearlyModel, onChange }: any) {\n  return (\n    <Card.Section>\n      <ChoiceList\n        title=\"Pricing per year:\"\n        choices={[\n          {label: '15% discount', value: YEARLY_15},\n          {label: '2-month discount', value: YEARLY_2MO},\n          {label: '20% discount', value: YEARLY_20},\n          {label: 'Custom prices', value: YEARLY_CUSTOM},\n        ]}\n        selected={yearlyModel}\n        onChange={onChange}\n      />\n    </Card.Section>\n  );\n}\n\n\nfunction PricingForm({ priceModel, tabYear, totalRevenue }: any) {\n  let cols: Array<string> = [];\n  if (priceModel.model === MODEL_FIXED) {\n    cols = [\n      'Name',\n      'Price ' + (!tabYear ? '(month)' : '(year)'),\n      // 'Price (year)',\n      'User limit',\n      '' // Edit,\n    ];\n  }\n\n  return (\n    <Card.Section>\n      <PricingHeader cols={cols} />\n      {(priceModel.prices || []).map((item: any) => (\n        <PricingRow\n          priceModel={priceModel}\n          item={item}\n          cols={cols}\n          tabYear={tabYear}\n          totalRevenue={totalRevenue}\n        />\n      ))}\n    </Card.Section>\n  );\n}\n\nfunction PricingHeader({ cols, tabYear }: any) {\n  return (\n    <div>\n      {cols.map((c: string) => (\n        <div style={{ display: 'inline-block', width: (100 / cols.length)+'%', marginBottom: 10, paddingRight: 15 }}>\n          {c}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction PricingRow({ priceModel, item, cols, tabYear, totalRevenue }: any) {\n  const { id, name, price, priceYear, limitUsers } = item;\n\n  const priceValue = Math.round(price * (1 - 0.049)) - 0.30 || price;\n  const priceDisabled = !totalRevenue;\n\n  let priceYearValue = priceYear;\n  let priceYearDisabled = !totalRevenue;\n  switch(priceModel.yearlyModel[0]) {\n    case YEARLY_15:\n      priceYearValue = Math.round(price * 12 * (1-0.15));\n      priceYearDisabled = true;\n      break;\n    case YEARLY_2MO:\n      priceYearValue = price * 10;\n      priceYearDisabled = true;\n      break;\n    case YEARLY_20:\n      priceYearValue = Math.round(price * 12 * (1-0.20));\n      priceYearDisabled = true;\n      break;\n  }\n  if (!totalRevenue) {\n    priceYearValue = Math.round(priceYearValue * (1 - 0.049)) - 0.30;\n  }\n  if (''+priceYearValue === 'NaN' || ''+(price * 0.1) === 'NaN') {\n    priceYearValue = price;\n    priceYearDisabled = true;\n  }\n\n  const [fakeName, setFakeName] = useState(name);\n  const [fakePrice, setFakePrice] = useState(price);\n  const [fakePriceYear, setFakePriceYear] = useState(priceYear);\n\n  const priceField = tabYear\n    ? <TextField labelHidden label=\"Price (year)\" value={priceYearDisabled ? ''+priceYearValue : fakePriceYear} onChange={(v) => setFakePriceYear(v)} disabled={priceYearDisabled} />\n    : <TextField labelHidden label=\"Price (month)\" value={priceDisabled ? ''+priceValue : fakePrice} onChange={(v) => setFakePrice(v)} disabled={priceDisabled} />;\n\n  return (\n    <div>\n      {cols.map((c: string, j: number) => (\n        <div style={{ display: 'inline-block', width: (100 / cols.length)+'%', marginBottom: 10, paddingRight: 15 }}>\n          {(j === 0) ? <TextField labelHidden label=\"Name\" value={fakeName} onChange={(v) => setFakeName(v)} /> : null}\n          {(j === 1) ? priceField : null}\n          {(j === 2) ? <TextField labelHidden label=\"User limit\" value={limitUsers} placeholder=\"(unlimited)\" onChange={() => {}} /> : null}\n          {(j === 3) ? <div style={{ textAlign: 'right' }}><Button size=\"slim\" url={`/pricing/plans/${id}`}>Edit details</Button></div> : null}\n        </div>\n      ))}\n    </div>\n  );\n  return (\n    <ResourceItem\n      id={id}\n      url={''}\n      accessibilityLabel={`View details for ${name}`}\n    >\n      <FormLayout>\n        <FormLayout.Group condensed>\n          <TextField labelHidden label=\"Name\" value={name} onChange={() => {}} />\n          <TextField labelHidden label=\"Price\" value={price} onChange={() => {}} />\n          <TextField labelHidden label=\"User limit\" value={limitUsers} placeholder=\"(unlimited)\" onChange={() => {}} />\n        </FormLayout.Group>\n      </FormLayout>\n    </ResourceItem>\n  );\n}\n\n\nfunction PricingTabs() {\n  const priceModelData = {\n    model: MODEL_FIXED,\n    yearlyModel: [YEARLY_2MO],\n    feeFixed: 30,\n    feePercent: 4.9,\n    prices: [\n      {\n        id: 1,\n        name: 'Starter',\n        price: '29',\n        priceYear: '299',\n        limitUsers: '5',\n      },\n      {\n        id: 4,\n        name: 'Pro',\n        price: '99',\n        priceYear: '999',\n      },\n      // {\n      //   id: 2,\n      //   name: 'Old Pro',\n      //   price: '79',\n      //   priceYear: '799',\n      //   enabled: false,\n      // },\n      {\n        id: 3,\n        name: 'Enterprise',\n        price: 'Contact us',\n      },\n    ]\n  };\n\n  const [totalRevenue, setTotalRevenue] = useState(true);\n  const [tabIndex, setTabIndex] = useState(0);\n  const [priceModel, setPriceModel] = useState(priceModelData);\n\n  const handleRevenuePress = useCallback(\n    (value) => setTotalRevenue(!!value),\n    [],\n  );\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setTabIndex(selectedTabIndex),\n    [],\n  );\n  const handleYearlyModelChange = useCallback(\n    (value) => setPriceModel({\n        ...priceModel,\n        yearlyModel: value,\n    }),\n    [],\n  );\n\n  const tabs = [\n    {\n      id: 'monthly',\n      content: 'Monthly',\n      accessibilityLabel: '',\n    },\n    {\n      id: 'yearly',\n      accessibilityLabel: '',\n      content: 'Yearly',\n    },\n  ];\n  const tabYear = (tabIndex !== 0);\n\n  return (\n    <div>\n      <Card>\n        <Card.Section>\n          <ToggleRevenue totalRevenue={totalRevenue} onPress={handleRevenuePress} />\n        </Card.Section>\n        <Tabs tabs={tabs} selected={tabIndex} onSelect={handleTabChange}>\n          {tabYear ? <TabYearly yearlyModel={priceModel.yearlyModel} onChange={handleYearlyModelChange} /> : null}\n        </Tabs>\n\n        <PricingForm priceModel={priceModel} tabYear={tabYear} totalRevenue={totalRevenue} />\n      </Card>\n\n      <Card title=\"Preview\" sectioned>\n        <link rel=\"stylesheet\" href=\"https://getbootstrap.com/docs/4.0/dist/css/bootstrap.css\" />\n        <div style={{ width: '100%' }} dangerouslySetInnerHTML={{ __html: '<style>body, p { font-size: 14px!important; line-height: 2rem; margin: 0; }</style>' }} />\n        <div className=\"xcontainer\">\n          <br/>\n          <div className=\"card-deck mb-3 text-center\">\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Starter</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">$29 <small className=\"text-muted\">/ mo</small></h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>5 users included</li>\n                  <li>Email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-outline-primary\">Get started</button>\n              </div>\n            </div>\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Pro</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">$99 <small className=\"text-muted\">/ mo</small></h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>Unlimited users</li>\n                  <li>Priority email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\">Get started</button>\n              </div>\n            </div>\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Enterprise</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">&nbsp;</h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>Unlimited users</li>\n                  <li>Phone and email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\">Contact us</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default function PricingPage() {\n  return (\n  \t<Page\n      title={\"Pricing\"}\n      primaryAction={{\n        content: 'Edit pricing model',\n        url: '/pricing/models',\n      }}\n    >\n  \t  <PricingTabs/>\n  \t</Page>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  ResourceItem,\n  ResourceList,\n  Stack,\n  Tabs,\n  TextField,\n  TextStyle,\n  Layout,\n  FooterHelp,\n  Link,\n  Badge,\n} from \"@shopify/polaris\";\n\n\nexport default function PricingPage() {\n  return (\n  \t<Page\n      title={\"Pricing models\"}\n      breadcrumbs={[{ content: \"Pricing\", url: \"/pricing\" }]}\n    >\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Pricing models\"\n          description=\"Choose the pricing model for your SaaS.\"\n        >\n          <Card>\n            <Card.Section\n              title=\"Fixed\"\n              // actions={[{ content: , disabled: true }]}\n            >\n              <Stack>\n                <Stack.Item fill>\n                  <p>Fixed tiers. Customer pays a fixed amount.</p>\n                  <p>Example: Starter at $29/mo (max 5 users) vs Pro at $99/mo.</p>\n                </Stack.Item>\n                <Stack.Item>\n                  <Badge status=\"success\">Active</Badge>\n                </Stack.Item>\n              </Stack>\n            </Card.Section>\n            <Card.Section\n              title=\"Seat-based\"\n              // actions={[{ content: 'Select' }]}\n            >\n              <Stack>\n                <Stack.Item fill>\n                  <p>Variable tiers. Customer pays by number of users.</p>\n                  <p>Example: Starter at $29/mo (first 5 users) + $5/user/mo.</p>\n                </Stack.Item>\n                <Stack.Item>\n                  <Button size=\"slim\">Select</Button>\n                </Stack.Item>\n              </Stack>\n            </Card.Section>\n            <Card.Section\n              title=\"Usage-based\"\n              subdued\n              // actions={[{ content: 'Select', disabled: true }]}\n            >\n              <Stack>\n                <Stack.Item fill>\n                  <p>Variable tiers. Customer pays by resource usage.</p>\n                  <p>Example: Starter at $29/mo (includes 5GB data) + $5/GB/mo.</p>\n                </Stack.Item>\n                <Stack.Item>\n                  <Badge>Coming soon</Badge>\n                </Stack.Item>\n              </Stack>\n            </Card.Section>\n            <Card.Section\n              title=\"Advanced\"\n              subdued\n              // actions={[{ content: 'Select', disabled: true }]}\n            >\n              <Stack>\n                <Stack.Item fill>\n                  <p>Go crazy.</p>\n                </Stack.Item>\n                <Stack.Item>\n                  <Badge>Coming soon</Badge>\n                </Stack.Item>\n              </Stack>\n            </Card.Section>\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n\n      <FooterHelp>\n        Learn more about{' '}\n        <Link url=\"https://help.saasform.dev/\">\n          pricing models\n        </Link>\n      </FooterHelp>\n  \t</Page>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport { Button, Card, FormLayout, Page, ResourceItem, ResourceList, Stack, Tabs, TextField, TextStyle } from \"@shopify/polaris\";\n\n\nfunction TabFixed() {\n  return (\n    <div>\n      <p>Fixed tiers. Customer pays a fixed amount.</p>\n      <p>Example: Starter at $29/mo (max 5 users) vs Pro at $99/mo.</p>\n    </div>\n  );\n}\n\nfunction TabSeats() {\n  return (\n    <div>\n      <p>Variable tiers. Customer pays by number of users.</p>\n      <p>Example: Starter at $29/mo (first 5 users) + $5/user/mo.</p>\n    </div>\n  );\n}\n\nfunction TabResources() {\n  return (\n    <div>\n      <p>Variable tiers. Customer pays by resource usage. COMING SOON.</p>\n      <p>Example: Starter at $29/mo (includes 5GB data) + $5/GB/mo.</p>\n    </div>\n  );\n}\n\nfunction TabAdvanced() {\n  return (\n    <div>\n      <p>Go crazy. COMING SOON.</p>\n    </div>\n  );\n}\n\nfunction renderItem(item: any) {\n  const { id, name, price, limitUsers } = item;\n  // const media = null;\n  // const shortcutActions = null;\n  return (\n    <ResourceItem\n      id={id}\n      url={''}\n      accessibilityLabel={`View details for ${name}`}\n    >\n      <FormLayout>\n        <FormLayout.Group condensed>\n          <TextField labelHidden={id > 0} label=\"Name\" value={name} onChange={() => {}} />\n          <TextField labelHidden={id > 0} label=\"Price (monthly)\" value={price} onChange={() => {}} />\n          <TextField labelHidden={id > 0} label=\"User limit\" value={limitUsers} placeholder=\"(unlimited)\" onChange={() => {}} />\n        </FormLayout.Group>\n      </FormLayout>\n    </ResourceItem>\n  );\n}\n\n\nfunction PricingTabs() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  const tabs = [\n    {\n      id: 'fixed',\n      content: 'Fixed',\n      accessibilityLabel: '',\n      panelID: 'all-customers-content',\n    },\n    {\n      id: 'seat-based',\n      content: 'Seat-based',\n      panelID: 'repeat-customers-content',\n    },\n    {\n      id: 'usage-based',\n      content: 'Usage-based',\n      panelID: 'prospects-content',\n    },\n    {\n      id: 'advanced',\n      content: 'Advanced',\n      panelID: 'prospects-content',\n    },\n  ];\n\n  const prices = [\n    {\n      id: 0,\n      name: 'Starter',\n      price: '29',\n      limitUsers: '5',\n    },\n    {\n      id: 1,\n      name: 'Pro',\n      price: '99',\n    },\n    {\n      id: 2,\n      name: 'Enterprise',\n      price: 'Contact us',\n    },\n  ]\n\n  let tab;\n  switch(selected) {\n  \tcase 0:\n  \t  tab = <TabFixed/>;\n  \t  break;\n    case 1:\n      tab = <TabSeats/>;\n      break;\n    case 2:\n      tab = <TabResources/>;\n      break;\n    case 3:\n      tab = <TabAdvanced/>;\n      break;\n  \tdefault:\n  \t  return null;\n  }\n\n  const resourceName = {\n    singular: \"tier\",\n    plural: \"tiers\"\n  };\n\n  return (\n    <div>\n      <Card>\n        <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange} fitted>\n          <Card.Section title={tabs[selected].content}>\n            {tab}\n          </Card.Section>\n        </Tabs>\n        <ResourceList\n          // resourceName={resourceName}\n          items={prices}\n          renderItem={renderItem}\n          // selectable\n          // alternateTool={<Button>Add tier</Button>}\n\n\n          // selectedItems={selectedItems}\n          // onSelectionChange={setSelectedItems}\n          // promotedBulkActions={promotedBulkActions}\n          // bulkActions={bulkActions}\n          // sortValue={sortValue}\n          // sortOptions={[\n          //   { label: \"Newest update\", value: \"DATE_MODIFIED_DESC\" },\n          //   { label: \"Oldest update\", value: \"DATE_MODIFIED_ASC\" }\n          // ]}\n          // onSortChange={selected => {\n          //   setSortValue(selected);\n          //   console.log(`Sort option changed to ${selected}.`);\n          // }}\n          // filterControl={filterControl}\n        />\n\n      </Card>\n\n      <Card title=\"Preview\" sectioned>\n        <div className=\"container\">\n          <br/>\n          <div className=\"card-deck mb-3 text-center\">\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Starter</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">$29 <small className=\"text-muted\">/ mo</small></h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>5 users included</li>\n                  <li>Email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-outline-primary\">Get started</button>\n              </div>\n            </div>\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Pro</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">$99 <small className=\"text-muted\">/ mo</small></h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>Unlimited users</li>\n                  <li>Priority email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\">Get started</button>\n              </div>\n            </div>\n            <div className=\"card mb-4 box-shadow\">\n              <div className=\"card-header\">\n                <h4 className=\"my-0 font-weight-normal\">Enterprise</h4>\n              </div>\n              <div className=\"card-body\">\n                <h1 className=\"card-title pricing-card-title\">&nbsp;</h1>\n                <ul className=\"list-unstyled mt-3 mb-4\">\n                  <li>Unlimited users</li>\n                  <li>Phone and email support</li>\n                  <li>Help center access</li>\n                </ul>\n                <button type=\"button\" className=\"btn btn-lg btn-block btn-primary\">Contact us</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default function PricingPage() {\n  return (\n  \t<Page\n      title={\"Pricing\"}\n      primaryAction={{\n        content: 'Edit pricing model',\n        url: '/pricing/model',\n      }}\n    >\n  \t  <PricingTabs/>\n  \t</Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Page,\n} from \"@shopify/polaris\";\n\nexport default function ReportsPage() {\n  return (\n    <Page title={\"Reports\"}>\n      <Card>\n      </Card>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Page,\n  Card,\n  Layout,\n  ResourceItem,\n  ResourceList,\n  Stack,\n  Icon,\n  Link,\n} from \"@shopify/polaris\";\nimport {\n  SettingsMajorTwotone,\n  PaymentsMajorTwotone,\n  LegalMajorTwotone,\n  CustomersMajorTwotone,\n  EmailMajorTwotone,\n  GlobeMajorTwotone,\n  AttachmentMajorTwotone,\n  BillingStatementDollarMajorTwotone,\n  ProfileMajorTwotone,\n} from \"@shopify/polaris-icons\";\n\nfunction renderItem({ label, descr, icon, url }: any) {\n  return (\n    <ResourceItem\n      id=''\n      url={url}\n      media={<Icon source={icon} color=\"inkLighter\" />}\n    >\n      <strong>{label}</strong>\n      <p>{descr}</p>\n    </ResourceItem>\n  );\n}\n\nexport default function SettingsPage() {\n  const items = [\n    [\n      {\n        label: 'General',\n        descr: 'View and update your account details and plan.',\n        icon: SettingsMajorTwotone,\n        url: '/settings/general',\n      },\n      {\n        label: 'Staff',\n        descr: 'View and manage your staff accounts.',\n        icon: ProfileMajorTwotone,\n        url: '/settings/staff',\n      },\n      {\n        label: 'Legal',\n        descr: 'Manage your legal pages.',\n        icon: LegalMajorTwotone,\n        url: '/settings/legal',\n      },\n    ],\n    [\n      {\n        label: 'Signup and checkout',\n        descr: 'Customize your online checkout process.',\n        icon: CustomersMajorTwotone,\n        url: '/settings/checkout',\n      },\n      {\n        label: 'Payments',\n        descr: 'Enable and manage your payment providers.',\n        icon: PaymentsMajorTwotone,\n        url: '/settings/payments',\n      },\n      {\n        label: 'Notifications',\n        descr: 'Manage notifications sent to you and your customers.',\n        icon: EmailMajorTwotone,\n        url: '/settings/notifications',\n      },\n    ],\n    [\n      /*{\n        label: 'Languages',\n        descr: 'Manage the languages your customers can view on your site.',\n        icon: GlobeMajorTwotone,\n        url: '/settings/languages',\n      },*/\n      {\n        label: 'Billing',\n        descr: 'Manage your billing information and view your invoices.',\n        icon: BillingStatementDollarMajorTwotone,\n        url: '/settings/bills',\n      },\n      {\n        label: 'Files',\n        descr: 'Upload images, videos, and documents.',\n        icon: AttachmentMajorTwotone,\n        url: '/settings/files',\n      },\n    ],\n  ];\n\n  return (\n    <Page title=\"Settings\">\n      <Card>\n        <div style={{ padding: 20 }}>\n          <div style={{ width: '33.3%', display: 'inline-block', verticalAlign: 'top' }}>\n            {items[0].map(renderItem)}\n          </div>\n          <div style={{ width: '33.3%', display: 'inline-block', verticalAlign: 'top' }}>\n            {items[1].map(renderItem)}\n          </div>\n          <div style={{ width: '33.4%', display: 'inline-block', verticalAlign: 'top' }}>\n            {items[2].map(renderItem)}\n          </div>\n        </div>\n      </Card>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Select,\n  Button,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsGeneralPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsGeneralPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction SettingsGeneralPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const industryOptions = [\n    {label: 'Finance', value: 'finance'},\n    {label: 'Internet', value: 'internet'},\n    {label: 'Security', value: 'security'},\n  ];\n\n  return (\n    <Page\n      title={\"General\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Details\"\n          description=\"The title and meta description help define how your site shows up on search engines.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Name\"\n                // maxLength={70}\n                // showCharacterCount\n                value={settings.name}\n                onChange={value => handleFieldChange(\"name\", value)}\n              />\n              <FormLayout.Group>\n              <TextField\n                label=\"Saasform contact email\"\n                placeholder=\"admin@beautifulsaas.com\"\n                value={settings.email_admin}\n                onChange={value => handleFieldChange(\"email_admin\", value)}\n              />\n              <TextField\n                label=\"Customer email\"\n                placeholder=\"hello@beautifulsaas.com\"\n                value={settings.email_site}\n                onChange={value => handleFieldChange(\"email_site\", value)}\n              />\n              </FormLayout.Group>\n              <Select\n                label=\"Industry\"\n                options={industryOptions}\n                onChange={value => handleFieldChange(\"industry\", value)}\n                value={settings.industry}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Legal name and address\"\n          description=\"This address will appear on your invoices.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Legal name of business\"\n                value={settings.legal_name}\n                onChange={value => handleFieldChange(\"legal_name\", value)}\n              />\n              <TextField\n                label=\"Phone\"\n                value={settings.legal_name}\n                onChange={value => handleFieldChange(\"legal_name\", value)}\n              />\n              <TextField\n                label=\"Apartment, suite, etc. (optional)\"\n                value={settings.legal_name}\n                onChange={value => handleFieldChange(\"legal_name\", value)}\n              />\n              <TextField\n                label=\"Street\"\n                value={settings.legal_name}\n                onChange={value => handleFieldChange(\"legal_name\", value)}\n              />\n              <FormLayout.Group>\n              <TextField\n                label=\"City\"\n                value={settings.email_admin}\n                onChange={value => handleFieldChange(\"email_admin\", value)}\n              />\n              <TextField\n                label=\"Postal / ZIP code\"\n                value={settings.email_site}\n                onChange={value => handleFieldChange(\"email_site\", value)}\n              />\n              </FormLayout.Group>\n              <FormLayout.Group>\n              <Select\n                label=\"Country / Region\"\n                disabled\n                options={[\n                  {label: 'United States', value: 'US'},\n                ]}\n                onChange={value => handleFieldChange(\"industry\", value)}\n                value={settings.industry}\n              />\n              <Select\n                label=\"State\"\n                options={[\n                  {label: 'California', value: 'CA'},\n                  {label: 'New York', value: 'NY'},\n                  {label: 'Oregon', value: 'OR'},\n                ]}\n                onChange={value => handleFieldChange(\"industry\", value)}\n                value={settings.industry}\n              />\n              </FormLayout.Group>\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Payment methods\"\n          description=\"Manage how you pay your bills.\"\n        >\n          <Card sectioned>\n            <Checkbox\n              label=\"Use balance to pay your bills\"\n              onChange={value => handleFieldChange(\"industry\", value)}\n              value={settings.industry}\n            />\n          </Card>\n          <Card sectioned\n            secondaryFooterActions={[{content: 'Replace credit card'}]}\n          >\n            <Stack alignment=\"center\">\n              <Stack.Item>\n                <strong>American Express</strong>\n                <br/>\n                Ending in 1007\n              </Stack.Item>\n              <Badge status=\"success\">Active</Badge>\n            </Stack>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Plan details\"\n          description=\"See your current plan. Compare plans with different features and rates.\"\n        >\n          <Card sectioned\n            primaryFooterAction={{content: 'Upgrade plan'}}\n          >\n            <Stack distribution=\"fill\">\n              <Stack.Item>\n                <strong>Member since</strong>\n                <br/>\n                Oct 26, 2019\n              </Stack.Item>\n              <Stack.Item>\n                <strong>Current plan</strong>\n                <br/>\n                Pro\n              </Stack.Item>\n              <Stack.Item>\n                <strong>Status</strong>\n                <br/>\n                Active\n              </Stack.Item>\n            </Stack>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, StaffAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsStaffPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsStaffPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    email,\n    lastLogin,\n    role,\n  } = item;\n  const media = <UserAvatar customer size=\"medium\" name={id} email={email} />;\n  const shortcutActions = null;\n\n  return (\n    <ResourceItem\n      id={id}\n      url={`/users/${id}`}\n      media={media}\n      accessibilityLabel={`View details for ${email}`}\n      // shortcutActions={shortcutActions}\n      // persistActions\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ width: '80%' }}>\n          <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n          </h3>\n          <div>Last login: {lastLogin}</div>\n        </div>\n\n        <div style={{ width: '20%' }}>\n          {role}\n        </div>\n\n      </div>\n    </ResourceItem>\n  );\n}\n\nfunction SettingsStaffPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  return (\n    <Page\n      title={\"Staff\"}\n      primaryAction={{\n        content: 'Add staff account',\n      }}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Permissions\"\n          description=\"Manage what staff can see or do in your admin dashboard.\"\n        >\n          <Card title=\"Owner\">\n            {renderItem({\n              id: 110,\n              name: 'Emanuele Cesena',\n              email: 'emanuele.cesena@gmail.com',\n              lastLogin: 'Friday, June 26, 2020, 10:12 pm -0700',\n            })}\n          </Card>\n          <Card\n            title=\"Staff accounts\"\n          >\n            <div style={{ paddingTop: 16, paddingBottom: 16, }}>\n            {renderItem({\n              id: 101,\n              name: 'Pancrazio Auteri',\n              email: 'pancrazio.auteri@gmail.com',\n              lastLogin: 'Tuesday, May 26, 2020, 8:44 am -0700',\n              role: 'Full access',\n            })}\n            {renderItem({\n              id: 108,\n              name: 'Davide Vernizzi',\n              email: 'davide.vernizzi@gmail.com',\n              lastLogin: 'Saturday, November 2, 2019, 2:38 pm -0700',\n              role: 'Developer access',\n            })}\n            </div>\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Button,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsLegalPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsLegalPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction SettingsLegalPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  return (\n    <Page\n      title={\"Legal\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Legal pages\"\n          description={\n            <div>\n              <p>You can create your own legal pages, or create them from templates and customize them. The templates aren't legal advice and need to be customized for your site.</p>\n              <br/>\n              <p>To keep your site secure, it's not possible to add audio, videos, or media widgets.</p>\n              <br/>\n              <p>By using these templates you agree that you've read and agreed to the disclaimer.</p>\n            </div>\n          }\n        >\n          <Card title=\"Privacy policy\" sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Privacy policy\"\n                labelHidden\n                // maxLength={320}\n                // showCharacterCount\n                multiline={10}\n                value={settings.description}\n                onChange={value => handleFieldChange(\"description\", value)}\n              />\n              <Button>Create from template</Button>\n            </FormLayout>\n          </Card>\n\n          <Card title=\"Terms of service\" sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Terms of service\"\n                labelHidden\n                // maxLength={320}\n                // showCharacterCount\n                multiline={10}\n                value={settings.description}\n                onChange={value => handleFieldChange(\"description\", value)}\n              />\n              <Button>Create from template</Button>\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Select,\n  Button,\n  ChoiceList,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsCheckoutPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsCheckoutPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction SettingsCheckoutPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const industryOptions = [\n    {label: 'Finance', value: 'finance'},\n    {label: 'Internet', value: 'internet'},\n    {label: 'Security', value: 'security'},\n  ];\n\n  return (\n    <Page\n      title={\"Signup and checkout\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Signup\"\n          description=\"Customize the signup experience, including billing and email verification steps.\"\n        >\n          <Card>\n            <Card.Section title=\"Billing during signup\">\n              <ChoiceList\n                title=\"\"\n                choices={[\n                  {\n                    label: 'Hidden (default)',\n                    value: 'hidden',\n                    helpText: 'Don\\'t ask for credit card info during signup (if free plan or free trial available)',\n                  },\n                  {\n                    label: 'Optional',\n                    value: 'optional',\n                    helpText: 'Ask for credit card info during signup, but let user skip (if free plan or free trial available)',\n                  },\n                  {\n                    label: 'Required',\n                    value: 'required',\n                    helpText: 'Always require credit card info during signup, even for free plan or free trials.',\n                  },\n                ]}\n                selected={['hidden']}\n                onChange={() => []}\n              />\n            </Card.Section>\n            <Card.Section title=\"Email verification\">\n              <ChoiceList\n                title=\"\"\n                choices={[\n                  {\n                    label: 'Required',\n                    value: 'required',\n                    helpText: 'Require users to verify their email before their first login.',\n                  },\n                  {\n                    label: 'Optional (default)',\n                    value: 'optional',\n                    helpText: 'Send users a verification email, but let them log in without requiring verification',\n                  },\n                  {\n                    label: 'Disabled',\n                    value: 'disabled',\n                    helpText: 'Don\\'t send any verification email',\n                  },\n                ]}\n                selected={['optional']}\n                onChange={() => []}\n              />\n            </Card.Section>\n            <Card.Section title=\"Email verification from socials\">\n              <Checkbox\n                label=\"Don't send verification email when already verified on socials (default: don't send)\"\n                onChange={value => handleFieldChange(\"industry\", value)}\n                checked={true}\n                helpText={'When users sign up with, e.g., Google their email is automatically verified'}\n              />\n            </Card.Section>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Checkout form\"\n          description=\"Customize the checkout form that users will see to input their billing and credit card information.\"\n        >\n          <Card>\n            <Card.Section>\n              <ChoiceList\n                title=\"Full name\"\n                choices={[\n                  {\n                    label: 'Require last name only (default)',\n                    value: 'require_last',\n                  },\n                  {\n                    label: 'Require first and last name',\n                    value: 'require_full',\n                  },\n                ]}\n                selected={['require_last']}\n                onChange={() => []}\n              />\n            </Card.Section>\n            <Card.Section>\n              <ChoiceList\n                title=\"Company name\"\n                choices={[\n                  {\n                    label: 'Hidden',\n                    value: 'hidden',\n                  },\n                  {\n                    label: 'Optional (default)',\n                    value: 'optional',\n                  },\n                  {\n                    label: 'Required',\n                    value: 'required',\n                  },\n                ]}\n                selected={['optional']}\n                onChange={() => []}\n              />\n            </Card.Section>\n            <Card.Section>\n              <ChoiceList\n                title=\"Address line 2 (apartment, unit, etc.)\"\n                choices={[\n                  {\n                    label: 'Hidden',\n                    value: 'hidden',\n                  },\n                  {\n                    label: 'Optional (default)',\n                    value: 'optional',\n                  },\n                  {\n                    label: 'Required',\n                    value: 'required',\n                  },\n                ]}\n                selected={['optional']}\n                onChange={() => []}\n              />\n            </Card.Section>\n            <Card.Section>\n              <ChoiceList\n                title=\"Phone number (it won't be verified)\"\n                choices={[\n                  {\n                    label: 'Hidden',\n                    value: 'hidden',\n                  },\n                  {\n                    label: 'Optional (default)',\n                    value: 'optional',\n                  },\n                  {\n                    label: 'Required',\n                    value: 'required',\n                  },\n                ]}\n                selected={['optional']}\n                onChange={() => []}\n              />\n            </Card.Section>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Select,\n  Button,\n  ChoiceList,\n  Popover,\n  DataTable,\n  Icon,\n} from \"@shopify/polaris\";\nimport { BankMajorMonotone, InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsPaymentsPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsPaymentsPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    paymentType,\n    status,\n    optional,\n  } = item;\n  const shortcutActions = null;\n\n  return (\n      <div style={{ display: 'flex', justifyContent: 'space-between', paddingTop: 8, paddingBottom: 8 }}>\n\n        <div style={{ width: '5%', verticalAlign: 'top' }}>\n          <Checkbox\n            label=\"\"\n            onChange={value => {}}\n            checked={true}\n            disabled={!optional}\n          />\n        </div>\n\n        <div style={{ width: '40%', paddingTop: 4, paddingBottom: 4 }}>\n          <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n          </h3>\n        </div>\n\n        <div style={{ width: '60%', paddingTop: 4, paddingBottom: 4 }}>\n          {paymentType}\n        </div>\n\n      </div>\n  );\n}\n\nfunction PopoverViewRates() {\n  const [popoverActive, setPopoverActive] = useState(false);\n\n  const togglePopoverActive = useCallback(\n    () => setPopoverActive((popoverActive) => !popoverActive),\n    [],\n  );\n\n  const activator = (\n    <Button onClick={togglePopoverActive} plain>\n      View rates\n    </Button>\n  );\n\n  return (\n    <Popover\n      active={popoverActive}\n      activator={activator}\n      onClose={togglePopoverActive}\n    >\n      <DataTable\n        columnContentTypes={[\n          'text',\n          'text',\n        ]}\n        headings={[]}\n        rows={[\n          [<strong>Domestic</strong>, '4.9% + $0.30'],\n          [<strong>Rest of the world</strong>, '5.9% + $0.30'],\n        ]}\n      />\n    </Popover>\n  );\n}\n\nfunction SettingsPaymentsPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const industryOptions = [\n    {label: 'Finance', value: 'finance'},\n    {label: 'Internet', value: 'internet'},\n    {label: 'Security', value: 'security'},\n  ];\n\n  return (\n    <Page\n      title={\"Payments\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Payment options\"\n          description=\"Select which payment options are available to your customers.\"\n        >\n          <Card>\n            <Card.Header title=\"Saasform payments\">\n              <PopoverViewRates/>\n              <Button url=\"/settings/payments/payouts\">View payouts</Button>\n            </Card.Header>\n            <Card.Section title=\"Payment cards\">\n              <ResourceList\n                items={[\n                  {id: 1, name: 'Visa', paymentType: 'Credit card'},\n                  {id: 2, name: 'Mastercard', paymentType: 'Credit card'},\n                  {id: 3, name: 'American Express', paymentType: 'Credit card'},\n                  {id: 4, name: 'Discover', paymentType: 'Credit card'},\n                  {id: 5, name: 'JCB', paymentType: 'Credit card'},\n                  {id: 6, name: 'Diners Club', paymentType: 'Credit card'},\n                ]}\n                renderItem={renderItem}\n              />\n            </Card.Section>\n            <Card.Section title=\"Accelerated checkout\">\n              <ResourceList\n                items={[\n                  // {id: 1, name: 'Shop Pay', paymentType: 'Accelerated checkout'},\n                  {id: 2, name: 'Apple Pay', paymentType: 'Accelerated checkout'},\n                  {id: 3, name: 'Google Pay', paymentType: 'Accelerated checkout'},\n                ]}\n                renderItem={renderItem}\n              />\n            </Card.Section>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Payout details\"\n          description=\"Your earnings are deposited into this bank account. Choose the frequency of your payouts and edit the way they’re described on your bank statements.\"\n        >\n          <Card\n            title=\"Payout bank account\"\n            sectioned\n            secondaryFooterActions={[{ content: 'Change bank account' }]}\n          >\n            <Stack alignment=\"center\">\n              <Icon source={BankMajorMonotone} />\n              <div>\n                <strong>WELLS FARGO BANK NA</strong><br/>\n                <TextStyle variation=\"subdued\">***** 19 (USD)</TextStyle>\n              </div>\n            </Stack>\n          </Card>\n          <Card\n            title=\"Payout statement descriptor\"\n            sectioned\n          >\n            <FormLayout>\n              <p>The way payouts are described on your bank statements.</p>\n              <TextField\n                label=\"Payout statement descriptor\"\n                placeholder=\"Saasform\"\n                value={'Saasform'}\n                minLength={5}\n                maxLength={22}\n                onChange={value => handleFieldChange(\"industry\", value)}\n                helpText={'Must be between 5 and 22 characters'}\n              />\n            </FormLayout>\n          </Card>\n          <Card title=\"Payout schedule\" sectioned>\n            <ChoiceList\n              title=\"\"\n              choices={[\n                {\n                  label: 'Every week',\n                  value: 'week',\n                  helpText: 'We\\'ll issue payouts every Monday.',\n                },\n                {\n                  label: 'Every month',\n                  value: 'month',\n                  helpText: 'We\\'ll issue payouts every first business day of the month.',\n                },\n              ]}\n              selected={['week']}\n              onChange={() => []}\n            />\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Customer billing statement\"\n          description=\"Edit the way your site name and phone number appear on your customers' bank statements. This is important to reduce complaints and chargebacks.\"\n        >\n          <Card\n            title=\"Payout statement descriptor\"\n            sectioned\n          >\n            <FormLayout>\n              <p>The way payouts are described on your bank statements.</p>\n              <FormLayout.Group>\n              <TextField\n                label=\"Customer statement descriptor\"\n                placeholder=\"Beautifulsaas\"\n                minLength={3}\n                maxLength={17}\n                prefix={'SF *'}\n                onChange={value => handleFieldChange(\"industry\", value)}\n                helpText={'SF * will appear at the begin.'}\n              />\n              <TextField\n                label=\"Your phone number\"\n                placeholder=\"(415) 123 45678\"\n                value={''}\n                onChange={value => handleFieldChange(\"industry\", value)}\n              />\n              </FormLayout.Group>\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import { Component} from 'react';\n\nexport const payouts = [\n  // 'Payout Date,Status,Charges,Refunds,Adjustments,Reserved Funds,Fees,Retried Amount,Total,Currency',\n  '2020-04-14,paid,45.00,0.00,0.00,0.00,1.61,0.00,43.39,USD',\n  '2020-04-15,paid,84.00,0.00,0.00,0.00,3.58,0.00,80.42,USD',\n  '2020-04-16,paid,96.00,0.00,0.00,0.00,3.39,0.00,92.61,USD',\n  '2020-04-20,paid,55.00,0.00,0.00,0.00,2.20,0.00,52.80,USD',\n  '2020-04-21,paid,160.00,0.00,0.00,0.00,6.04,0.00,153.96,USD',\n  '2020-04-22,paid,146.86,0.00,0.00,0.00,5.82,0.00,141.04,USD',\n  '2020-04-23,paid,159.00,0.00,0.00,0.00,6.80,0.00,152.20,USD',\n  '2020-04-24,paid,25.00,-85.00,0.00,0.00,1.03,0.00,-61.03,USD',\n  '2020-04-27,paid,65.00,0.00,0.00,0.00,2.84,0.00,62.16,USD',\n  '2020-04-28,paid,418.00,0.00,0.00,0.00,15.41,0.00,402.59,USD',\n  '2020-04-29,paid,51.00,0.00,0.00,0.00,2.29,0.00,48.71,USD',\n  '2020-04-30,paid,90.00,0.00,0.00,0.00,3.21,0.00,86.79,USD',\n  '2020-05-04,paid,80.00,0.00,0.00,0.00,3.42,0.00,76.58,USD',\n  '2020-05-05,paid,222.00,0.00,0.00,0.00,8.85,0.00,213.15,USD',\n  '2020-05-06,paid,89.00,0.00,0.00,0.00,3.74,0.00,85.26,USD',\n  '2020-05-07,paid,155.00,0.00,0.00,0.00,6.40,0.00,148.60,USD',\n  '2020-05-08,paid,551.00,0.00,0.00,0.00,22.09,0.00,528.91,USD',\n  '2020-05-11,paid,170.00,0.00,0.00,0.00,7.24,0.00,162.76,USD',\n  '2020-05-12,paid,314.00,0.00,0.00,0.00,12.27,0.00,301.73,USD',\n  '2020-05-13,paid,42.12,0.00,0.00,0.00,1.52,0.00,40.60,USD',\n  '2020-05-14,paid,275.00,0.00,0.00,0.00,9.13,0.00,265.87,USD',\n  '2020-05-18,paid,172.32,-42.50,0.00,0.00,6.30,0.00,123.52,USD',\n  '2020-05-19,paid,225.00,0.00,0.00,0.00,10.09,0.00,214.91,USD',\n  '2020-05-21,paid,195.00,-80.00,0.00,0.00,6.61,0.00,108.39,USD',\n  '2020-05-22,paid,95.00,0.00,0.00,0.00,3.66,0.00,91.34,USD',\n  '2020-05-26,paid,171.25,0.00,0.00,0.00,6.37,0.00,164.88,USD',\n  '2020-05-27,paid,165.00,0.00,0.00,0.00,6.99,0.00,158.01,USD',\n  '2020-05-28,paid,210.00,0.00,0.00,0.00,8.59,0.00,201.41,USD',\n  '2020-05-29,paid,200.00,0.00,0.00,0.00,8.71,0.00,191.29,USD',\n  '2020-06-01,paid,101.00,0.00,0.00,0.00,4.09,0.00,96.91,USD',\n  '2020-06-02,paid,245.00,-40.00,0.00,0.00,8.62,0.00,196.38,USD',\n  '2020-06-03,paid,45.00,0.00,0.00,0.00,1.91,0.00,43.09,USD',\n  '2020-06-04,paid,35.00,0.00,0.00,0.00,1.32,0.00,33.68,USD',\n  '2020-06-05,paid,190.00,0.00,0.00,0.00,7.21,0.00,182.79,USD',\n  '2020-06-08,paid,299.00,0.00,0.00,0.00,12.17,0.00,286.83,USD',\n  '2020-06-09,paid,835.00,0.00,0.00,0.00,33.28,0.00,801.72,USD',\n  '2020-06-10,paid,149.00,0.00,0.00,0.00,5.41,0.00,143.59,USD',\n  '2020-06-11,paid,40.00,0.00,0.00,0.00,1.46,0.00,38.54,USD',\n  '2020-06-12,paid,45.00,0.00,0.00,0.00,2.06,0.00,42.94,USD',\n  '2020-06-16,paid,170.00,0.00,0.00,0.00,7.03,0.00,162.97,USD',\n  '2020-06-17,paid,47.70,0.00,0.00,0.00,1.68,0.00,46.02,USD',\n  '2020-06-22,paid,35.00,0.00,0.00,0.00,1.32,0.00,33.68,USD',\n  '2020-06-23,paid,140.00,0.00,0.00,0.00,5.36,0.00,134.64,USD',\n  '2020-06-24,paid,215.00,0.00,0.00,0.00,9.20,0.00,205.80,USD',\n  '2020-06-25,paid,408.00,0.00,0.00,0.00,12.77,0.00,395.23,USD',\n  '2020-06-26,paid,158.00,0.00,0.00,0.00,6.24,0.00,151.76,USD',\n  '2020-06-30,paid,270.70,0.00,0.00,0.00,10.13,0.00,260.57,USD',\n  '2020-07-01,paid,61.39,-21.39,0.00,0.00,3.09,0.00,36.91,USD',\n  '2020-07-02,paid,40.00,0.00,0.00,0.00,1.96,0.00,38.04,USD',\n  '2020-07-03,paid,42.00,0.00,0.00,0.00,1.52,0.00,40.48,USD',\n  '2020-07-06,in_transit,97.00,0.00,0.00,0.00,3.41,0.00,93.59,USD',\n];\n\nexport const payoutDetails = [\n  // 'Transaction Date,Type,Order,Card Brand,Card Source,Payout Status,Payout Date,Available On,Amount,Fee,Net',\n  '2020-06-28 12:23:57 -0400,charge,#3021,jcb,online,paid,2020-06-30,2020-06-30,48.00,2.17,45.83',\n  '2020-06-28 02:55:33 -0400,charge,#3019,visa,online,paid,2020-06-30,2020-06-30,20.00,0.88,19.12',\n  '2020-06-26 23:17:18 -0400,charge,#3017,visa,online,paid,2020-06-30,2020-06-30,47.70,1.68,46.02',\n  '2020-06-26 12:34:39 -0400,charge,#3015,master,online,paid,2020-06-30,2020-06-30,40.00,1.46,38.54',\n  '2020-06-26 03:11:56 -0400,charge,#3014,master,online,paid,2020-06-30,2020-06-30,40.00,1.46,38.54',\n  '2020-06-25 20:16:14 -0400,charge,#3012,master,online,paid,2020-06-30,2020-06-30,75.00,2.48,72.52',\n];\n\nexport const transactions = [\n  // 'Transaction Date,Type,Order,Card Brand,Card Source,Payout Status,Payout Date,Available On,Amount,Fee,Net',\n  '2020-06-03 16:16:34 -0400,charge,#2936,master,online,paid,2020-06-05,2020-06-05,80.00,2.62,77.38',\n  '2020-06-03 23:18:13 -0400,charge,#2937,master,online,paid,2020-06-08,2020-06-08,40.00,1.46,38.54',\n  '2020-06-04 00:14:37 -0400,charge,#2938,visa,online,paid,2020-06-08,2020-06-08,33.00,1.59,31.41',\n  '2020-06-04 05:28:36 -0400,charge,#2940,visa,online,paid,2020-06-08,2020-06-08,25.00,1.28,23.72',\n  '2020-06-04 13:10:58 -0400,charge,#2942,visa,online,paid,2020-06-08,2020-06-08,35.00,1.67,33.33',\n  '2020-06-04 13:58:02 -0400,charge,#2943,discover,online,paid,2020-06-08,2020-06-08,70.00,2.33,67.67',\n  '2020-06-04 14:42:04 -0400,charge,#2944,master,online,paid,2020-06-08,2020-06-08,46.00,2.09,43.91',\n  '2020-06-04 17:04:33 -0400,charge,#2946,visa,online,paid,2020-06-08,2020-06-08,50.00,1.75,48.25',\n  '2020-06-05 02:18:50 -0400,charge,#2947,master,online,paid,2020-06-09,2020-06-09,20.00,1.08,18.92',\n  '2020-06-05 17:32:25 -0400,charge,#2952,master,online,paid,2020-06-09,2020-06-09,40.00,1.86,38.14',\n  '2020-06-06 04:51:36 -0400,charge,#2954,visa,online,paid,2020-06-09,2020-06-09,515.00,20.39,494.61',\n  '2020-06-06 13:29:59 -0400,charge,#2956,american_express,online,paid,2020-06-09,2020-06-09,75.00,2.48,72.52',\n  '2020-06-06 14:40:13 -0400,charge,#2958,master,online,paid,2020-06-09,2020-06-09,150.00,6.15,143.85',\n  '2020-06-06 17:51:59 -0400,charge,#2959,master,online,paid,2020-06-09,2020-06-09,35.00,1.32,33.68',\n  '2020-06-08 10:49:01 -0400,charge,#2964,master,online,paid,2020-06-10,2020-06-10,49.00,2.21,46.79',\n  '2020-06-08 19:01:25 -0400,charge,#2967,visa,online,paid,2020-06-10,2020-06-10,100.00,3.20,96.80',\n  '2020-06-08 20:16:46 -0400,charge,#2968,visa,online,paid,2020-06-11,2020-06-11,40.00,1.46,38.54',\n  '2020-06-10 03:33:14 -0400,charge,#2970,visa,online,paid,2020-06-12,2020-06-12,45.00,2.06,42.94',\n  '2020-06-12 10:15:49 -0400,charge,#2974,master,online,paid,2020-06-16,2020-06-16,90.00,3.81,86.19',\n  '2020-06-12 14:48:37 -0400,charge,#2975,visa,online,paid,2020-06-16,2020-06-16,20.00,0.88,19.12',\n  '2020-06-13 06:20:39 -0400,charge,#2978,master,online,paid,2020-06-16,2020-06-16,40.00,1.46,38.54',\n  '2020-06-13 17:47:27 -0400,charge,#2981,master,online,paid,2020-06-16,2020-06-16,20.00,0.88,19.12',\n  '2020-06-15 12:00:11 -0400,charge,#2985,visa,online,paid,2020-06-17,2020-06-17,47.70,1.68,46.02',\n  '2020-06-18 15:29:42 -0400,charge,#2993,visa,online,paid,2020-06-22,2020-06-22,35.00,1.32,33.68',\n  '2020-06-19 09:01:38 -0400,charge,#2995,visa,online,paid,2020-06-23,2020-06-23,40.00,1.86,38.14',\n  '2020-06-19 13:26:18 -0400,charge,#2996,visa,online,paid,2020-06-23,2020-06-23,60.00,2.04,57.96',\n  '2020-06-19 20:43:48 -0400,charge,#2997,visa,online,paid,2020-06-23,2020-06-23,40.00,1.46,38.54',\n  '2020-06-22 02:28:25 -0400,charge,#3000,master,online,paid,2020-06-24,2020-06-24,105.00,4.40,100.60',\n  '2020-06-22 03:35:37 -0400,charge,#3001,master,online,paid,2020-06-24,2020-06-24,35.00,1.67,33.33',\n  '2020-06-22 08:24:03 -0400,charge,#3003,master,online,paid,2020-06-24,2020-06-24,35.00,1.67,33.33',\n  '2020-06-22 13:01:22 -0400,charge,#3004,master,online,paid,2020-06-24,2020-06-24,40.00,1.46,38.54',\n  '2020-06-23 02:44:17 -0400,charge,#3005,visa,online,paid,2020-06-25,2020-06-25,33.00,1.59,31.41',\n  '2020-06-23 12:48:30 -0400,charge,#3006,master,online,paid,2020-06-25,2020-06-25,375.00,11.18,363.82',\n  '2020-06-24 04:40:45 -0400,charge,#3008,visa,online,paid,2020-06-26,2020-06-26,105.00,4.40,100.60',\n  '2020-06-24 18:34:09 -0400,charge,#3009,visa,online,paid,2020-06-26,2020-06-26,53.00,1.84,51.16',\n  '2020-06-25 20:16:14 -0400,charge,#3012,master,online,paid,2020-06-30,2020-06-30,75.00,2.48,72.52',\n  '2020-06-26 03:11:56 -0400,charge,#3014,master,online,paid,2020-06-30,2020-06-30,40.00,1.46,38.54',\n  '2020-06-26 12:34:39 -0400,charge,#3015,master,online,paid,2020-06-30,2020-06-30,40.00,1.46,38.54',\n  '2020-06-26 23:17:18 -0400,charge,#3017,visa,online,paid,2020-06-30,2020-06-30,47.70,1.68,46.02',\n  '2020-06-28 02:55:33 -0400,charge,#3019,visa,online,paid,2020-06-30,2020-06-30,20.00,0.88,19.12',\n  '2020-06-28 12:23:57 -0400,charge,#3021,jcb,online,paid,2020-06-30,2020-06-30,48.00,2.17,45.83',\n  '2020-06-28 20:23:28 -0400,charge,#3024,master,online,paid,2020-07-01,2020-07-01,40.00,1.86,38.14',\n  '2020-06-29 11:31:20 -0400,charge,#3025,master,online,paid,2020-07-01,2020-07-01,21.39,1.23,20.16',\n  '2020-06-29 14:36:34 -0400,refund,#3025,master,online,paid,2020-07-01,2020-07-01,-21.39,0.00,-21.39',\n  '2020-06-29 20:38:53 -0400,charge,#3026,master,online,paid,2020-07-02,2020-07-02,20.00,0.88,19.12',\n  '2020-06-30 05:41:07 -0400,charge,#3028,visa,online,paid,2020-07-02,2020-07-02,20.00,1.08,18.92',\n  '2020-07-01 07:43:09 -0400,charge,#3032,master,online,paid,2020-07-03,2020-07-03,42.00,1.52,40.48',\n  '2020-07-02 09:12:37 -0400,charge,#3038,visa,online,in_transit,2020-07-06,2020-07-06,70.00,2.33,67.67',\n  '2020-07-02 14:24:39 -0400,charge,#3040,master,online,in_transit,2020-07-06,2020-07-06,27.00,1.08,25.92',\n  '2020-07-02 20:43:25 -0400,charge,#3042,visa,online,pending,2020-07-07,2020-07-07,64.35,2.17,62.18',\n  '2020-07-04 21:28:23 -0400,charge,#3045,visa,online,pending,2020-07-07,2020-07-07,35.00,1.32,33.68',\n];\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n  Link,\n  Thumbnail,\n  DataTable,\n  DisplayText,\n} from \"@shopify/polaris\";\nimport {\n  ExportMinor\n} from '@shopify/polaris-icons';\n\nimport { toCurrencyWithCents, toShortDate } from '../lib/textUtils';\nimport { payouts } from '../data/payments';\n\nconst ALL_FILES = gql`\n  {\n    files {\n      edges { node {\n        id\n        name\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      payouts: payouts,\n    }\n  }\n};\n\nfunction toPayoutStatusTag(status) {\n  if (status === 'paid')\n    return <Badge>Paid</Badge>;\n  if (status === 'in_transit')\n    return <Badge status=\"info\">In transit</Badge>;\n  if (status === 'pending')\n    return <Badge status=\"info\">Pending</Badge>;\n  return <Badge>Paid</Badge>;\n}\n\nfunction PayoutsResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterStatusChange = useCallback(value => setFilterStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const promotedBulkActions = [\n    // {\n    //   content: \"Resend recovery email\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // },\n    // {\n    //   content: \"Edit accounts\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // }\n  ];\n\n  const bulkActions = [\n    // {\n    //   content: \"Add tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk add tags\")\n    // },\n    // {\n    //   content: \"Remove tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    // },\n    {\n      content: \"Delete\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    // {\n    //   key: \"filterStatus\",\n    //   label: \"Status\",\n    //   filter: (\n    //     <ChoiceList\n    //       title=\"Account status\"\n    //       titleHidden\n    //       choices={[\n    //         {label: 'Email sent', value: 'sent'},\n    //         {label: 'Email not sent', value: 'notsent'},\n    //         {label: 'Recovered', value: 'recovered'},\n    //         {label: 'Not recovered', value: 'notrecovered'},\n    //       ]}\n    //       selected={filterStatus || []}\n    //       onChange={handleFilterStatusChange}\n    //       allowMultiple\n    //     />\n    //   ),\n    //   shortcut: true\n    // },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  // const filterControl = (\n  //   <Filters\n  //     queryValue={queryValue}\n  //     filters={filters}\n  //     appliedFilters={appliedFilters}\n  //     onQueryChange={handleQueryValueChange}\n  //     onQueryClear={handleQueryValueRemove}\n  //     onClearAll={handleClearAll}\n  //   />\n  // );\n\n  const { loading, error, data } = useQueryFake(ALL_FILES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  function toTableHeader(payout) {\n    return [\n      payout[0], // date\n      payout[1], // status\n      payout[2], // charges\n      payout[6], // fees\n      payout[3], // refunds\n      payout[4], // adjustments\n      // payout[5], // reserved funds\n      // payout[7], // retried amount\n      payout[8], // total\n      // payout[9], // currency\n    ];\n  }\n\n  function toTableRow(payout) {\n    const p = toTableHeader(payout);\n    const date = p[0];\n    return [\n      <Link url={`/settings/payments/payouts/${date}`}>{date}</Link>,\n      toPayoutStatusTag(p[1]),\n      toCurrencyWithCents(p[2]),\n      toCurrencyWithCents(-p[3]),\n      toCurrencyWithCents(p[4]),\n      toCurrencyWithCents(p[5]),\n      <strong>{toCurrencyWithCents(p[6])}</strong>,\n    ];\n  }\n\n  const payouts = data.payouts.reverse();\n  let headings = toTableHeader('Payout date,Status,Charges,Refunds,Adjustments,Reserved Funds,Fees,Retried Amount,Total,Currency'\n    .split(',').map(h => (<strong>{h}</strong>)));\n\n  return (\n    <Card>\n      <Card.Section>\n        <Filters\n          queryValue={queryValue}\n          filters={filters}\n          appliedFilters={appliedFilters}\n          onQueryChange={handleQueryValueChange}\n          onQueryClear={handleQueryValueRemove}\n          onClearAll={handleClearAll}\n        />\n      </Card.Section>\n      <DataTable\n        columnContentTypes={[\n          'text',\n          'text',\n          'numeric',\n          'numeric',\n          'numeric',\n          'numeric',\n          'numeric',\n        ]}\n        headings={headings}\n        rows={payouts.map(p => toTableRow(p.split(',')))}\n\n        sortable={[true, true, false, false, false, false, true]}\n        defaultSortDirection=\"descending\"\n        initialSortColumnIndex={0}\n        onSort={() => {}}\n\n        // totals={['', '', '', 255, '$155,830.00']}\n      />\n    </Card>\n  );\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      url,\n      size,\n      email,\n      isAdmin,\n      account_status,\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      update_time,\n      create_time,\n      tags,\n      email_status,\n      prospect_status,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const accountPlan = `${account_plan}`;\n    const accountPrice = toCurrency(account_price);\n    const accountPayment = `${accountPrice}/${account_freq}`\n\n    const ltvDisplay = toCurrency(ltv);\n\n    const prospectStatusDisplay = {\n      recovered: {\n        color: 'success',\n        label: 'Recovered',\n      },\n      notrecovered: {\n        color: 'warning',\n        label: 'Not recovered',\n      },\n    };\n    const prospectStatus = prospectStatusDisplay[prospect_status] || {};\n    const emailStatusDisplay = {\n      sent: {\n        color: 'success',\n        label: 'Sent',\n      },\n      notsent: {\n        color: 'warning',\n        label: 'Not sent',\n      },\n      scheduled: {\n        color: 'attention',\n        label: 'Scheduled',\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        // url={`/accounts/${id}`}\n        media={<div style={{ height: 36, width: 50, display: 'flex', alignItems: 'center' }}><img src={url} style={{ verticalAlign: 'middle', maxHeight: 36, maxWidth: 50, }} /></div>}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', height: 36, alignItems: 'center' }}>\n          <div style={{ width: '30%', overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n            <Link>\n              <p style={{ verticalAlign: 'middle', }}>{name}</p>\n            </Link>\n          </div>\n\n          <div style={{ width: '50%' }}>\n            <TextField value={url} disabled />\n          </div>\n\n          <div style={{ width: '15%', paddingLeft: 40, }}>\n            {size}\n          </div>\n\n          <div style={{ width: '5%', textAlign: 'right' }}>\n            <Button icon={DeleteMinor} size=\"slim\" />\n          </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function SettingsFileListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  return (\n    <Page\n      title=\"Payouts\"\n      primaryAction={{\n        content: 'Transactions', url: '/settings/payments/transactions'\n      }}\n      secondaryActions={[\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: \"Export\",\n          // url: \"http://localhost:3000/leads/exportToCsv\"\n        },\n      ]}\n      breadcrumbs={[{ content: 'Payments', url: '/settings/payments' }]}\n    >\n      <Layout>\n        <Layout.Section oneThird>\n          <Card>\n            <Card.Header title=\"Last payout\">\n              <p>Jul 3</p>\n            </Card.Header>\n            <Card.Section>\n              <Stack alignment=\"center\">\n                <Stack.Item>\n                  <DisplayText>$40.48</DisplayText>\n                </Stack.Item>\n                <Stack.Item>\n                  {toPayoutStatusTag('paid')}\n                </Stack.Item>\n              </Stack>\n              <br/>\n              <Link url={`/settings/payments/payouts/2020-07-03`}>View transactions</Link>\n            </Card.Section>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card>\n            <Card.Header title=\"Next payout\">\n              <p>Est. Jul 6</p>\n            </Card.Header>\n            <Card.Section>\n              <Stack alignment=\"center\">\n                <Stack.Item>\n                  <DisplayText>$93.59</DisplayText>\n                </Stack.Item>\n                <Stack.Item>\n                  {toPayoutStatusTag('in_transit')}\n                </Stack.Item>\n              </Stack>\n              <br/>\n              <Link url={`/settings/payments/payouts/2020-07-06`}>View transactions</Link>\n            </Card.Section>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section oneThird>\n          <Card title=\"Balance\" sectioned>\n            <Stack alignment=\"center\">\n              <Stack.Item>\n                <DisplayText>$95.86</DisplayText>\n              </Stack.Item>\n              <Stack.Item>\n              </Stack.Item>\n            </Stack>\n            <br/>\n            <Link url=\"/settings/payments/transactions/?payout_status=pending\">View transactions</Link>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section>\n          <Card>\n            <PayoutsResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n  Link,\n  Thumbnail,\n  DataTable,\n  DisplayText,\n} from \"@shopify/polaris\";\nimport {\n  BankMajorMonotone, ExportMinor,\n} from '@shopify/polaris-icons';\n\nimport { toCurrencyWithCents, toShortDate } from '../lib/textUtils';\nimport { payoutDetails } from '../data/payments';\n\nconst ALL_FILES = gql`\n  {\n    files {\n      edges { node {\n        id\n        name\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      payoutDetails: payoutDetails,\n    }\n  }\n};\n\nfunction toPayoutStatusTag(status) {\n  if (status === 'paid')\n    return <Badge>Paid</Badge>;\n  if (status === 'in_transit')\n    return <Badge status=\"info\">In transit</Badge>;\n  if (status === 'pending')\n    return <Badge status=\"info\">Pending</Badge>;\n  return <Badge>Paid</Badge>;\n}\n\nfunction PayoutsResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterStatusChange = useCallback(value => setFilterStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const promotedBulkActions = [\n    // {\n    //   content: \"Resend recovery email\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // },\n    // {\n    //   content: \"Edit accounts\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // }\n  ];\n\n  const bulkActions = [\n    // {\n    //   content: \"Add tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk add tags\")\n    // },\n    // {\n    //   content: \"Remove tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    // },\n    {\n      content: \"Delete\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    // {\n    //   key: \"filterStatus\",\n    //   label: \"Status\",\n    //   filter: (\n    //     <ChoiceList\n    //       title=\"Account status\"\n    //       titleHidden\n    //       choices={[\n    //         {label: 'Email sent', value: 'sent'},\n    //         {label: 'Email not sent', value: 'notsent'},\n    //         {label: 'Recovered', value: 'recovered'},\n    //         {label: 'Not recovered', value: 'notrecovered'},\n    //       ]}\n    //       selected={filterStatus || []}\n    //       onChange={handleFilterStatusChange}\n    //       allowMultiple\n    //     />\n    //   ),\n    //   shortcut: true\n    // },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  // const filterControl = (\n  //   <Filters\n  //     queryValue={queryValue}\n  //     filters={filters}\n  //     appliedFilters={appliedFilters}\n  //     onQueryChange={handleQueryValueChange}\n  //     onQueryClear={handleQueryValueRemove}\n  //     onClearAll={handleClearAll}\n  //   />\n  // );\n\n  const { loading, error, data } = useQueryFake(ALL_FILES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  function toTableHeader(transaction) {\n    return [\n      transaction[0], // date\n      transaction[1], // type\n      transaction[2], // order=account\n      // transaction[3], // card brand\n      // transaction[4], // card source\n      // transaction[5], // payout status\n      // transaction[6], // payout date\n      // transaction[7], // available on\n      transaction[8], // amount\n      transaction[9], // fee\n      transaction[10], // net\n    ];\n  }\n\n  function toTableRow(transaction) {\n    const t = toTableHeader(transaction);\n    const date = t[4];\n    return [\n      t[0].replace(' -0400', ''),\n      t[1],\n      <Link url={`/accounts/110`}>{t[2]}</Link>,\n      // toPayoutStatusTag(t[3]),\n      // <Link url={`/settings/payments/payouts/${date}`}>{date}</Link>,\n      toCurrencyWithCents(t[3]),\n      toCurrencyWithCents(-t[4]),\n      <strong>{toCurrencyWithCents(t[5])}</strong>,\n    ];\n  }\n\n  const transactions = data.payoutDetails.reverse();\n  let headings = toTableHeader('Transaction date,Type,Account,Card brand,Card source,Payout status,Payout date,Available On,Amount,Fee,Net'\n    .split(',').map(h => (<strong>{h}</strong>)));\n\n  return (\n    <Card>\n      <DataTable\n        columnContentTypes={[\n          'text',\n          'text',\n          'text',\n          // 'text',\n          // 'text',\n          'numeric',\n          'numeric',\n          'numeric',\n        ]}\n        headings={headings}\n        rows={transactions.map(p => toTableRow(p.split(',')))}\n\n        // sortable={[true, true, false, false, true, false, false, true]}\n        // defaultSortDirection=\"descending\"\n        // initialSortColumnIndex={0}\n        // onSort={() => {}}\n\n        totals={['', '', '', '', '', toCurrencyWithCents(260.57)]}\n        showTotalsInFooter\n      />\n    </Card>\n  );\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      url,\n      size,\n      email,\n      isAdmin,\n      account_status,\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      update_time,\n      create_time,\n      tags,\n      email_status,\n      prospect_status,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const accountPlan = `${account_plan}`;\n    const accountPrice = toCurrency(account_price);\n    const accountPayment = `${accountPrice}/${account_freq}`\n\n    const ltvDisplay = toCurrency(ltv);\n\n    const prospectStatusDisplay = {\n      recovered: {\n        color: 'success',\n        label: 'Recovered',\n      },\n      notrecovered: {\n        color: 'warning',\n        label: 'Not recovered',\n      },\n    };\n    const prospectStatus = prospectStatusDisplay[prospect_status] || {};\n    const emailStatusDisplay = {\n      sent: {\n        color: 'success',\n        label: 'Sent',\n      },\n      notsent: {\n        color: 'warning',\n        label: 'Not sent',\n      },\n      scheduled: {\n        color: 'attention',\n        label: 'Scheduled',\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        // url={`/accounts/${id}`}\n        media={<div style={{ height: 36, width: 50, display: 'flex', alignItems: 'center' }}><img src={url} style={{ verticalAlign: 'middle', maxHeight: 36, maxWidth: 50, }} /></div>}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', height: 36, alignItems: 'center' }}>\n          <div style={{ width: '30%', overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n            <Link>\n              <p style={{ verticalAlign: 'middle', }}>{name}</p>\n            </Link>\n          </div>\n\n          <div style={{ width: '50%' }}>\n            <TextField value={url} disabled />\n          </div>\n\n          <div style={{ width: '15%', paddingLeft: 40, }}>\n            {size}\n          </div>\n\n          <div style={{ width: '5%', textAlign: 'right' }}>\n            <Button icon={DeleteMinor} size=\"slim\" />\n          </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function SettingsFileListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  return (\n    <Page\n      title=\"Payout details\"\n      secondaryActions={[\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: \"Export\",\n          // url: \"http://localhost:3000/leads/exportToCsv\"\n        },\n      ]}\n      breadcrumbs={[{ content: 'Payouts', url: '/settings/payments/payouts' }]}\n    >\n      <Layout>\n        <Layout.Section oneThird>\n          <Card>\n            <Card.Header title=\"Total\">\n              <p>Jun 30</p>\n            </Card.Header>\n            <Card.Section>\n              <Stack alignment=\"center\">\n                <Stack.Item>\n                  <DisplayText>$260.57</DisplayText>\n                </Stack.Item>\n                <Stack.Item>\n                  {toPayoutStatusTag('paid')}\n                </Stack.Item>\n              </Stack>\n              <br/>\n              <br/>\n              <Stack alignment=\"center\">\n                <Icon source={BankMajorMonotone} />\n                <div>\n                  <strong>WELLS FARGO BANK NA</strong><br/>\n                  <TextStyle variation=\"subdued\">***** 19 (USD)</TextStyle>\n                </div>\n              </Stack>\n            </Card.Section>\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n\n        </Layout.Section>\n        <Layout.Section>\n          <Card>\n            <PayoutsResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n  Link,\n  Thumbnail,\n  DataTable,\n} from \"@shopify/polaris\";\nimport {\n  ExportMinor\n} from '@shopify/polaris-icons';\n\nimport { toCurrencyWithCents, toShortDate } from '../lib/textUtils';\nimport { transactions } from '../data/payments';\n\nconst ALL_FILES = gql`\n  {\n    files {\n      edges { node {\n        id\n        name\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      transactions: transactions,\n    }\n  }\n};\n\nfunction TransactionsResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterStatusChange = useCallback(value => setFilterStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const promotedBulkActions = [\n    // {\n    //   content: \"Resend recovery email\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // },\n    // {\n    //   content: \"Edit accounts\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // }\n  ];\n\n  const bulkActions = [\n    // {\n    //   content: \"Add tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk add tags\")\n    // },\n    // {\n    //   content: \"Remove tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    // },\n    {\n      content: \"Delete\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    // {\n    //   key: \"filterStatus\",\n    //   label: \"Status\",\n    //   filter: (\n    //     <ChoiceList\n    //       title=\"Account status\"\n    //       titleHidden\n    //       choices={[\n    //         {label: 'Email sent', value: 'sent'},\n    //         {label: 'Email not sent', value: 'notsent'},\n    //         {label: 'Recovered', value: 'recovered'},\n    //         {label: 'Not recovered', value: 'notrecovered'},\n    //       ]}\n    //       selected={filterStatus || []}\n    //       onChange={handleFilterStatusChange}\n    //       allowMultiple\n    //     />\n    //   ),\n    //   shortcut: true\n    // },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  // const filterControl = (\n  //   <Filters\n  //     queryValue={queryValue}\n  //     filters={filters}\n  //     appliedFilters={appliedFilters}\n  //     onQueryChange={handleQueryValueChange}\n  //     onQueryClear={handleQueryValueRemove}\n  //     onClearAll={handleClearAll}\n  //   />\n  // );\n\n  const { loading, error, data } = useQueryFake(ALL_FILES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  function toPayoutStatusTag(status) {\n    if (status === 'paid')\n      return <Badge>Paid</Badge>;\n    if (status === 'in_transit')\n      return <Badge status=\"info\">In transit</Badge>;\n    if (status === 'pending')\n      return <Badge status=\"info\">Pending</Badge>;\n    return <Badge>Paid</Badge>;\n  }\n\n  function toTableHeader(transaction) {\n    return [\n      transaction[0], // date\n      transaction[1], // type\n      transaction[2], // order=account\n      // transaction[3], // card brand\n      // transaction[4], // card source\n      transaction[5], // payout status\n      transaction[6], // payout date\n      // transaction[7], // available on\n      transaction[8], // amount\n      transaction[9], // fee\n      transaction[10], // net\n    ];\n  }\n\n  function toTableRow(transaction) {\n    const t = toTableHeader(transaction);\n    const date = t[4];\n    return [\n      t[0].replace(' -0400', ''),\n      t[1],\n      <Link url={`/accounts/110`}>{t[2]}</Link>,\n      toPayoutStatusTag(t[3]),\n      <Link url={`/settings/payments/payouts/${date}`}>{date}</Link>,\n      toCurrencyWithCents(t[5]),\n      toCurrencyWithCents(-t[6]),\n      <strong>{toCurrencyWithCents(t[7])}</strong>,\n    ];\n  }\n\n  const transactions = data.transactions.reverse();\n  let headings = toTableHeader('Transaction date,Type,Account,Card brand,Card source,Payout status,Payout date,Available On,Amount,Fee,Net'\n    .split(',').map(h => (<strong>{h}</strong>)));\n\n  return (\n    <Card>\n      <Card.Section>\n        <Filters\n          queryValue={queryValue}\n          filters={filters}\n          appliedFilters={appliedFilters}\n          onQueryChange={handleQueryValueChange}\n          onQueryClear={handleQueryValueRemove}\n          onClearAll={handleClearAll}\n        />\n      </Card.Section>\n      <DataTable\n        columnContentTypes={[\n          'text',\n          'text',\n          'text',\n          'text',\n          'text',\n          'numeric',\n          'numeric',\n          'numeric',\n        ]}\n        headings={headings}\n        rows={transactions.map(p => toTableRow(p.split(',')))}\n\n        sortable={[true, true, false, false, true, false, false, true]}\n        defaultSortDirection=\"descending\"\n        initialSortColumnIndex={0}\n        onSort={() => {}}\n\n        // totals={['', '', '', 255, '$155,830.00']}\n      />\n    </Card>\n  );\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      url,\n      size,\n      email,\n      isAdmin,\n      account_status,\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      update_time,\n      create_time,\n      tags,\n      email_status,\n      prospect_status,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const accountPlan = `${account_plan}`;\n    const accountPrice = toCurrency(account_price);\n    const accountPayment = `${accountPrice}/${account_freq}`\n\n    const ltvDisplay = toCurrency(ltv);\n\n    const prospectStatusDisplay = {\n      recovered: {\n        color: 'success',\n        label: 'Recovered',\n      },\n      notrecovered: {\n        color: 'warning',\n        label: 'Not recovered',\n      },\n    };\n    const prospectStatus = prospectStatusDisplay[prospect_status] || {};\n    const emailStatusDisplay = {\n      sent: {\n        color: 'success',\n        label: 'Sent',\n      },\n      notsent: {\n        color: 'warning',\n        label: 'Not sent',\n      },\n      scheduled: {\n        color: 'attention',\n        label: 'Scheduled',\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        // url={`/accounts/${id}`}\n        media={<div style={{ height: 36, width: 50, display: 'flex', alignItems: 'center' }}><img src={url} style={{ verticalAlign: 'middle', maxHeight: 36, maxWidth: 50, }} /></div>}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', height: 36, alignItems: 'center' }}>\n          <div style={{ width: '30%', overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n            <Link>\n              <p style={{ verticalAlign: 'middle', }}>{name}</p>\n            </Link>\n          </div>\n\n          <div style={{ width: '50%' }}>\n            <TextField value={url} disabled />\n          </div>\n\n          <div style={{ width: '15%', paddingLeft: 40, }}>\n            {size}\n          </div>\n\n          <div style={{ width: '5%', textAlign: 'right' }}>\n            <Button icon={DeleteMinor} size=\"slim\" />\n          </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function SettingsFileListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  return (\n    <Page\n      title=\"Transactions\"\n      secondaryActions={[\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: \"Export\",\n          // url: \"http://localhost:3000/leads/exportToCsv\"\n        },\n      ]}\n      breadcrumbs={[{ content: 'Payouts', url: '/settings/payments/payouts' }]}\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <TransactionsResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n  Icon,\n} from \"@shopify/polaris\";\nimport { InviteMinor, ViewMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, NotificationListAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsNotificationListPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsNotificationListPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    email,\n    lastLogin,\n    role,\n  } = item;\n  const media = <UserAvatar customer size=\"medium\" name={id} email={email} />;\n  const shortcutActions = null;\n\n  return (\n    <ResourceItem\n      id={id}\n      url={`/users/${id}`}\n      media={media}\n      accessibilityLabel={`View details for ${email}`}\n      // shortcutActions={shortcutActions}\n      // persistActions\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ width: '80%' }}>\n          <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n          </h3>\n          <div>Last login: {lastLogin}</div>\n        </div>\n\n        <div style={{ width: '20%' }}>\n          {role}\n        </div>\n\n      </div>\n    </ResourceItem>\n  );\n}\n\nfunction SettingsNotificationListPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  return (\n    <Page\n      title={\"Edit notification\"}\n      breadcrumbs={[{ content: \"Notifications\", url: \"/settings/notifications\" }]}\n      secondaryActions={[\n        { content: \"Send test email\", icon: () => <Icon source={InviteMinor} />, },\n        { content: \"Preview\", icon: () => <Icon source={ViewMinor} />, },\n      ]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.Section\n          title=\"Permissions\"\n          description=\"Manage what NotificationList can see or do in your admin dashboard.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Email subject\"\n                // labelHidden\n                // maxLength={320}\n                // showCharacterCount\n                value={settings.name}\n                onChange={value => handleFieldChange(\"name\", value)}\n              />\n              <TextField\n                label=\"Email body\"\n                // labelHidden\n                // maxLength={320}\n                // showCharacterCount\n                multiline={10}\n                value={settings.description}\n                onChange={value => handleFieldChange(\"description\", value)}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n          <Card title=\"Liquid variables\" sectioned>\n            You can use liquid variables to output an accent color and logo image in your templates.\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n            secondaryActions={[{\n              content: \"Revert to default\",\n              disabled: true\n            }]}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n  Link,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, NotificationListAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsNotificationListPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsNotificationListPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    description,\n    status,\n    optional,\n  } = item;\n  const shortcutActions = null;\n\n  return (\n      <div style={{ display: 'flex', justifyContent: 'space-between', paddingTop: 8, paddingBottom: 8 }}>\n\n        <div style={{ width: '5%', verticalAlign: 'top' }}>\n          <Checkbox\n            label=\"\"\n            onChange={value => {}}\n            checked={true}\n            disabled={!optional}\n          />\n        </div>\n\n        <div style={{ width: '30%', paddingTop: 4, paddingBottom: 4 }}>\n          <h3>\n            <Link url={`/settings/notifications/${id}`}>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n            </Link>\n          </h3>\n        </div>\n\n        <div style={{ width: '70%', paddingTop: 4, paddingBottom: 4 }}>\n          {description}\n        </div>\n\n      </div>\n  );\n}\n\nfunction SettingsNotificationListPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const resourceName = {\n    singular: \"notification\",\n    plural: \"notifications\"\n  };\n\n  return (\n    <Page\n      title={\"Notifications\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Customer notifications\"\n          description=\"These notifications are automatically sent out to the customer. Click on the notification template to edit the content.\"\n        >\n          <Card title=\"Accounts\" sectioned>\n            <ResourceList\n              resourceName={resourceName}\n              items={[\n                {id: 1, name: 'New account', description: 'Sent when a new account is registered.'},\n                {id: 2, name: 'Delete account', description: 'Sent to confirm the account has been deleted.'},\n              ]}\n              renderItem={renderItem}\n            />\n          </Card>\n          <Card title=\"Leads\" sectioned>\n            <ResourceList\n              resourceName={resourceName}\n              items={[\n                {id: 1, name: 'Thank you email', description: 'Sent when a lead leaves their email address.'},\n                {id: 2, name: 'Incomplete registration reminder', description: 'Sent 1 day after an incomplete registration.'},\n              ]}\n              renderItem={renderItem}\n            />\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Staff notifications\"\n          description=\"Choose the notifications that you want to receive.\"\n        >\n          <Card title=\"Recipient\" sectioned>\n            <FormLayout>\n              <FormLayout.Group>\n              <TextField\n                label=\"Name (optional)\"\n                placeholder=\"Beautifulsaas Team\"\n                value={settings.email_admin}\n                onChange={value => handleFieldChange(\"email_admin\", value)}\n              />\n              <TextField\n                label=\"Email\"\n                placeholder=\"admin@beautifulsaas.com\"\n                value={settings.email_site}\n                onChange={value => handleFieldChange(\"email_site\", value)}\n              />\n              </FormLayout.Group>\n            </FormLayout>\n          </Card>\n          <Card title=\"Notifications\" sectioned>\n            <ResourceList\n              resourceName={resourceName}\n              items={[\n                {id: 1, name: 'New account', description: 'Sent when a new account is registered.', optional: true},\n                // {id: 2, name: 'B', description: 'yyy'},\n              ]}\n              renderItem={renderItem}\n            />\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Page,\n} from \"@shopify/polaris\";\n\nexport default function SettingsLanguagesPage() {\n  return (\n    <Page\n      title={\"Languages\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      <Card>\n      </Card>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, BillingAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsBillingPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsBillingPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    created,\n    status,\n    total,\n  } = item;\n\n  return (\n    <ResourceItem\n      id={id}\n      url={`/settings/bills/${id}`}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ width: '30%' }}>\n          <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n          </h3>\n        </div>\n\n        <div style={{ width: '40%' }}>\n          <div>Created: {created}</div>\n        </div>\n\n        <div style={{ width: '20%' }}>\n          <Badge>{status}</Badge>\n        </div>\n\n        <div style={{ width: '10%' }}>\n          {total}\n        </div>\n      </div>\n    </ResourceItem>\n  );\n}\n\nfunction SettingsBillingPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  return (\n    <Page\n      title={\"Billing\"}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Bills\"\n          description={<p>Bills include your subscription, app charges and transaction fees, if any.<br/><br/>Monthly bills are on a 30-day cycle.</p>}\n        >\n          <Card title=\"Current billing cycle: Jun 6, 2020-Jul 6, 2020\" sectioned>\n            <Card.Section>\n              <Card.Subsection>\n                <Stack>\n                  <Stack.Item fill>Subscription</Stack.Item>\n                  <Stack.Item>$299.00</Stack.Item>\n                </Stack>\n              </Card.Subsection>\n              <Card.Subsection>\n                <strong>\n                <Stack>\n                  <Stack.Item fill>Running total</Stack.Item>\n                  <Stack.Item>$299.00</Stack.Item>\n                </Stack>\n                </strong>\n              </Card.Subsection>\n            </Card.Section>\n          </Card>\n          <Card title=\"Bills\">\n            <br/>\n            <ResourceList\n              items={[\n                {\n                  id: 101,\n                  name: 'Billing cycle',\n                  created: 'Jun 6, 2020',\n                  status: 'paid',\n                  total: '$299.00',\n                },\n                {\n                  id: 108,\n                  name: 'Billing cycle',\n                  created: 'May 7, 2020',\n                  status: 'paid',\n                  total: '$299.00',\n                },\n                {\n                  id: 109,\n                  name: 'Billing cycle',\n                  created: 'Apr 7, 2020',\n                  status: 'paid',\n                  total: '$299.00',\n                },\n              ]}\n              renderItem={renderItem}\n            />\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n  DataTable,\n  Icon,\n} from \"@shopify/polaris\";\nimport { ExportMinor, NoteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, NotificationListAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsNotificationListPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsNotificationListPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction renderItem(item) {\n  const {\n    id,\n    name,\n    email,\n    lastLogin,\n    role,\n  } = item;\n  const media = <UserAvatar customer size=\"medium\" name={id} email={email} />;\n  const shortcutActions = null;\n\n  return (\n    <ResourceItem\n      id={id}\n      url={`/users/${id}`}\n      media={media}\n      accessibilityLabel={`View details for ${email}`}\n      // shortcutActions={shortcutActions}\n      // persistActions\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{ width: '80%' }}>\n          <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n          </h3>\n          <div>Last login: {lastLogin}</div>\n        </div>\n\n        <div style={{ width: '20%' }}>\n          {role}\n        </div>\n\n      </div>\n    </ResourceItem>\n  );\n}\n\nfunction SettingsNotificationListPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const rows = [\n    ['Subscription', '', '$299.00'],\n    ['Transaction fees', '', '$34.27'],\n    ['', 'Subtotal', '$333.27'],\n  ];\n\n  return (\n    <Page\n      title={\"Bill\"}\n      breadcrumbs={[{ content: \"Billing\", url: \"/settings/bills\" }]}\n      secondaryActions={[\n        { content: \"Download\", icon: () => <Icon source={NoteMinor} />, },\n        { content: \"Export as CSV\", icon: () => <Icon source={ExportMinor} />, },\n      ]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.Section\n          title=\"Permissions\"\n          description=\"Manage what NotificationList can see or do in your admin dashboard.\"\n        >\n          <Card>\n            <Card.Section>\n              <strong>\n              <Stack>\n                <Stack.Item fill>Subscription</Stack.Item>\n                <Stack.Item>$299.00</Stack.Item>\n              </Stack>\n              </strong>\n            </Card.Section>\n            <Card.Section subdued>\n              <Stack>\n                <Stack.Item fill>Pro plan (every 30 days)</Stack.Item>\n                <Stack.Item>$299.00</Stack.Item>\n              </Stack>\n            </Card.Section>\n\n            <Card.Section>\n              <Card.Subsection>\n                <Stack distribution=\"trailing\">\n                  <Stack.Item>Subtotal</Stack.Item>\n                  <Stack.Item>$299.00</Stack.Item>\n                </Stack>\n              </Card.Subsection>\n              <Card.Subsection>\n                <strong>\n                <Stack distribution=\"trailing\">\n                  <Stack.Item>Total</Stack.Item>\n                  <Stack.Item>$299.00</Stack.Item>\n                </Stack>\n                </strong>\n              </Card.Subsection>\n            </Card.Section>\n          </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n          <Card>\n            <div style={{ textAlign: 'center', padding: 20 }}>\n              <DisplayText>$299.00</DisplayText>\n            </div>\n            <div style={{ backgroundColor: '#bbe5b3', textAlign: 'center', padding: 10 }}>\n              <DisplayText>Paid</DisplayText>\n            </div>\n\n            <Card.Section title=\"Bill number\">\n              82687365\n            </Card.Section>\n            <Card.Section title=\"Bill paid\">\n              Jun 26, 2020\n            </Card.Section>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n  Link,\n  Thumbnail,\n} from \"@shopify/polaris\";\nimport {\n  DeleteMinor\n} from '@shopify/polaris-icons';\n\nimport { toCurrency, toShortDate } from '../lib/textUtils';\n\nconst files = [\n  {\n    name: 'WWR-Logo-Horizontal.png',\n    url: 'https://cdn.shopify.com/s/files/1/0271/3164/1908/files/WWR-Logo-Horizontal.png?v=1588546163',\n    size: '16.2 kB',\n    mime: 'image',\n  },\n  {\n    name: 'mobile-receipt-visa.png',\n    url: 'https://cdn.shopify.com/s/files/1/0271/3164/1908/files/mobile-receipt-visa.png?v=1589368522',\n    size: '2.52 kB',\n    mime: 'image',\n  },\n  {\n    name: 'mobile-receipt-mastercard.png',\n    url: 'https://cdn.shopify.com/s/files/1/0271/3164/1908/files/mobile-receipt-mastercard.png?v=1589368520',\n    size: '3.14 kB',\n    mime: 'image',\n  },\n  {\n    name: 'mobile-receipt-amex.png',\n    url: 'https://cdn.shopify.com/s/files/1/0271/3164/1908/files/mobile-receipt-amex.png?v=1589368516',\n    size: '3.82 kB',\n    mime: 'image',\n  },\n];\n\nconst ALL_FILES = gql`\n  {\n    files {\n      edges { node {\n        id\n        name\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      files: files,\n    }\n  }\n};\n\nfunction FilesResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterStatusChange = useCallback(value => setFilterStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: \"file\",\n    plural: \"files\"\n  };\n\n  const promotedBulkActions = [\n    // {\n    //   content: \"Resend recovery email\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // },\n    // {\n    //   content: \"Edit accounts\",\n    //   onAction: () => console.log(\"Todo: implement bulk edit\")\n    // }\n  ];\n\n  const bulkActions = [\n    // {\n    //   content: \"Add tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk add tags\")\n    // },\n    // {\n    //   content: \"Remove tags\",\n    //   onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    // },\n    {\n      content: \"Delete\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    // {\n    //   key: \"filterStatus\",\n    //   label: \"Status\",\n    //   filter: (\n    //     <ChoiceList\n    //       title=\"Account status\"\n    //       titleHidden\n    //       choices={[\n    //         {label: 'Email sent', value: 'sent'},\n    //         {label: 'Email not sent', value: 'notsent'},\n    //         {label: 'Recovered', value: 'recovered'},\n    //         {label: 'Not recovered', value: 'notrecovered'},\n    //       ]}\n    //       selected={filterStatus || []}\n    //       onChange={handleFilterStatusChange}\n    //       allowMultiple\n    //     />\n    //   ),\n    //   shortcut: true\n    // },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  const filterControl = (\n    <Filters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    />\n  );\n\n  const { loading, error, data } = useQueryFake(ALL_FILES);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <ResourceList\n      resourceName={resourceName}\n      items={data.files}\n      renderItem={renderItem}\n      selectedItems={selectedItems}\n      onSelectionChange={setSelectedItems}\n      promotedBulkActions={promotedBulkActions}\n      bulkActions={bulkActions}\n      // sortValue={sortValue}\n      // sortOptions={[\n      //   { label: \"Latest update\", value: \"DATE_MODIFIED_DESC\" },\n      //   { label: \"Newest\", value: \"DATE_CREATED_DESC\" },\n      //   { label: \"Oldest\", value: \"DATE_CREATED_ASC\" },\n      // ]}\n      // onSortChange={selected => {\n      //   setSortValue(selected);\n      //   console.log(`Sort option changed to ${selected}.`);\n      // }}\n      filterControl={filterControl}\n    />\n  );\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      url,\n      size,\n      email,\n      isAdmin,\n      account_status,\n      account_plan,\n      account_price,\n      account_freq,\n      ltv,\n      update_time,\n      create_time,\n      tags,\n      email_status,\n      prospect_status,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const accountPlan = `${account_plan}`;\n    const accountPrice = toCurrency(account_price);\n    const accountPayment = `${accountPrice}/${account_freq}`\n\n    const ltvDisplay = toCurrency(ltv);\n\n    const prospectStatusDisplay = {\n      recovered: {\n        color: 'success',\n        label: 'Recovered',\n      },\n      notrecovered: {\n        color: 'warning',\n        label: 'Not recovered',\n      },\n    };\n    const prospectStatus = prospectStatusDisplay[prospect_status] || {};\n    const emailStatusDisplay = {\n      sent: {\n        color: 'success',\n        label: 'Sent',\n      },\n      notsent: {\n        color: 'warning',\n        label: 'Not sent',\n      },\n      scheduled: {\n        color: 'attention',\n        label: 'Scheduled',\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n\n    return (\n      <ResourceItem\n        id={id}\n        // url={`/accounts/${id}`}\n        media={<div style={{ height: 36, width: 50, display: 'flex', alignItems: 'center' }}><img src={url} style={{ verticalAlign: 'middle', maxHeight: 36, maxWidth: 50, }} /></div>}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', height: 36, alignItems: 'center' }}>\n          <div style={{ width: '30%', overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>\n            <Link>\n              <p style={{ verticalAlign: 'middle', }}>{name}</p>\n            </Link>\n          </div>\n\n          <div style={{ width: '50%' }}>\n            <TextField value={url} disabled />\n          </div>\n\n          <div style={{ width: '15%', paddingLeft: 40, }}>\n            {size}\n          </div>\n\n          <div style={{ width: '5%', textAlign: 'right' }}>\n            <Button icon={DeleteMinor} size=\"slim\" />\n          </div>\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function SettingsFileListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  return (\n    <Page\n      title=\"Files\"\n      primaryAction={{\n        content: 'Upload new file',\n      }}\n      breadcrumbs={[{ content: \"Settings\", url: \"/settings\" }]}\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <FilesResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  ResourceItem,\n  Link,\n  ActionList,\n  Popover,\n  Button,\n  FooterHelp,\n  Icon,\n} from \"@shopify/polaris\";\nimport { ViewMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nimport { UserAvatar, NotificationListAvatar } from '../lib/imageUtils';\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function SettingsNotificationListPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <SettingsNotificationListPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction ActionsMenu({ isLiveTheme }) {\n  const [popoverActive, setPopoverActive] = useState(false);\n\n  const togglePopoverActive = useCallback(\n    () => setPopoverActive((popoverActive) => !popoverActive),\n    [],\n  );\n\n  const menuItems = isLiveTheme ?\n    [\n      {content: 'View'},\n      {content: 'Download'},\n      {content: 'Duplicate'},\n    ] :\n    [\n      {content: 'Preview'},\n      {content: 'Publish'},\n      {content: 'Download'},\n      {content: 'Duplicate'},\n    ];\n\n  const activator = (\n    <Button onClick={togglePopoverActive} disclosure plain={!isLiveTheme}>\n      Actions\n    </Button>\n  );\n\n  return (\n    <Popover\n      active={popoverActive}\n      activator={activator}\n      onClose={togglePopoverActive}\n    >\n      <ActionList items={menuItems} />\n    </Popover>\n  );\n}\n\nfunction renderItem(item) {\n  // const [actionMenuOpen, setActionMenuOpen] = useState(false);\n  const {\n    id,\n    name,\n    lastUpdate,\n  } = item;\n\n  return (\n    <Card.Section title={<strong>{name}</strong>}\n      actions={[\n        { content: <ActionsMenu />},\n        { content: 'Edit', url: `/themes/${id}` },\n      ]}\n    >\n      Last saved: {lastUpdate}\n    </Card.Section>\n  );\n\n}\n\nfunction SettingsNotificationListPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const resourceName = {\n    singular: \"theme\",\n    plural: \"themes\"\n  };\n\n  const themes = [\n    {id: 1, name: 'Single Page', lastUpdate: 'May 3 at 05:22 pm', live: true},\n    {id: 2, name: 'Copy of Single Page', lastUpdate: 'May 3 at 05:21 pm'},\n    {id: 3, name: 'Multi Pages', lastUpdate: 'Oct 26, 2019'},\n  ];\n\n  const liveTheme = themes.filter((i) => (i.live))[0];\n  const otherThemes = themes.filter((i) => (!i.live));\n\n  return (\n    <Page\n      title={\"Themes\"}\n      secondaryActions={[\n        { content: \"View your site\", icon: () => <Icon source={ViewMinor} />, },\n      ]}\n    >\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"Live theme\"\n          description=\"This is the theme users see when they visit your site.\"\n        >\n          <Card>\n            <Card.Header title={liveTheme.name}>\n              <ActionsMenu isLiveTheme />\n              <Button primary url={`/themes/${liveTheme.id}`}>Edit</Button>\n            </Card.Header>\n            <Card.Section>\n              Last saved: {liveTheme.lastUpdate}\n            </Card.Section>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"More themes\"\n          description={\n            <div>\n              <p>Add a new theme to restyle your site. Choose Actions > Publish to make it live.</p>\n              <br/>\n              <Button>Upload theme</Button>\n            </div>\n          }\n        >\n          <Card>\n            <ResourceList\n              resourceName={resourceName}\n              items={otherThemes}\n              renderItem={renderItem}\n            />\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n      <FooterHelp>\n        Learn more about{' '}\n        <Link url=\"https://help.saasform.dev/\">\n          themes\n        </Link>\n      </FooterHelp>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Page } from \"@shopify/polaris\";\n\nexport default function ThemePage() {\n  return (\n    <Page\n      title={\"Theme\"}\n      breadcrumbs={[{ content: \"Themes\", url: \"/themes\" }]}\n    />\n  );\n}\n","import { Component} from 'react';\n\nexport const users = [\n  {\n    id: 110,\n    name: 'Emanuele Cesena',\n    email: 'ec@solokeys.com',\n    user_status: 'active',\n    user_login_count: 2,\n    email_status: 'verified',\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    tags: ['security', 'VIP'],\n    account: { id: 110, name: 'SoloKeys', },\n    isAdmin: true,\n    accounts: [\n      { id: 110, name: 'SoloKeys', },\n      { id: 101, name: 'Saasform', },\n    ],\n  },\n  {\n    id: 109,\n    name: 'Francesco Sullo',\n    email: 'sullof@gmail.com',\n    user_status: 'disabled',\n    user_login_count: 5,\n    email_status: 'verified',\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    tags: [],\n    account: { id: 102, name: 'Secrez', },\n  },\n  {\n    id: 108,\n    name: 'Davide Vernizzi',\n    email: 'davide.vernizzi@gmail.com',\n    user_status: 'invited',\n    user_login_count: 0,\n    email_status: 'notverified',\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    tags: [],\n    account: { id: 102, name: 'Saasform', },\n    isAdmin: true,\n  },\n\n  {\n    id: 107,\n    name: 'Nicolas Stalder',\n    email: 'nicolas@solokeys.com',\n    user_status: 'active',\n    email_status: 'verified',\n    user_login_count: 1,\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    tags: [],\n    account: { id: 110, name: 'SoloKeys', },\n  },\n  {\n    id: 106,\n    name: 'Haden Patrick',\n    email: 'hp@solokeys.com',\n    user_status: 'active',\n    email_status: 'notverified',\n    user_login_count: 1,\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    account: { id: 110, name: 'SoloKeys', },\n  },\n  {\n    id: 105,\n    name: 'Conor Patrick',\n    email: 'cp@solokeys.com',\n    user_status: 'active',\n    email_status: 'verified',\n    user_login_count: 1,\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    account: { id: 110, name: 'SoloKeys', },\n    accounts: [\n      { id: 110, name: 'SoloKeys', },\n    ],\n  },\n  {\n    id: 101,\n    name: 'Pancrazio Auteri',\n    email: 'pancrazio.auteri@gmail.com',\n    user_status: 'active',\n    email_status: 'verified',\n    user_login_count: 1,\n    create_time: '2019-06-01',\n    update_time: '2020-06-01',\n    tags: ['VIP'],\n    isAdmin: true,\n    account: { id: 101, name: 'Saasform', },\n  },\n];\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  ChoiceList,\n  RangeSlider,\n  ResourceList,\n  Filters,\n  Avatar,\n  TextStyle,\n  Button,\n  ResourceItem,\n  Icon,\n  Stack,\n  Badge,\n  Tabs,\n} from \"@shopify/polaris\";\nimport {\n  ExportMinor,\n  ImportMinor,\n} from '@shopify/polaris-icons';\n\nimport { toShortDate } from '../lib/textUtils';\nimport { users } from '../data/users';\n\n\nconst ALL_USERS = gql`\n  {\n    users {\n      edges { node {\n        id\n        email\n        isAdmin\n      }}\n    }\n  }\n`;\n\nfunction useQueryFake() {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      users: users,\n    }\n  }\n};\n\nfunction UsersResourceList() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState(\"DATE_MODIFIED_DESC\");\n  const [filterEmailStatus, setFilterEmailStatus] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [taggedWith, setTaggedWith] = useState('');\n  const [queryValue, setQueryValue] = useState('');\n\n  const handleFilterEmailStatusChange = useCallback(value => setFilterEmailStatus(value), []);\n  const handleFilterStatusChange = useCallback(value => setEmailStatus(value), []);\n  const handleFilterTaggedWithChange = useCallback(value => setTaggedWith(value), []);\n  const handleQueryValueChange = useCallback(value => setQueryValue(value), []);\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(\"\"), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(\"\"), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: \"user\",\n    plural: \"users\"\n  };\n\n  const promotedBulkActions = [\n    {\n      content: \"Resend verification email\",\n      onAction: () => console.log(\"Todo: implement bulk edit\")\n    },\n    {\n      content: \"Edit users\",\n      onAction: () => console.log(\"Todo: implement bulk edit\")\n    }\n  ];\n\n  const bulkActions = [\n    {\n      content: \"Enable\",\n      onAction: () => console.log(\"Todo: implement bulk add tags\")\n    },\n    {\n      content: \"Disable\",\n      onAction: () => console.log(\"Todo: implement bulk add tags\")\n    },\n    {\n      content: \"Add tags\",\n      onAction: () => console.log(\"Todo: implement bulk add tags\")\n    },\n    {\n      content: \"Remove tags\",\n      onAction: () => console.log(\"Todo: implement bulk remove tags\")\n    },\n    {\n      content: \"Delete users\",\n      onAction: () => console.log(\"Todo: implement bulk delete\")\n    }\n  ];\n\n  const filters = [\n    {\n      key: \"filterStatus\",\n      label: \"Status\",\n      filter: (\n        <ChoiceList\n          title=\"User status\"\n          titleHidden\n          choices={[\n            {label: 'Active', value: 'active'},\n            {label: 'Invited', value: 'invited'},\n            {label: 'Disabled', value: 'disabled'},\n          ]}\n          selected={filterStatus || []}\n          onChange={handleFilterStatusChange}\n          allowMultiple\n        />\n      ),\n      shortcut: true\n    },\n    {\n      key: \"filterEmailStatus\",\n      label: \"Email\",\n      filter: (\n        <ChoiceList\n          title=\"Email status\"\n          titleHidden\n          choices={[\n            {label: 'Verified', value: 'verified'},\n            {label: 'Not verified', value: 'notverified'},\n          ]}\n          selected={filterEmailStatus || []}\n          onChange={handleFilterEmailStatusChange}\n          allowMultiple\n        />\n      ),\n      shortcut: true\n    },\n    {\n      key: \"taggedWith\",\n      label: \"Tagged with\",\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleFilterTaggedWithChange}\n          labelHidden\n        />\n      ),\n      shortcut: true\n    },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: \"taggedWith\",\n          label: disambiguateLabel(\"taggedWith\", taggedWith),\n          onRemove: handleTaggedWithRemove\n        }\n      ]\n    : [];\n\n  const filterControl = (\n    <Filters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{ paddingLeft: \"8px\" }}>\n        <Button onClick={() => console.log(\"New filter saved\")}>Save</Button>\n      </div>\n    </Filters>\n  );\n\n  const { loading, error, data } = useQueryFake(ALL_USERS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <ResourceList\n      resourceName={resourceName}\n      items={data.users}\n      renderItem={renderItem}\n      selectedItems={selectedItems}\n      onSelectionChange={setSelectedItems}\n      promotedBulkActions={promotedBulkActions}\n      bulkActions={bulkActions}\n      sortValue={sortValue}\n      sortOptions={[\n        { label: \"Latest update\", value: \"DATE_MODIFIED_DESC\" },\n        { label: \"Newest\", value: \"DATE_CREATED_DESC\" },\n        { label: \"Oldest\", value: \"DATE_CREATED_ASC\" },\n      ]}\n      onSortChange={selected => {\n        setSortValue(selected);\n        console.log(`Sort option changed to ${selected}.`);\n      }}\n      filterControl={filterControl}\n    />\n  );\n\n  function toCurrency(val) {\n    return '$' + (val / 100 || 0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  function renderItem(item) {\n    const {\n      id,\n      name,\n      account,\n      user_status,\n      user_login_count,\n      email,\n      email_status,\n      isAdmin,\n      update_time,\n      create_time,\n      tags,\n    } = item;\n    const media = <Avatar customer size=\"medium\" name={id} />;\n    const shortcutActions = null;\n\n    const userStatusDisplay = {\n      active: {\n        color: 'success',\n        label: 'Active',\n      },\n      disabled: {\n        color: 'warning',\n        label: 'Disabled',\n      },\n      invited: {\n        color: 'info',\n        label: 'Invited',\n      },\n    };\n    const userStatus = userStatusDisplay[user_status] || {};\n    const emailStatusDisplay = {\n      verified: {\n        color: 'success',\n        label: 'Verified',\n      },\n      notverified: {\n        color: 'warning',\n        label: 'Not verified',\n      },\n    };\n    const emailStatus = emailStatusDisplay[email_status] || {};\n\n    const tagsDisplay = (tags || []).map(t => <Badge>{t}</Badge>);\n    const loginDisplay = (user_login_count || 0) + ' logins';\n\n    return (\n      <ResourceItem\n        id={id}\n        url={`/users/${id}`}\n        // media={media}\n        accessibilityLabel={`View details for ${email}`}\n        // shortcutActions={shortcutActions}\n        // persistActions\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div style={{ width: '15%' }}>\n            {toShortDate(update_time)}\n          </div>\n\n          <div style={{ width: '25%' }}>\n            <h3>\n              <TextStyle variation=\"strong\">{name}</TextStyle>\n            </h3>\n            <div>{isAdmin ? \"(Staff)\" : (account || {}).name}</div>\n          </div>\n\n          <div style={{ display: 'flex',  width: '10%', justifyContent: 'center' }}>\n            <Stack alignment=\"center\" spacing=\"extraTight\">\n              <Badge status={userStatus.color}>{userStatus.label}</Badge>\n            </Stack>\n          </div>\n\n          <div style={{ display: 'flex',  width: '15%', justifyContent: 'center' }}>\n            <Stack alignment=\"center\" spacing=\"extraTight\">\n              <Badge status={emailStatus.color}>{emailStatus.label}</Badge>\n            </Stack>\n          </div>\n\n          <div style={{ display: 'flex',  width: '10%', justifyContent: 'center' }}>\n            {loginDisplay}\n          </div>\n\n          <div style={{ width: '20%' }}>\n            <Stack alignment=\"center\" spacing=\"extraTight\" distribution=\"center\">\n              {tagsDisplay}\n            </Stack>\n          </div>\n\n        </div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case \"taggedWith\":\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === \"\" || value == null;\n    }\n  }\n}\n\nexport default function UserListPage() {\n  const [selected, setSelected] = useState(0);\n\n  const handleTabChange = useCallback(\n    (selectedTabIndex) => setSelected(selectedTabIndex),\n    [],\n  );\n\n  const tabs = [\n    {\n      id: 'all',\n      content: 'All',\n    },\n    {\n      id: 'invited',\n      content: 'Invited',\n    },\n    {\n      id: 'disabled',\n      content: 'Disabled',\n    },\n    {\n      id: 'notverified',\n      content: 'Email not verified',\n    },\n  ];\n\n  return (\n    <Page\n      title=\"Users\"\n      primaryAction={{content: 'Add user'}}\n      secondaryActions={[\n        {\n          icon: () => <Icon source={ImportMinor} />,\n          content: 'Import',\n        },\n        {\n          icon: () => <Icon source={ExportMinor} />,\n          content: 'Export',\n        },\n      ]}\n    >\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <Tabs tabs={tabs} selected={selected} onSelect={handleTabChange}>\n            </Tabs>\n            <UsersResourceList />\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\n","// @ts-nocheck\nimport React, { useState, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  ResourceItem,\n  TextStyle,\n  Stack,\n  Button,\n  List,\n  TextContainer,\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\n\nimport { UserAvatar, StaffAvatar } from '../lib/imageUtils';\nimport { users } from '../data/users';\n\n\nconst QUERY_USER = gql`\n  query GetUser($id: ID!) {\n    user(id: $id) {\n      email\n      isAdmin\n    }\n  }\n`;\n\nfunction useQueryFake(query, {variables: { id }}) {\n  return {\n    loading: false,\n    error: false,\n    data: {\n      user: users.filter(u => u.id == id)[0] || users[0],\n    }\n  }\n};\n\n\nfunction UserDetails({ user }) {\n  return (\n    <Card title=\"User details\">\n      <Card.Section>\n        <Stack>\n          <UserAvatar email={user.email} />\n          <p>{user.name}</p>\n        </Stack>\n      </Card.Section>\n    </Card>\n  );\n}\n\nfunction AccountDetails({ user }) {\n  return (\n    <Card title=\"Account\">\n      <ResourceList\n        items={user.accounts || [user.account]}\n        renderItem={({ id, name }) => (\n          <ResourceItem\n            id={id}\n            url={`/accounts/${id}`}\n            media={null}\n          >\n            {name}\n          </ResourceItem>\n        )}\n      />\n    </Card>\n  );\n}\n\nfunction UserTimeline({ user }) {\n  const [note, setNote] = useState('');\n\n  const handleNoteChange = useCallback(value => setNote(value), []);\n\n  const staff = <StaffAvatar email=\"\" initials=\"EC\" />;\n\n  return (\n    <Card title=\"Timeline\" sectioned>\n      <div style={{ marginBottom: 32 }}>\n      <Stack alignment=\"center\">\n        {staff}\n        <Stack.Item fill>\n        <TextField\n          placeholder=\"Add a note\"\n          fill\n          value={note}\n          onChange={handleNoteChange}\n          connectedRight={<Button disabled={note === ''}>Post</Button>}\n        />\n        </Stack.Item>\n      </Stack>\n      </div>\n      <List type=\"bullet\">\n        {(user.timeline || []).map((item, i) => (\n          <List.Item key={i}>\n            {toShortDate(item.create_time)} - {item.description}\n          </List.Item>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nfunction UserSettings({ user }) {\n  return (\n    <Card title=\"Settings\">\n      <Card.Section title=\"Login information\">\n        <Button plain>{user.email}</Button><br/>\n        <Button plain>Google</Button><br/>\n      </Card.Section>\n      <Card.Section title=\"Security\">\n        <p>...</p>\n      </Card.Section>\n    </Card>\n  );\n}\n\nfunction UserActions({ user }) {\n  return (\n    <Card title=\"Privacy\" subdued>\n      <Card.Section title=\"Request user data\">\n        <TextContainer>\n          <p>\n            Get a copy of this user's data by email so you can forward it to them.\n          </p>\n          <Button size=\"slim\">Request user data</Button>\n        </TextContainer>\n      </Card.Section>\n      <Card.Section title=\"Erase personal data\">\n        <TextContainer>\n          <p>\n            Ask to remove this user's personal information from the database.\n          </p>\n          <Button size=\"slim\">Erase personal data</Button>\n        </TextContainer>\n      </Card.Section>\n    </Card>\n  );\n}\n\nfunction UserTags({ user }) {\n  return (\n    <Card title=\"Tags\" subdued sectioned actions={[{ content: 'View all tags' }]}>\n      <TextField placeholder=\"VIP, pro, bot\"/>\n    </Card>\n  );\n}\n\nexport default function UserPage() {\n  let { id } = useParams();\n  const { loading, error, data } = useQueryFake(QUERY_USER, {\n    variables: { id: parseInt(id) }\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const user = data.user;\n\n  return (\n    <Page\n      breadcrumbs={[{ content: \"Users\", url: \"/users\" }]}\n      title={user.name}\n      // primaryAction={{content: 'Save', disabled: true}}\n      secondaryActions={[\n        {\n          content: \"Resend verification email\",\n          icon: InviteMinor\n        }\n      ]}\n      pagination={{\n        hasPrevious: id < 110,\n        hasNext: id > 101,\n      }}\n    >\n      <Layout>\n        <Layout.Section>\n          <UserDetails user={user} />\n          <AccountDetails user={user} />\n          <UserTimeline user={user} />\n          <PageActions\n            primaryAction={{ content: \"Save\" }}\n            secondaryActions={[{ content: \"Delete\", destructive: true }]}\n          />\n        </Layout.Section>\n        <Layout.Section secondary>\n          <UserSettings user={user} />\n          <UserActions user={user} />\n          <UserTags user={user} />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Page,\n} from \"@shopify/polaris\";\n\nexport default function NavigationPage() {\n  return (\n    <Page title={\"Navigation\"}>\n      <Card>\n      </Card>\n    </Page>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Badge,\n  Thumbnail,\n  Avatar,\n  PageActions,\n  ResourceList,\n  TextStyle,\n  Stack,\n  TextContainer,\n  DisplayText,\n  MediaCard,\n  VideoThumbnail,\n  Checkbox,\n  ContextualSaveBar,\n  Loading,\n  SkeletonPage,\n  SkeletonDisplayText,\n  SkeletonBodyText\n} from \"@shopify/polaris\";\nimport { InviteMinor } from \"@shopify/polaris-icons\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\n\nconst QUERY_SETTINGS = gql`\n  {\n    settingsItems(filter: { category: { eq: \"website\" } }) {\n      edges {\n        node {\n          id\n          json\n        }\n      }\n    }\n  }\n`;\n\nconst UPDATE_SETTINGS = gql`\n  mutation UpdateSettings($id: ID!, $json: String!) {\n    updateOneSettingsItem(input: { id: $id, update: { json: $json } }) {\n      id\n      json\n    }\n  }\n`;\n\nexport default function WebsitePreferencesPage() {\n  const { loading, error, data } = useQuery(QUERY_SETTINGS);\n\n  if (loading)\n    return (\n      <SkeletonPage title=\"Preferences\">\n        <Loading />\n        <Layout>\n          <Layout.Section>\n            <Card sectioned>\n              <TextContainer>\n                <SkeletonDisplayText size=\"small\" />\n                <SkeletonBodyText lines={9} />\n              </TextContainer>\n            </Card>\n          </Layout.Section>\n        </Layout>\n      </SkeletonPage>\n    );\n  // TODO - removed so we can have a preview of the page\n  // if (error)\n  //   return (\n  //     <Page title=\"Preferences\">\n  //       <Layout>\n  //         <Layout.Section>\n  //           <p>Ops, something went wrong. Refresh to try again.</p>\n  //         </Layout.Section>\n  //       </Layout>\n  //     </Page>\n  //   );\n\n  const settingsRecord = data && data.settingsItems.edges.length\n    ? data.settingsItems.edges[0].node\n    : {};\n  return <WebsitePreferencesPageChild settingsRecord={settingsRecord} />;\n}\n\nfunction checkField(key, settings, savedSettings) {\n  if (!savedSettings[key] && !settings[key]) return false;\n  return savedSettings[key] !== settings[key];\n}\n\nfunction WebsitePreferencesPageChild({ settingsRecord }) {\n  const FIELDS = [\n    // \"name\",  // read-only\n    \"title\",\n    \"description\",\n    \"domain\",\n    \"domain_redirect\",\n    \"google_analytics\",\n    \"google_tag_manager\",\n    \"password\",\n    \"password_enabled\",\n    \"password_message\"\n  ];\n  let settingsData = {};\n  try {\n    settingsData = JSON.parse(settingsRecord.json);\n  } catch (e) {\n    // pass\n  }\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const savedSettings = useRef({\n    ...settingsData\n  });\n\n  const [isDirty, setIsDirty] = useState(false);\n  const [settings, setSettings] = useState(savedSettings.current);\n\n  const handleDiscard = useCallback(() => {\n    setSettings(savedSettings.current);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    updateSettings({\n      variables: { id: settingsRecord.id, json: JSON.stringify(settings) }\n    });\n    savedSettings.current = settings;\n    setIsDirty(false);\n  }, [settings]);\n\n  const handleFieldChange = useCallback(\n    (field, value) => {\n      const newSettings = { ...settings };\n      newSettings[field] = value;\n      const isDirty = FIELDS.some(key =>\n        checkField(key, newSettings, savedSettings.current)\n      );\n      setSettings(newSettings);\n      setIsDirty(isDirty);\n    },\n    [settings]\n  );\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  return (\n    <Page title=\"Preferences\">\n      {contextualSaveBarMarkup}\n      <Layout>\n        <Layout.AnnotatedSection\n          title=\"SEO & Sharing\"\n          description=\"The title and meta description help define how your site shows up on search engines.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Homepage title\"\n                maxLength={70}\n                showCharacterCount\n                value={settings.title}\n                onChange={value => handleFieldChange(\"title\", value)}\n              />\n              <TextField\n                label=\"Homepage meta description\"\n                maxLength={320}\n                showCharacterCount\n                multiline={4}\n                value={settings.description}\n                onChange={value => handleFieldChange(\"description\", value)}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n\n        <Layout.AnnotatedSection\n          title=\"Google Analytics\"\n          description=\"Google Analytics enables you to track the visitors to your site and generates reports that will help you with your marketing.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Google Analytics account\"\n                placeholder=\"UA-xxxxxxxxx-x\"\n                value={settings.google_analytics}\n                onChange={value => handleFieldChange(\"google_analytics\", value)}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Facebook Pixel\"\n          description=\"Facebook Pixel helps you create ad campaigns to find new customers that look most like your customers.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Facebook Pixel ID\"\n                placeholder=\"123456789012345\"\n                value={settings.facebook_pixel}\n                onChange={value => handleFieldChange(\"facebook_pixel\", value)}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Google Tag Manager\"\n          description=\"Google Tag Manager lets you dynamically add additional tags to your page, such as Facebook pixel etc.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Google Tag Manager account\"\n                placeholder=\"GTM-xxxxxxx\"\n                value={settings.google_tag_manager}\n                onChange={value =>\n                  handleFieldChange(\"google_tag_manager\", value)\n                }\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.AnnotatedSection\n          title=\"Password protection\"\n          description=\"Enable the password to restrict access to your site. Only customers with the password can access it.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <Checkbox\n                label=\"Enable password\"\n                checked={settings.password_enabled}\n                onChange={value => handleFieldChange(\"password_enabled\", value)}\n              />\n              <TextField\n                label=\"Password\"\n                value={settings.password}\n                onChange={value => handleFieldChange(\"password\", value)}\n              />\n              <TextField\n                label=\"Message to your visitors\"\n                maxLength={2000}\n                showCharacterCount\n                multiline={4}\n                value={settings.password_message}\n                onChange={value => handleFieldChange(\"password_message\", value)}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n        <Layout.Section>\n          <PageActions\n            primaryAction={{\n              content: \"Save\",\n              onAction: handleSave,\n              disabled: !isDirty\n            }}\n          />\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n","import React, { useState, useCallback, useRef } from \"react\";\nimport {\n  Layout,\n  Page,\n  FooterHelp,\n  Card,\n  Button,\n  FormLayout,\n  TextField,\n  AccountConnection,\n  ChoiceList,\n  SettingToggle,\n  Toast,\n  ContextualSaveBar,\n  ActionList,\n  TopBar,\n  Navigation,\n  Loading,\n  SkeletonPage,\n  TextContainer,\n  SkeletonDisplayText,\n  SkeletonBodyText,\n  Modal,\n  AppProvider,\n  Frame\n} from \"@shopify/polaris\";\nimport {\n  ImportMinor,\n  ArrowLeftMinor,\n  ArrowRightMinor,\n  ChevronLeftMinor,\n  ChevronRightMinor,\n  HomeMajorMonotone,\n  OrdersMajorTwotone,\n  ConversationMinor,\n  CustomersMajorTwotone,\n  AnalyticsMajorTwotone,\n  MarketingMajorTwotone,\n  DiscountsMajorTwotone,\n  AppsMajorTwotone,\n  SettingsMajorTwotone,\n  BalanceMajorTwotone,\n  ThemesMajorTwotone,\n  BlogMajorTwotone,\n  LandingPageMajorTwotone,\n  NavigationMajorTwotone,\n  DnsSettingsMajorTwotone,\n  CashDollarMajorTwotone,\n  KeyMajorTwotone,\n} from \"@shopify/polaris-icons\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport {\n  BrowserRouter as Router,\n  Link as ReactRouterLink,\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport LeadListPage from \"./pages/LeadListPage\";\nimport AccountListPage from \"./pages/AccountListPage\";\nimport AccountPage from \"./pages/AccountPage\";\nimport AnalyticsPage from \"./pages/AnalyticsPage\";\nimport AppListPage from \"./pages/AppListPage\";\nimport DevelopersPage from \"./pages/DevelopersPage\";\nimport DiscountListPage from \"./pages/DiscountListPage\";\nimport HomePage from \"./pages/HomePage\";\nimport LandingPageListPage from \"./pages/LandingPageListPage\";\nimport LandingPagePage from \"./pages/LandingPagePage\";\nimport MarketingPage from \"./pages/MarketingPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport PostListPage from \"./pages/PostListPage\";\nimport PostPage from \"./pages/PostPage\";\nimport PricingPage from \"./pages/PricingPage\";\nimport PricingModelPage from \"./pages/PricingModelPage\";\nimport PricingPlanPage from \"./pages/PricingPlanPage\";\nimport ReportsPage from \"./pages/ReportsPage\";\nimport SettingsPage from \"./pages/SettingsPage\";\nimport SettingsGeneralPage from \"./pages/SettingsGeneralPage\";\nimport SettingsStaffPage from \"./pages/SettingsStaffPage\";\nimport SettingsLegalPage from \"./pages/SettingsLegalPage\";\nimport SettingsCheckoutPage from \"./pages/SettingsCheckoutPage\";\nimport SettingsPaymentsPage from \"./pages/SettingsPaymentsPage\";\nimport SettingsPayoutListPage from \"./pages/SettingsPayoutListPage\";\nimport SettingsPayoutPage from \"./pages/SettingsPayoutPage\";\nimport SettingsTransactionListPage from \"./pages/SettingsTransactionListPage\";\nimport SettingsNotificationPage from \"./pages/SettingsNotificationPage\";\nimport SettingsNotificationListPage from \"./pages/SettingsNotificationListPage\";\nimport SettingsLanguagesPage from \"./pages/SettingsLanguagesPage\";\nimport SettingsBillListPage from \"./pages/SettingsBillListPage\";\nimport SettingsBillPage from \"./pages/SettingsBillPage\";\nimport SettingsFileListPage from \"./pages/SettingsFileListPage\";\nimport ThemeListPage from \"./pages/ThemeListPage\";\nimport ThemePage from \"./pages/ThemePage\";\nimport UserListPage from \"./pages/UserListPage\";\nimport UserPage from \"./pages/UserPage\";\nimport WebsiteNavigationPage from \"./pages/WebsiteNavigationPage\";\nimport WebsitePreferencesPage from \"./pages/WebsitePreferencesPage\";\n\nimport \"@shopify/polaris/styles.css\";\nimport enTranslations from \"@shopify/polaris/locales/en.json\";\n\nconst IS_EXTERNAL_LINK_REGEX = /^(?:[a-z][a-z\\d+.-]*:|\\/\\/)/;\n\nfunction Link({ children, url = \"\", external, ref, ...rest }: any) {\n  // react-router only supports links to pages it can handle itself. It does not\n  // support arbirary links, so anything that is not a path-based link should\n  // use a reglar old `a` tag\n  if (external || IS_EXTERNAL_LINK_REGEX.test(url)) {\n    rest.target = \"_blank\";\n    rest.rel = \"noopener noreferrer\";\n    return (\n      <a href={url} {...rest}>\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <ReactRouterLink to={url} {...rest}>\n      {children}\n    </ReactRouterLink>\n  );\n}\n\nconst client = new ApolloClient({\n  uri: process.env.NODE_ENV === 'development' ? 'http://localhost:3000/graphql' : '/graphql',\n});\n\ninterface AccountProps {\n  onAction(): void;\n}\n\nfunction RouterSwitch() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/home\" component={HomePage} />\n      <Route exact path=\"/accounts\" component={AccountListPage} />\n      <Route exact path=\"/leads\" component={LeadListPage} />\n      <Route path=\"/accounts/:id\" component={AccountPage} />\n      <Route path=\"/analytics\" component={AnalyticsPage} />\n      <Route path=\"/reports\" component={ReportsPage} />\n      <Route path=\"/apps\" component={AppListPage} />\n      <Route path=\"/developers\" component={DevelopersPage} />\n      <Route path=\"/discounts\" component={DiscountListPage} />\n      <Route exact path=\"/pages\" component={LandingPageListPage} />\n      <Route exact path=\"/pages/:id\" component={LandingPagePage} />\n      <Route exact path=\"/marketing\" component={MarketingPage} />\n      <Route exact path=\"/pricing\" component={PricingPage} />\n      <Route exact path=\"/pricing/models\" component={PricingModelPage} />\n      <Route exact path=\"/pricing/plans/:id\" component={PricingPlanPage} />\n      <Route exact path=\"/posts\" component={PostListPage} />\n      <Route exact path=\"/posts/:id\" component={PostPage} />\n      <Route exact path=\"/settings\" component={SettingsPage} />\n      <Route exact path=\"/settings/general\" component={SettingsGeneralPage} />\n      <Route exact path=\"/settings/staff\" component={SettingsStaffPage} />\n      <Route exact path=\"/settings/legal\" component={SettingsLegalPage} />\n      <Route exact path=\"/settings/checkout\" component={SettingsCheckoutPage} />\n      <Route exact path=\"/settings/payments\" component={SettingsPaymentsPage} />\n      <Route exact path=\"/settings/payments/payouts\" component={SettingsPayoutListPage} />\n      <Route exact path=\"/settings/payments/payouts/:id\" component={SettingsPayoutPage} />\n      <Route exact path=\"/settings/payments/transactions\" component={SettingsTransactionListPage} />\n      <Route exact path=\"/settings/notifications\" component={SettingsNotificationListPage} />\n      <Route exact path=\"/settings/notifications/:id\" component={SettingsNotificationPage} />\n      <Route exact path=\"/settings/languages\" component={SettingsLanguagesPage} />\n      <Route exact path=\"/settings/bills\" component={SettingsBillListPage} />\n      <Route exact path=\"/settings/bills/:id\" component={SettingsBillPage} />\n      <Route exact path=\"/settings/files\" component={SettingsFileListPage} />\n      <Route exact path=\"/themes\" component={ThemeListPage} />\n      <Route exact path=\"/themes/:id\" component={ThemePage} />\n      <Route exact path=\"/navigation\" component={WebsiteNavigationPage} />\n      <Route exact path=\"/preferences\" component={WebsitePreferencesPage} />\n      <Route exact path=\"/users\" component={UserListPage} />\n      <Route path=\"/users/:id\" component={UserPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nfunction PageLayout() {\n  const defaultState = useRef({\n    emailFieldValue: \"dharma@jadedpixel.com\",\n    nameFieldValue: \"Jaded Pixel\"\n  });\n  const skipToContentRef = useRef(null);\n  const [toastActive, setToastActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [searchActive, setSearchActive] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [userMenuActive, setUserMenuActive] = useState(false);\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n  const [modalActive, setModalActive] = useState(false);\n  const [nameFieldValue, setNameFieldValue] = useState(\n    defaultState.current.nameFieldValue\n  );\n  const [emailFieldValue, setEmailFieldValue] = useState(\n    defaultState.current.emailFieldValue\n  );\n  const [storeName, setStoreName] = useState(\n    defaultState.current.nameFieldValue\n  );\n  const [supportSubject, setSupportSubject] = useState(\"\");\n  const [supportMessage, setSupportMessage] = useState(\"\");\n\n  const handleSubjectChange = useCallback(\n    value => setSupportSubject(value),\n    []\n  );\n  const handleMessageChange = useCallback(\n    value => setSupportMessage(value),\n    []\n  );\n  const handleDiscard = useCallback(() => {\n    setEmailFieldValue(defaultState.current.emailFieldValue);\n    setNameFieldValue(defaultState.current.nameFieldValue);\n    setIsDirty(false);\n  }, []);\n  const handleSave = useCallback(() => {\n    defaultState.current.nameFieldValue = nameFieldValue;\n    defaultState.current.emailFieldValue = emailFieldValue;\n\n    setIsDirty(false);\n    setToastActive(true);\n    setStoreName(defaultState.current.nameFieldValue);\n  }, [emailFieldValue, nameFieldValue]);\n  const handleNameFieldChange = useCallback(value => {\n    setNameFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleEmailFieldChange = useCallback(value => {\n    setEmailFieldValue(value);\n    value && setIsDirty(true);\n  }, []);\n  const handleSearchResultsDismiss = useCallback(() => {\n    setSearchActive(false);\n    setSearchValue(\"\");\n  }, []);\n  const handleSearchFieldChange = useCallback(value => {\n    setSearchValue(value);\n    setSearchActive(value.length > 0);\n  }, []);\n  const toggleToastActive = useCallback(\n    () => setToastActive(toastActive => !toastActive),\n    []\n  );\n  const toggleUserMenuActive = useCallback(\n    () => setUserMenuActive(userMenuActive => !userMenuActive),\n    []\n  );\n  const toggleMobileNavigationActive = useCallback(\n    () =>\n      setMobileNavigationActive(\n        mobileNavigationActive => !mobileNavigationActive\n      ),\n    []\n  );\n  const toggleIsLoading = useCallback(\n    () => setIsLoading(isLoading => !isLoading),\n    []\n  );\n  const toggleModalActive = useCallback(\n    () => setModalActive(modalActive => !modalActive),\n    []\n  );\n\n  const toastMarkup = toastActive ? (\n    <Toast onDismiss={toggleToastActive} content=\"Changes saved\" />\n  ) : null;\n\n  const userMenuActions = [\n    {\n      items: [\n        { content: \"Account\" },\n        { content: \"Logout\", url: '/../logout' },\n      ]\n    }\n  ];\n\n  const contextualSaveBarMarkup = isDirty ? (\n    <ContextualSaveBar\n      message=\"Unsaved changes\"\n      saveAction={{\n        onAction: handleSave\n      }}\n      discardAction={{\n        onAction: handleDiscard\n      }}\n    />\n  ) : null;\n\n  const userMenuMarkup = (\n    <TopBar.UserMenu\n      actions={userMenuActions}\n      name=\"Emanuele Cesena\"\n      initials=\"EC\"\n      open={userMenuActive}\n      onToggle={toggleUserMenuActive}\n    />\n  );\n\n  const searchResultsMarkup = (\n    <Card>\n      <ActionList\n        items={[\n          { content: \"Shopify help center\" },\n          { content: \"Community forums\" }\n        ]}\n      />\n    </Card>\n  );\n\n  const searchFieldMarkup = (\n    <TopBar.SearchField\n      onChange={handleSearchFieldChange}\n      value={searchValue}\n      placeholder=\"Search\"\n    />\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      userMenu={userMenuMarkup}\n      searchResultsVisible={searchActive}\n      searchField={searchFieldMarkup}\n      searchResults={searchResultsMarkup}\n      onSearchResultsDismiss={handleSearchResultsDismiss}\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const location = useLocation();\n  const navigationMarkup = (\n    <Navigation location=\"\">\n      <Navigation.Section\n        items={[\n          {\n            label: \"Home\",\n            icon: HomeMajorMonotone,\n            url: \"/\",\n            matches: location.pathname === \"/\"\n          },\n          {\n            label: \"Accounts\",\n            icon: BalanceMajorTwotone,\n            url: \"/accounts\",\n            matches: location.pathname.startsWith(\"/accounts\"),\n            subNavigationItems: [\n              {\n                label: \"Accounts\",\n                url: \"/accounts\",\n                matches: location.pathname.startsWith(\"/accounts\")\n              },\n              {\n                label: \"Leads\",\n                url: \"/leads\",\n                matches: location.pathname.startsWith(\"/leads\")\n              },\n            ],\n          },\n          {\n            label: \"Users\",\n            icon: CustomersMajorTwotone,\n            url: \"/users\",\n            matches: location.pathname.startsWith(\"/users\")\n          },\n        ]}\n      />\n      <Navigation.Section\n        fill={false}\n        separator\n        title=\"Website\"\n        items={[\n          {\n            label: \"Themes\",\n            icon: ThemesMajorTwotone,\n            url: \"/themes\",\n            matches: location.pathname.startsWith(\"/themes\")\n          },\n          {\n            label: \"Pricing\",\n            icon: CashDollarMajorTwotone,\n            url: \"/pricing\",\n            matches: location.pathname.startsWith(\"/pricing\")\n          },\n          {\n            label: \"Preferences\",\n            icon: DnsSettingsMajorTwotone,\n            url: \"/preferences\",\n            matches: location.pathname.startsWith(\"/preferences\")\n          },\n          {\n            label: \"Developers\",\n            icon: KeyMajorTwotone,\n            url: \"/developers\",\n            matches: location.pathname.startsWith(\"/developers\")\n          }\n        ]}\n      />\n      <Navigation.Section\n        fill\n        separator\n        title=\"Future\"\n        items={[\n          {\n            label: \"Analytics\",\n            icon: AnalyticsMajorTwotone,\n            url: \"/analytics\",\n            matches: location.pathname.startsWith(\"/analytics\"),\n            subNavigationItems: [\n              {\n                label: \"Analytics\",\n                url: \"/analytics\",\n                matches: location.pathname.startsWith(\"/analytics\")\n              },\n              {\n                label: \"Reports\",\n                url: \"/reports\",\n                matches: location.pathname.startsWith(\"/reports\")\n              },\n            ],\n          },\n          {\n            label: \"Ads\",\n            icon: MarketingMajorTwotone,\n            url: \"/marketing\",\n            matches: location.pathname.startsWith(\"/marketing\")\n          },\n          {\n            label: \"Blog posts\",\n            icon: BlogMajorTwotone,\n            url: \"/posts\",\n            matches: location.pathname.startsWith(\"/posts\")\n          },\n          {\n            label: \"Landing pages\",\n            icon: LandingPageMajorTwotone,\n            url: \"/pages\",\n            matches: location.pathname.startsWith(\"/pages\")\n          },\n          {\n            label: \"Navigation\",\n            icon: NavigationMajorTwotone,\n            url: \"/navigation\",\n            matches: location.pathname.startsWith(\"/navigation\")\n          },\n          {\n            label: \"Discounts\",\n            icon: DiscountsMajorTwotone,\n            url: \"/discounts\",\n            matches: location.pathname.startsWith(\"/discounts\")\n          },\n          {\n            label: \"Apps\",\n            icon: AppsMajorTwotone,\n            url: \"/apps\",\n            matches: location.pathname.startsWith(\"/apps\")\n          },\n        ]}\n      />\n      <Navigation.Section\n        items={[\n          {\n            label: \"Settings\",\n            icon: SettingsMajorTwotone,\n            url: \"/settings\",\n            matches: location.pathname.startsWith(\"/settings\")\n          }\n        ]}\n      />\n    </Navigation>\n  );\n\n  const loadingMarkup = isLoading ? <Loading /> : null;\n\n  const skipToContentTarget = (\n    <a id=\"SkipToContentTarget\" ref={skipToContentRef} tabIndex={-1} />\n  );\n\n  const actualPageMarkup = (\n    <Page title=\"Account\">\n      <Layout>\n        {skipToContentTarget}\n        <Layout.AnnotatedSection\n          title=\"Account details\"\n          description=\"Jaded Pixel will use this as your account information.\"\n        >\n          <Card sectioned>\n            <FormLayout>\n              <TextField\n                label=\"Full name\"\n                value={nameFieldValue}\n                onChange={handleNameFieldChange}\n              />\n              <TextField\n                type=\"email\"\n                label=\"Email\"\n                value={emailFieldValue}\n                onChange={handleEmailFieldChange}\n              />\n            </FormLayout>\n          </Card>\n        </Layout.AnnotatedSection>\n      </Layout>\n    </Page>\n  );\n\n  const loadingPageMarkup = (\n    <SkeletonPage>\n      <Layout>\n        <Layout.Section>\n          <Card sectioned>\n            <TextContainer>\n              <SkeletonDisplayText size=\"small\" />\n              <SkeletonBodyText lines={9} />\n            </TextContainer>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </SkeletonPage>\n  );\n\n  const pageMarkup = isLoading ? loadingPageMarkup : actualPageMarkup;\n\n  const modalMarkup = (\n    <Modal\n      open={modalActive}\n      onClose={toggleModalActive}\n      title=\"Contact support\"\n      primaryAction={{\n        content: \"Send\",\n        onAction: toggleModalActive\n      }}\n    >\n      <Modal.Section>\n        <FormLayout>\n          <TextField\n            label=\"Subject\"\n            value={supportSubject}\n            onChange={handleSubjectChange}\n          />\n          <TextField\n            label=\"Message\"\n            value={supportMessage}\n            onChange={handleMessageChange}\n            multiline\n          />\n        </FormLayout>\n      </Modal.Section>\n    </Modal>\n  );\n\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n    >\n      {contextualSaveBarMarkup}\n      {loadingMarkup}\n      <RouterSwitch />\n      {toastMarkup}\n      {modalMarkup}\n    </Frame>\n  );\n}\n\nexport default function App() {\n  const theme = {\n    colors: {\n      topBar: {\n        background: \"#357997\"\n      }\n    },\n    logo: {\n      width: 124,\n      topBarSource:\n        \"https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-color.svg?6215648040070010999\",\n      contextualSaveBarSource:\n        \"https://cdn.shopify.com/s/files/1/0446/6937/files/jaded-pixel-logo-gray.svg?6215648040070010999\",\n      url: \"\",\n      accessibilityLabel: \"Jaded Pixel\"\n    }\n  };\n\n  return (\n    <Router basename=\"/admin\">\n      <AppProvider theme={theme} i18n={enTranslations} linkComponent={Link}>\n        <ApolloProvider client={client}>\n          <PageLayout />\n        </ApolloProvider>\n      </AppProvider>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}